{
    "pipes": [
        {
            "name": "DateAgoPipe",
            "id": "pipe-DateAgoPipe-699cacdd6a2616453cbbcca155aa98ce89f21c252eca18e3772f0844892b20f7f49f9c73f879e2d63c8407323cb394b4626f6836dd7fa28f5d454e715c9b9706",
            "file": "src/app/shared/pipes/date-ago.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "pure": true,
            "ngname": "dateAgo",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core'\r\n\r\n@Pipe({\r\n  name: 'dateAgo',\r\n  pure: true,\r\n})\r\nexport class DateAgoPipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    if (value) {\r\n      const seconds = Math.floor((+new Date() - +new Date(value)) / 1000)\r\n      if (seconds < 29)\r\n        // less than 30 seconds ago will show as 'Just now'\r\n        return 'Just now'\r\n      const intervals: any = {\r\n        year: 31536000,\r\n        month: 2592000,\r\n        week: 604800,\r\n        day: 86400,\r\n        hour: 3600,\r\n        minute: 60,\r\n        second: 1,\r\n      }\r\n      let counter\r\n      for (const i in intervals) {\r\n        counter = Math.floor(seconds / intervals[i])\r\n        if (counter > 0)\r\n          if (counter === 1) {\r\n            return counter + ' ' + i + ' ago' // singular (1 day ago)\r\n          } else {\r\n            return counter + ' ' + i + 's ago' // plural (2 days ago)\r\n          }\r\n      }\r\n    }\r\n    return value\r\n  }\r\n}\r\n"
        },
        {
            "name": "LimitPipe",
            "id": "pipe-LimitPipe-4687778982934394a66aaf0b521c37d55cacf7b4e28a6d820324e7058ac3df66100e1d7ddd49137203fffd902bd9a8d0a0e6973bcdc9284818cd8d385068eef0",
            "file": "src/app/shared/pipes/textLimit.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "pure": true,
            "ngname": "limitpipe",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core'\r\n\r\n@Pipe({\r\n  name: 'limitpipe',\r\n  pure: true,\r\n})\r\nexport class LimitPipe {\r\n  transform(value: any, args?: any): any {\r\n    if (value.split(' ').length < args.length) return value\r\n    else return value.split(' ').splice(0, args.length).join(' ') + args.cocat\r\n  }\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "AppStateInterface",
            "id": "interface-AppStateInterface-3b9a4f1bc3aee162b38069bed578f63c04228119b7edd04f0b34e0d803a5a38b9c9e4f241b534d93ee9adea527ca64f4b3e554da224476e1d831e23868428990",
            "file": "src/app/shared/store/state/app.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ArticleStateInterface } from 'src/app/pages/article/store/state/article.State'\r\nimport { CreateArticleStateInterface } from 'src/app/pages/createArticle/store/state/createArticle.state'\r\nimport { EditArticleStateInterface } from 'src/app/pages/editArticle/store/state/editArticle.state'\r\nimport { UserProfileStateInterface } from 'src/app/pages/userProfile/store/state/userProfile.state'\r\nimport { AuthStateInterface } from '../../../pages/auth/store/state/auth.state'\r\nimport { CommentStateInterface } from '../../modules/articleComments/store/state/comment.state'\r\nimport { FeedStateInterface } from '../../modules/feed/store/state/feed.state'\r\n\r\nexport interface AppStateInterface {\r\n  auth: AuthStateInterface\r\n  article: ArticleStateInterface\r\n  createActicle: CreateArticleStateInterface\r\n  editActicle: EditArticleStateInterface\r\n  userProfile: UserProfileStateInterface\r\n  feed: FeedStateInterface\r\n  comment: CommentStateInterface\r\n}\r\n/**\r\nif you change this you have to change in the module and selectors\r\n\r\n\r\n*/\r\n",
            "properties": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticleStateInterface",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "auth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthStateInterface",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "comment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CommentStateInterface",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "createActicle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CreateArticleStateInterface",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "editActicle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EditArticleStateInterface",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "feed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FeedStateInterface",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "userProfile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserProfileStateInterface",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ArticleBlockInterface",
            "id": "interface-ArticleBlockInterface-0d0c04a075d94cd207ffe640186065d62effaa5b958554d6546914a7d947b2ec3b308ffd95e70f3f637c4af32b95b73cf2060c578b241ec110accbd6e36ca73c",
            "file": "src/app/shared/interfaces/articleBlock.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ArticleBlockInterface {\r\n  title: string | null\r\n  position: number\r\n  body: string | null\r\n  type: string\r\n  imageOne: string | null\r\n  imageTwo: string | null\r\n  customObject: boolean\r\n}\r\n",
            "properties": [
                {
                    "name": "body",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "customObject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "imageOne",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "imageTwo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ArticleInputInterface",
            "id": "interface-ArticleInputInterface-770824091bf253f9640bdb9789759cc6960f245897b308174a37ffaf0190ffb291877ce8e7ce312851de572ab3cc2b6f23375fdfa61870565919124205a3f421",
            "file": "src/app/shared/interfaces/articleInput.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ArticleBlockInterface } from './articleBlock.interface'\r\n\r\nexport interface ArticleInputInterface {\r\n  tags: string[]\r\n  articleDescription: string\r\n  articleTitle: string\r\n  articleImage: string | null\r\n  content: ArticleBlockInterface[]\r\n}\r\n",
            "properties": [
                {
                    "name": "articleDescription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "articleImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "articleTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticleBlockInterface[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "tags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ArticlesInterface",
            "id": "interface-ArticlesInterface-597f471472c31392ae5c1a5b086699ffc74088f17bff446a7a71ab59eddc75302a92929081b12c1dfe9794f48a442df296640ae8d2ad35ae3c0d5f6b6403c07a",
            "file": "src/app/shared/interfaces/articles.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ArticleBlockInterface } from './articleBlock.interface'\r\nimport { AurthorInterface } from './author.interface'\r\n\r\nexport interface ArticlesInterface {\r\n  id: number\r\n  author: AurthorInterface\r\n  creationDate: Date\r\n  favorited: boolean\r\n  favoriteCount: number\r\n  tags: string[]\r\n  articleDescription: string\r\n  articleTitle: string\r\n  articleImage: string | null\r\n  urlGen: string\r\n  content: ArticleBlockInterface[] | null\r\n}\r\n/*\r\n\r\n  position: number\r\n\r\n  type: number\r\n\r\n\r\n*/\r\n",
            "properties": [
                {
                    "name": "articleDescription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "articleImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "articleTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "author",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AurthorInterface",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticleBlockInterface[] | null",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "creationDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "favoriteCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "favorited",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "tags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "urlGen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ArticleStateInterface",
            "id": "interface-ArticleStateInterface-2c0109671e35764dcba6cb8fddf318894e2ffae68152670a4fa89fdf4465571d35789c2de1350985d02738a014ed199ed3548b83c4ea8c6325678e404ccedfb4",
            "file": "src/app/pages/article/store/state/article.State.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\n\r\nexport interface ArticleStateInterface {\r\n  isLoading: boolean\r\n  error: string | null\r\n  data: ArticlesInterface | null\r\n  isFavoriting: boolean\r\n}\r\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticlesInterface | null",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "isFavoriting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AurthorInterface",
            "id": "interface-AurthorInterface-bd0fd9736149b52dcdf2977eba05b4a679bcf6e937625afe542fe7aeba36a570a0e74a6b4c8a134aea843e8945c6811c89f5931ba2bda3ad1c7aa4b5d7623f6b",
            "file": "src/app/shared/interfaces/author.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AurthorInterface {\r\n  authorId: number\r\n  username: string\r\n  profileImg: string\r\n}\r\n",
            "properties": [
                {
                    "name": "authorId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "profileImg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AuthRegistrationRequestInterface",
            "id": "interface-AuthRegistrationRequestInterface-4cc99db99610e7faaedc9095b14f0e6273fb01e4b4a7fbc06371010b2707bbfc147fe26f159658a2e7b0d44d584f4e59f5743a56a3ae6d3e75dc23e08592c0a7",
            "file": "src/app/pages/auth/interfaces/auth.registration.request.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AuthRegistrationRequestInterface {\r\n  user: {\r\n    firstName: String\r\n    lastName: String | null\r\n    userName: String\r\n    password: String\r\n    email: String\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AuthResponseInterface",
            "id": "interface-AuthResponseInterface-f6ade2226e26f33097f95cb28dd5bba2557321a542a3761529a3a5c7fc98ad0cb2d2dc8d347e06898237a1bc0c308d98916ee3ccbb9432c90c3c88b56527926a",
            "file": "src/app/pages/auth/interfaces/authResponse.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AuthResponseInterface {\r\n  user: {\r\n    username: string | null\r\n    email: string | null\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AuthStateInterface",
            "id": "interface-AuthStateInterface-40390f8219a6e54a83995d423b388723983cb4018bb268044d2feca1f309766b3c91bff4836f6b8907d47c944847b73e14ef8820b3cde4508b6b2736752d0c53",
            "file": "src/app/pages/auth/store/state/auth.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BackendErrorsInterface } from 'src/app/shared/interfaces/backendError.interface'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\n\r\nexport interface AuthStateInterface {\r\n  isSubmitting: boolean\r\n  currentUser: CurrentUserInterface | null\r\n  isLoggedIn: boolean | null\r\n  validationErrors: BackendErrorsInterface | null\r\n  isLoading: boolean\r\n  isAdmin: boolean | null\r\n  isOwner: boolean | null\r\n}\r\n",
            "properties": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrentUserInterface | null",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "isAdmin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | null",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "isLoggedIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | null",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "isOwner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | null",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "isSubmitting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "validationErrors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BackendErrorsInterface | null",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AuthUpdateInterface",
            "id": "interface-AuthUpdateInterface-b3038d94ae39e10ca5c3f744639bea8fe48ed8410849f84509b7f26513b56ffc298b738e766273165023a78251a322118245f4b9835c5b71760a9ae645c559ff",
            "file": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AuthUpdateInterface {\r\n  user: {\r\n    password: updatepassword | undefined\r\n    email: updateEmail | undefined\r\n    bio: updateBio | undefined\r\n    userName: updateUserName | undefined\r\n    image: updateImage | undefined\r\n    lastName: updateLastName | undefined\r\n    firstName: updateFirstName | undefined\r\n  }\r\n}\r\ninterface updateEmail {\r\n  newEmail: string\r\n}\r\ninterface updatepassword {\r\n  newPassword: string\r\n  confirmPassword: string\r\n  oldPassword: string\r\n}\r\ninterface updateBio {\r\n  newBio: string\r\n}\r\ninterface updateImage {\r\n  newImage: string\r\n}\r\ninterface updateUserName {\r\n  newUserName: string\r\n}\r\ninterface updateFirstName {\r\n  newFirstName: string\r\n}\r\ninterface updateLastName {\r\n  newLastName: string\r\n}\r\n",
            "properties": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "BackendErrorsInterface",
            "id": "interface-BackendErrorsInterface-97b45fc9f5d77591bcf81793170db93e88297856f39fcf6bb6e5aff4932a360993556c50aef3f800016ecd77e38dbd39be3f9f6ae6460bf2244d20b822925be8",
            "file": "src/app/shared/interfaces/backendError.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BackendErrorsInterface {\r\n  errors: String[]\r\n}\r\n",
            "properties": [
                {
                    "name": "errors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String[]",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CommentArrayInterface",
            "id": "interface-CommentArrayInterface-19b13884e7d2da9d3b67d1429dd58836a24a6aa051cd90aa10a1476b0c0b4a2860ff1b1415d0e7dfe5075dc56cbefbb1bd46e46cad76c434f0be41977d770843",
            "file": "src/app/shared/interfaces/comment.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AurthorInterface } from './author.interface'\r\n\r\nexport interface CommentInterface {\r\n  commentFeed: {\r\n    comments: CommentArrayInterface[] | null\r\n    commentCount: number\r\n  }\r\n}\r\nexport interface CommentArrayInterface {\r\n  author: AurthorInterface\r\n  comment_id: number\r\n  content: string\r\n  creationDate: Date\r\n}\r\n",
            "properties": [
                {
                    "name": "author",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AurthorInterface",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "comment_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "creationDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CommentInterface",
            "id": "interface-CommentInterface-19b13884e7d2da9d3b67d1429dd58836a24a6aa051cd90aa10a1476b0c0b4a2860ff1b1415d0e7dfe5075dc56cbefbb1bd46e46cad76c434f0be41977d770843",
            "file": "src/app/shared/interfaces/comment.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AurthorInterface } from './author.interface'\r\n\r\nexport interface CommentInterface {\r\n  commentFeed: {\r\n    comments: CommentArrayInterface[] | null\r\n    commentCount: number\r\n  }\r\n}\r\nexport interface CommentArrayInterface {\r\n  author: AurthorInterface\r\n  comment_id: number\r\n  content: string\r\n  creationDate: Date\r\n}\r\n",
            "properties": [
                {
                    "name": "commentFeed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CommentStateInterface",
            "id": "interface-CommentStateInterface-8abefe9ace8adeb9c8de163ad49f67f491b1a0489cb28059ef78a910dca27509c60d94062a49c40afa2d2d370224b6ac0cf5bc9b17b7826faf5da608318d6d19",
            "file": "src/app/shared/modules/articleComments/store/state/comment.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommentInterface } from 'src/app/shared/interfaces/comment.interface'\r\n\r\nexport interface CommentStateInterface {\r\n  isLoading: boolean\r\n  error: string | null\r\n  data: CommentInterface | null\r\n}\r\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CommentInterface | null",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ContentTypes",
            "id": "interface-ContentTypes-e765b66d3d7c3084b2f5cf4595b5ef0ccd3a74a57e2adf569e4ca8b1dac82b54e6f72d6f1eb2ebc7c20f83111c4aecfee63bfc0d9b651f1e3e3c5bd5fc499f19",
            "file": "src/environments/environment.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ContentTypes {\r\n  title: string\r\n  image: string\r\n  body: string\r\n  imageImage: string\r\n  imageBody: string\r\n  bodyImage: string\r\n  textText: string\r\n}\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: 'http://104.254.15.78:8000/api',\r\n  baseMedia: 'http://104.254.15.78:8000/',\r\n\r\n  contentTypes: {\r\n    title: 'title',\r\n    image: 'image',\r\n    body: 'body',\r\n    imageImage: 'image-image',\r\n    imageBody: 'image-body',\r\n    bodyImage: 'body-image',\r\n    textText: 'text-text',\r\n  },\r\n\r\n  //comments: src\\app\\pages\\article\\components\\article\\article.component.ts\r\n  getCommentsApiUrl: `article/commentFeed/`, // (+ '${article.id}')\r\n\r\n  //globelFeed: src\\app\\pages\\articleFeed\\components\\globalFeed\\globalFeed.component.ts\r\n  globalFeedUrl: '/listArticle/',\r\n\r\n  //articleTagFeed.component.ts\r\n  tagFeedUrl: '/listArticle/', // (+ '${tagName}')\r\n\r\n  //auth: src\\app\\pages\\auth\\services\\auth.service.ts\r\n  authLoginApiUrl: '/usermanagement/login/',\r\n  authRegisterApiUrl: '/usermanagement/register/',\r\n  authAutoLoginApiUrl: '/usermanagement/autoLogin/',\r\n  authLogoutApiUrl: '/usermanagement/logout/',\r\n\r\n  //create article: src\\app\\pages\\createArticle\\services\\createArticle.service.ts\r\n  createArticleApiUrl: `/article/`,\r\n\r\n  //get article src\\app\\shared\\services\\article.service.ts\r\n  getArticleApiUrl: `/article/`, //(+ '${article.id}/')?chapter=3\r\n  favoriteApiUrl: `/article/favorite/`, //todo: not implemented (+ '${article.id}/'),\r\n\r\n  //edit article: src\\app\\pages\\editArticle\\services.ts\r\n  editArticleApiUrl: `/article/edit/`, // (+ '${article.id}/')\r\n\r\n  //delete article: src\\app\\pages\\deleteArticle\\services.ts\r\n  deleteArticleApiUrl: `/article/edit/`, //(+ '${article.id}/')\r\n\r\n  //comments src\\app\\shared\\modules\\articleComments\\services\\comment.service.ts\r\n  editCommentApiUrl: `/article/edit/comment/`, //todo: not implemented (+ '${comment.id}/')\r\n  DeleteCommentApiUrl: `/article/edit/comment/`, //todo: not implemented (+ '${comment.id}/')\r\n  postCommentApiUrl: `/article/comment/`, //todo: not implemented (+ '${article.id}/')\r\n\r\n  //TODO: create\r\n\r\n  favoritedFeedApiUrl: `/listArticle/favorite/`, //todo: not implemented (+ '${user.id}/'),\r\n  //userProfile:\r\n  authProfileApiUrl: '/usermanagement/profileUpdate/', //todo: not implemented\r\n\r\n  profileApiUrl: `/usermanagement/profile/`, //todo: not implemented (+ '${user.id}/'),\r\n}\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n//todo: change tags to listing of opations\r\n",
            "properties": [
                {
                    "name": "body",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "bodyImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "imageBody",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "imageImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "textText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CreateArticleStateInterface",
            "id": "interface-CreateArticleStateInterface-d2402f724b39ec529bd1b2586ecd17f1a14ef7e9f541c3ee9c1479b0c07f2e1908f5a5cdb09838fd2f85816ad9c18290f06d6328a08a26db943c49874bf55a8e",
            "file": "src/app/pages/createArticle/store/state/createArticle.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BackendErrorsInterface } from 'src/app/shared/interfaces/backendError.interface'\r\n\r\nexport interface CreateArticleStateInterface {\r\n  isSubmitting: boolean\r\n  validationErrors: BackendErrorsInterface | null\r\n}\r\n",
            "properties": [
                {
                    "name": "isSubmitting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "validationErrors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BackendErrorsInterface | null",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CurrentUserInputInterface",
            "id": "interface-CurrentUserInputInterface-6a1b6edc844c7c8ef08f4465311a95bb3c2a74987adadc216a96cac5ba62ab36a2872253076495a7f384f6e8156a92bc046063743ce75a350071e598d15024bf",
            "file": "src/app/shared/interfaces/currrentUserInputInterface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CurrentUserInterface } from './currentUser.interface'\r\n\r\nexport interface CurrentUserInputInterface extends CurrentUserInterface {\r\n  password: string\r\n}\r\n",
            "properties": [
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "CurrentUserInterface"
        },
        {
            "name": "CurrentUserInterface",
            "id": "interface-CurrentUserInterface-1de8b3edbd4bd0f9401a8c6c0bb92b36c2bddf2af1e22fc7047985157818b2b82013bd0bcdf4e8abdf06d24527840821b5a1dc90cadeb1f0fcdc1f90c9fe2d3a",
            "file": "src/app/shared/interfaces/currentUser.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface CurrentUserInterface {\r\n  currentUser: {\r\n    id: number\r\n    userName: string\r\n    image: string\r\n    bio: string\r\n    firstName: string\r\n    lastName: string | null\r\n    email: string\r\n    joinDate: string\r\n    token: string\r\n    lightMode: boolean\r\n    publicFavorite: boolean\r\n    admin: boolean\r\n    owner: boolean\r\n    password: string\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "EditArticleStateInterface",
            "id": "interface-EditArticleStateInterface-89fe2f96a64d7bebdba92d0cf184af97a3d458dd49023b072a6eee56f01dc4a759794dd35e24843c03053cbc16e7b2115bae5644bca62f4a320122aa2201b444",
            "file": "src/app/pages/editArticle/store/state/editArticle.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport { BackendErrorsInterface } from 'src/app/shared/interfaces/backendError.interface'\r\n\r\nexport interface EditArticleStateInterface {\r\n  article: ArticlesInterface | null\r\n  isLoading: boolean\r\n  isSubmitting: boolean\r\n  validationErrors: BackendErrorsInterface | null\r\n}\r\n",
            "properties": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticlesInterface | null",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "isSubmitting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "validationErrors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BackendErrorsInterface | null",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FeedStateInterface",
            "id": "interface-FeedStateInterface-4a8f6ff8f1adcdba09c42b6bb60e7e0ea60dcf5a93dc1fd8aa82307678498e613fe5969d14127ca0b76ab23641d77067f013bf2fb65ed37cf852ad0339150028",
            "file": "src/app/shared/modules/feed/store/state/feed.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { GetFeedResponceInterface } from '../../interfaces/getFeedResponce.interface'\r\n\r\nexport interface FeedStateInterface {\r\n  isLoading: boolean\r\n  error: string | null\r\n  data: GetFeedResponceInterface | null\r\n}\r\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GetFeedResponceInterface | null",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GetArticleResponseInterface",
            "id": "interface-GetArticleResponseInterface-90a0cfa0bf99779057475bca99be07ea4e5764db03045c0b63b2c4ee239adbca3a470b5c69129b91f9d0da2969852d1a81eeb0f82c8f42ed51089f927b8663d3",
            "file": "src/app/shared/interfaces/getArticleResponse.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ArticlesInterface } from './articles.interface'\r\n\r\nexport interface GetArticleResponseInterface {\r\n  article: ArticlesInterface\r\n}\r\nexport interface GetArticleResponseInterface2 {\r\n  footer: {\r\n    mainImg: string | null\r\n    altImg: string | null\r\n    mainTitle: string | null\r\n    altTitle: string | null\r\n    mainBody: string | null\r\n    altBody: string | null\r\n    socialLink: [] | null\r\n  }\r\n}\r\nexport interface SocialLinks {\r\n  mediaType: string\r\n  socialUrl: string\r\n}\r\n\r\nexport interface header {\r\n  title: string\r\n  img: string\r\n  linkNames: string[]\r\n}\r\n",
            "properties": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticlesInterface",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GetArticleResponseInterface2",
            "id": "interface-GetArticleResponseInterface2-90a0cfa0bf99779057475bca99be07ea4e5764db03045c0b63b2c4ee239adbca3a470b5c69129b91f9d0da2969852d1a81eeb0f82c8f42ed51089f927b8663d3",
            "file": "src/app/shared/interfaces/getArticleResponse.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ArticlesInterface } from './articles.interface'\r\n\r\nexport interface GetArticleResponseInterface {\r\n  article: ArticlesInterface\r\n}\r\nexport interface GetArticleResponseInterface2 {\r\n  footer: {\r\n    mainImg: string | null\r\n    altImg: string | null\r\n    mainTitle: string | null\r\n    altTitle: string | null\r\n    mainBody: string | null\r\n    altBody: string | null\r\n    socialLink: [] | null\r\n  }\r\n}\r\nexport interface SocialLinks {\r\n  mediaType: string\r\n  socialUrl: string\r\n}\r\n\r\nexport interface header {\r\n  title: string\r\n  img: string\r\n  linkNames: string[]\r\n}\r\n",
            "properties": [
                {
                    "name": "footer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GetFeedResponceInterface",
            "id": "interface-GetFeedResponceInterface-d0ac6d7a64c8ecb972e22c27b510a21ccbe839ac382e7c0607c6a3aa5920b50dba2c5a9461db0b386b0eb40c85fcf6031de94a11bebe2c0446e6ecf2c7988dde",
            "file": "src/app/shared/modules/feed/interfaces/getFeedResponce.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\n\r\nexport interface GetFeedResponceInterface {\r\n  articles: ArticlesInterface[]\r\n  articleCount: number\r\n}\r\n\r\n// { article:{\r\n//   title: string\r\n//   slug: string\r\n//   body: string\r\n//   createdAt: string\r\n//   updatedAt: string\r\n//   tagList: string[]\r\n\r\n//   description: string\r\n//   favorite: boolean\r\n//   favoriteCount: number\r\n//   }\r\n//   author: {\r\n//     username: string\r\n//     bio: string | null\r\n//     image: string\r\n//     following: boolean\r\n//   }\r\n// }\r\n",
            "properties": [
                {
                    "name": "articleCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "articles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticlesInterface[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GetUserProfileResponseInterface",
            "id": "interface-GetUserProfileResponseInterface-7a53605dfd7a63f04f164ed8cecaf21f77664a58357bb1fa2155f1bdda5097bf1af8e38c3401818044b00f9d8fd8c1ac707b2f855fc07956f71252cc6663118a",
            "file": "src/app/pages/userProfile/interfaces/getUserProfileResponse.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UserProfileInterface } from './userProfile.interface'\r\n\r\nexport interface GetUserProfileResponseInterface {\r\n  profile: UserProfileInterface\r\n}\r\n",
            "properties": [
                {
                    "name": "profile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserProfileInterface",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "header",
            "id": "interface-header-90a0cfa0bf99779057475bca99be07ea4e5764db03045c0b63b2c4ee239adbca3a470b5c69129b91f9d0da2969852d1a81eeb0f82c8f42ed51089f927b8663d3",
            "file": "src/app/shared/interfaces/getArticleResponse.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ArticlesInterface } from './articles.interface'\r\n\r\nexport interface GetArticleResponseInterface {\r\n  article: ArticlesInterface\r\n}\r\nexport interface GetArticleResponseInterface2 {\r\n  footer: {\r\n    mainImg: string | null\r\n    altImg: string | null\r\n    mainTitle: string | null\r\n    altTitle: string | null\r\n    mainBody: string | null\r\n    altBody: string | null\r\n    socialLink: [] | null\r\n  }\r\n}\r\nexport interface SocialLinks {\r\n  mediaType: string\r\n  socialUrl: string\r\n}\r\n\r\nexport interface header {\r\n  title: string\r\n  img: string\r\n  linkNames: string[]\r\n}\r\n",
            "properties": [
                {
                    "name": "img",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "linkNames",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "LoginRequestInterface",
            "id": "interface-LoginRequestInterface-85b61fba073741d6fd3913847cddad9e7e3ef66489cafc46d9af4084c9e8e737119f2ccd259b6f96aeaf3b82e157bd2929627f3232c71d7f9190e8e3c2a8f6a9",
            "file": "src/app/pages/auth/interfaces/auth.login.request.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface LoginRequestInterface {\r\n  user: {\r\n    userObject: String // can take either username or email V!!\r\n    password: String\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SaveArticleResponseInterface",
            "id": "interface-SaveArticleResponseInterface-65ab1d84ad94dd000b767d66ca76ab2feb7713badfad6f2100745460700afd5991bd8e4a3702a0403b867bc2f887c1486a2db511303a93c4edb51e8fb806b264",
            "file": "src/app/shared/interfaces/saveArticleResponse.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ArticlesInterface } from './articles.interface'\r\n\r\nexport interface SaveArticleResponseInterface {\r\n  article: ArticlesInterface\r\n}\r\n",
            "properties": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticlesInterface",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SocialLinks",
            "id": "interface-SocialLinks-90a0cfa0bf99779057475bca99be07ea4e5764db03045c0b63b2c4ee239adbca3a470b5c69129b91f9d0da2969852d1a81eeb0f82c8f42ed51089f927b8663d3",
            "file": "src/app/shared/interfaces/getArticleResponse.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ArticlesInterface } from './articles.interface'\r\n\r\nexport interface GetArticleResponseInterface {\r\n  article: ArticlesInterface\r\n}\r\nexport interface GetArticleResponseInterface2 {\r\n  footer: {\r\n    mainImg: string | null\r\n    altImg: string | null\r\n    mainTitle: string | null\r\n    altTitle: string | null\r\n    mainBody: string | null\r\n    altBody: string | null\r\n    socialLink: [] | null\r\n  }\r\n}\r\nexport interface SocialLinks {\r\n  mediaType: string\r\n  socialUrl: string\r\n}\r\n\r\nexport interface header {\r\n  title: string\r\n  img: string\r\n  linkNames: string[]\r\n}\r\n",
            "properties": [
                {
                    "name": "mediaType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "socialUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "State",
            "id": "interface-State-a8b94d2d1dd5cbe22e7c8c96ab428289374a613fce5b9d3b814bcb4719cc9f99d2bd9abf725af48bd9e906b2b770a9a15240cb46f9b569184d654a61956e0eca",
            "file": "src/app/shared/modules/feed/store/reducer/feed.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { routerNavigationAction } from '@ngrx/router-store'\r\nimport { Action, createReducer, on } from '@ngrx/store'\r\nimport { FeedStateInterface } from '../state/feed.state'\r\nimport * as feedActions from '../actions/getFeed.actions'\r\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity'\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\n\r\nexport interface State extends EntityState<ArticlesInterface> {\r\n  // additional entities state properties\r\n  isLoading: boolean\r\n  error: string | null\r\n  articleCount: number\r\n}\r\nexport const adapter: EntityAdapter<ArticlesInterface> = createEntityAdapter<\r\n  ArticlesInterface\r\n>()\r\nexport const initialState: State = adapter.getInitialState({\r\n  // additional entity state properties\r\n  isLoading: false,\r\n  error: null,\r\n  articleCount: 0,\r\n})\r\n\r\nexport const feedReducer = createReducer(\r\n  initialState,\r\n  on(feedActions.getFeedSuccesAction, (state, action) => {\r\n    state = Object.assign({\r\n      ...state,\r\n      isLoading: false,\r\n      articleCount: action.articleCount,\r\n      error: null,\r\n    })\r\n    return adapter.addMany(action.feed, state)\r\n  }),\r\n  on(feedActions.getFeedAction, (state) => {\r\n    //state = Object.assign({ ...state, isLoading: true, error: null}),\r\n    return adapter.removeAll({ ...state, isLoading: true, error: null })\r\n  }),\r\n  on(feedActions.getFeedFailureAction, (state, action) =>\r\n    Object.assign({ ...state, isLoading: false, error: action.errorMessage }),\r\n  ),\r\n)\r\n",
            "properties": [
                {
                    "name": "articleCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "EntityState"
        },
        {
            "name": "tagList",
            "id": "interface-tagList-0affcdd5c453b0ef6a2e97fa6e8e463fa8f1dd046c50d2f717e16ba6e6869992aaaae487e4b3e060cb147d6a9008dec55a85d3e57ed56637fe99ae687aed07c1",
            "file": "src/app/shared/modules/articleForms/services/tagSelector.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { map } from 'rxjs'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Injectable()\r\nexport class GetAvailableTagsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAvailableTags() {\r\n    const url = `http://104.254.15.78:8000/verification/taglist/`\r\n    console.log('hi')\r\n    return this.http.get<tagList>(url).pipe(\r\n      map((response: tagList) => {\r\n        return response.tags.MasterTagList\r\n      }),\r\n    )\r\n  }\r\n}\r\nexport interface tagList {\r\n  tags: {\r\n    MasterTagList: string[]\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "tags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "updateBio",
            "id": "interface-updateBio-b3038d94ae39e10ca5c3f744639bea8fe48ed8410849f84509b7f26513b56ffc298b738e766273165023a78251a322118245f4b9835c5b71760a9ae645c559ff",
            "file": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AuthUpdateInterface {\r\n  user: {\r\n    password: updatepassword | undefined\r\n    email: updateEmail | undefined\r\n    bio: updateBio | undefined\r\n    userName: updateUserName | undefined\r\n    image: updateImage | undefined\r\n    lastName: updateLastName | undefined\r\n    firstName: updateFirstName | undefined\r\n  }\r\n}\r\ninterface updateEmail {\r\n  newEmail: string\r\n}\r\ninterface updatepassword {\r\n  newPassword: string\r\n  confirmPassword: string\r\n  oldPassword: string\r\n}\r\ninterface updateBio {\r\n  newBio: string\r\n}\r\ninterface updateImage {\r\n  newImage: string\r\n}\r\ninterface updateUserName {\r\n  newUserName: string\r\n}\r\ninterface updateFirstName {\r\n  newFirstName: string\r\n}\r\ninterface updateLastName {\r\n  newLastName: string\r\n}\r\n",
            "properties": [
                {
                    "name": "newBio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "updateEmail",
            "id": "interface-updateEmail-b3038d94ae39e10ca5c3f744639bea8fe48ed8410849f84509b7f26513b56ffc298b738e766273165023a78251a322118245f4b9835c5b71760a9ae645c559ff",
            "file": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AuthUpdateInterface {\r\n  user: {\r\n    password: updatepassword | undefined\r\n    email: updateEmail | undefined\r\n    bio: updateBio | undefined\r\n    userName: updateUserName | undefined\r\n    image: updateImage | undefined\r\n    lastName: updateLastName | undefined\r\n    firstName: updateFirstName | undefined\r\n  }\r\n}\r\ninterface updateEmail {\r\n  newEmail: string\r\n}\r\ninterface updatepassword {\r\n  newPassword: string\r\n  confirmPassword: string\r\n  oldPassword: string\r\n}\r\ninterface updateBio {\r\n  newBio: string\r\n}\r\ninterface updateImage {\r\n  newImage: string\r\n}\r\ninterface updateUserName {\r\n  newUserName: string\r\n}\r\ninterface updateFirstName {\r\n  newFirstName: string\r\n}\r\ninterface updateLastName {\r\n  newLastName: string\r\n}\r\n",
            "properties": [
                {
                    "name": "newEmail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "updateFirstName",
            "id": "interface-updateFirstName-b3038d94ae39e10ca5c3f744639bea8fe48ed8410849f84509b7f26513b56ffc298b738e766273165023a78251a322118245f4b9835c5b71760a9ae645c559ff",
            "file": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AuthUpdateInterface {\r\n  user: {\r\n    password: updatepassword | undefined\r\n    email: updateEmail | undefined\r\n    bio: updateBio | undefined\r\n    userName: updateUserName | undefined\r\n    image: updateImage | undefined\r\n    lastName: updateLastName | undefined\r\n    firstName: updateFirstName | undefined\r\n  }\r\n}\r\ninterface updateEmail {\r\n  newEmail: string\r\n}\r\ninterface updatepassword {\r\n  newPassword: string\r\n  confirmPassword: string\r\n  oldPassword: string\r\n}\r\ninterface updateBio {\r\n  newBio: string\r\n}\r\ninterface updateImage {\r\n  newImage: string\r\n}\r\ninterface updateUserName {\r\n  newUserName: string\r\n}\r\ninterface updateFirstName {\r\n  newFirstName: string\r\n}\r\ninterface updateLastName {\r\n  newLastName: string\r\n}\r\n",
            "properties": [
                {
                    "name": "newFirstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "updateImage",
            "id": "interface-updateImage-b3038d94ae39e10ca5c3f744639bea8fe48ed8410849f84509b7f26513b56ffc298b738e766273165023a78251a322118245f4b9835c5b71760a9ae645c559ff",
            "file": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AuthUpdateInterface {\r\n  user: {\r\n    password: updatepassword | undefined\r\n    email: updateEmail | undefined\r\n    bio: updateBio | undefined\r\n    userName: updateUserName | undefined\r\n    image: updateImage | undefined\r\n    lastName: updateLastName | undefined\r\n    firstName: updateFirstName | undefined\r\n  }\r\n}\r\ninterface updateEmail {\r\n  newEmail: string\r\n}\r\ninterface updatepassword {\r\n  newPassword: string\r\n  confirmPassword: string\r\n  oldPassword: string\r\n}\r\ninterface updateBio {\r\n  newBio: string\r\n}\r\ninterface updateImage {\r\n  newImage: string\r\n}\r\ninterface updateUserName {\r\n  newUserName: string\r\n}\r\ninterface updateFirstName {\r\n  newFirstName: string\r\n}\r\ninterface updateLastName {\r\n  newLastName: string\r\n}\r\n",
            "properties": [
                {
                    "name": "newImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "updateLastName",
            "id": "interface-updateLastName-b3038d94ae39e10ca5c3f744639bea8fe48ed8410849f84509b7f26513b56ffc298b738e766273165023a78251a322118245f4b9835c5b71760a9ae645c559ff",
            "file": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AuthUpdateInterface {\r\n  user: {\r\n    password: updatepassword | undefined\r\n    email: updateEmail | undefined\r\n    bio: updateBio | undefined\r\n    userName: updateUserName | undefined\r\n    image: updateImage | undefined\r\n    lastName: updateLastName | undefined\r\n    firstName: updateFirstName | undefined\r\n  }\r\n}\r\ninterface updateEmail {\r\n  newEmail: string\r\n}\r\ninterface updatepassword {\r\n  newPassword: string\r\n  confirmPassword: string\r\n  oldPassword: string\r\n}\r\ninterface updateBio {\r\n  newBio: string\r\n}\r\ninterface updateImage {\r\n  newImage: string\r\n}\r\ninterface updateUserName {\r\n  newUserName: string\r\n}\r\ninterface updateFirstName {\r\n  newFirstName: string\r\n}\r\ninterface updateLastName {\r\n  newLastName: string\r\n}\r\n",
            "properties": [
                {
                    "name": "newLastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "updatepassword",
            "id": "interface-updatepassword-b3038d94ae39e10ca5c3f744639bea8fe48ed8410849f84509b7f26513b56ffc298b738e766273165023a78251a322118245f4b9835c5b71760a9ae645c559ff",
            "file": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AuthUpdateInterface {\r\n  user: {\r\n    password: updatepassword | undefined\r\n    email: updateEmail | undefined\r\n    bio: updateBio | undefined\r\n    userName: updateUserName | undefined\r\n    image: updateImage | undefined\r\n    lastName: updateLastName | undefined\r\n    firstName: updateFirstName | undefined\r\n  }\r\n}\r\ninterface updateEmail {\r\n  newEmail: string\r\n}\r\ninterface updatepassword {\r\n  newPassword: string\r\n  confirmPassword: string\r\n  oldPassword: string\r\n}\r\ninterface updateBio {\r\n  newBio: string\r\n}\r\ninterface updateImage {\r\n  newImage: string\r\n}\r\ninterface updateUserName {\r\n  newUserName: string\r\n}\r\ninterface updateFirstName {\r\n  newFirstName: string\r\n}\r\ninterface updateLastName {\r\n  newLastName: string\r\n}\r\n",
            "properties": [
                {
                    "name": "confirmPassword",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "newPassword",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "oldPassword",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "updateUserName",
            "id": "interface-updateUserName-b3038d94ae39e10ca5c3f744639bea8fe48ed8410849f84509b7f26513b56ffc298b738e766273165023a78251a322118245f4b9835c5b71760a9ae645c559ff",
            "file": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AuthUpdateInterface {\r\n  user: {\r\n    password: updatepassword | undefined\r\n    email: updateEmail | undefined\r\n    bio: updateBio | undefined\r\n    userName: updateUserName | undefined\r\n    image: updateImage | undefined\r\n    lastName: updateLastName | undefined\r\n    firstName: updateFirstName | undefined\r\n  }\r\n}\r\ninterface updateEmail {\r\n  newEmail: string\r\n}\r\ninterface updatepassword {\r\n  newPassword: string\r\n  confirmPassword: string\r\n  oldPassword: string\r\n}\r\ninterface updateBio {\r\n  newBio: string\r\n}\r\ninterface updateImage {\r\n  newImage: string\r\n}\r\ninterface updateUserName {\r\n  newUserName: string\r\n}\r\ninterface updateFirstName {\r\n  newFirstName: string\r\n}\r\ninterface updateLastName {\r\n  newLastName: string\r\n}\r\n",
            "properties": [
                {
                    "name": "newUserName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-dcc5c3137cd472dd0002d85b562efd23162e3eff53ca4438a6251e6c46e3b8299076255380d1d42f386510cb6f2cbaab49fa5b5f253be459cdc3869428c5c400",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "UserProfileInterface",
            "id": "interface-UserProfileInterface-768d25d1d2ee7a59b148f882a0b5f2871b2edc1120ae8d63938ac0965040b6721be99aa1d73f7910e3152602ded93c6db6912a28b473c5eb65df75a003fa4643",
            "file": "src/app/pages/userProfile/interfaces/userProfile.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserProfileInterface {\r\n  username: string\r\n  bio: string\r\n  image: string\r\n}\r\n",
            "properties": [
                {
                    "name": "bio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "UserProfileStateInterface",
            "id": "interface-UserProfileStateInterface-bb7bd6a5ac17ae868ff7a97d2411e5f041cef48c2330b0b0427284016e576b3d463bb46a96109ae417f585e931c073cd530d536e6536301538177edcbdc27963",
            "file": "src/app/pages/userProfile/store/state/userProfile.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UserProfileInterface } from '../../interfaces/userProfile.interface'\r\n\r\nexport interface UserProfileStateInterface {\r\n  data: UserProfileInterface | null\r\n  isLoading: boolean\r\n  error: string | null\r\n}\r\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserProfileInterface | null",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ArticleService",
            "id": "injectable-ArticleService-9179bd2deaaba47b7ecb15493dffda6c58dcb973210cefa90e262a2841cb7f7f98f562a89c2dead952e6a5a870df9916dc25f40d27b88567cf80d69abba36ae8",
            "file": "src/app/shared/services/article.service.ts",
            "properties": [
                {
                    "name": "fullUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "loggedIn$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [
                {
                    "name": "getArticle",
                    "args": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ArticlesInterface>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFavorite",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { map } from 'rxjs/operators'\r\n\r\nimport { environment } from 'src/environments/environment'\r\nimport { ArticlesInterface } from '../interfaces/articles.interface'\r\nimport { GetArticleResponseInterface } from '../interfaces/getArticleResponse.interface'\r\nimport { Store, select } from '@ngrx/store'\r\nimport { isLoggedInSelector } from 'src/app/pages/auth/store/selectors/auth.selectors'\r\n\r\n@Injectable()\r\nexport class ArticleService {\r\n  loggedIn$!: Observable<boolean>\r\n  fullUrl: string\r\n  constructor(private http: HttpClient, private store: Store) {\r\n    this.fullUrl = ''\r\n  }\r\n  getArticle(title: string): Observable<ArticlesInterface> {\r\n    this.fullUrl =\r\n      environment.baseUrl + environment.getArticleApiUrl + `${title}/`\r\n\r\n    return this.http.get<GetArticleResponseInterface>(this.fullUrl).pipe(\r\n      map((response: GetArticleResponseInterface) => {\r\n        return response.article\r\n      }),\r\n    )\r\n  }\r\n  onFavorite(id: number, type: boolean): Observable<{}> {\r\n    const url = environment.baseUrl + environment.favoriteApiUrl + `${id}/`\r\n    if (type === true) {\r\n      console.log(type)\r\n      return this.http.delete<{}>(url).pipe()\r\n    } else {\r\n      console.log(type)\r\n      return this.http.get<{}>(url).pipe()\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AuthService",
            "id": "injectable-AuthService-28177e0882b6b196031ccc2ac50acfa810e318e37d66efeca08c53b1685cb29f5de5341582a404ea8a0e8c625bd120d22a81fb2360377b84c9e1f8e2a377aa06",
            "file": "src/app/pages/auth/services/auth.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getCurrentUser",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<CurrentUserInterface>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUser",
                    "args": [
                        {
                            "name": "response",
                            "type": "CurrentUserInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "CurrentUserInterface",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "CurrentUserInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "data",
                            "type": "LoginRequestInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CurrentUserInterface>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "LoginRequestInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "data",
                            "type": "AuthRegistrationRequestInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CurrentUserInterface>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "AuthRegistrationRequestInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateCurrentUser",
                    "args": [
                        {
                            "name": "data",
                            "type": "AuthUpdateInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CurrentUserInterface>",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "AuthUpdateInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\nimport { map } from 'rxjs/operators'\r\n\r\nimport { environment } from 'src/environments/environment'\r\n\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\nimport { AuthRegistrationRequestInterface } from '../interfaces/auth.registration.request.interface'\r\nimport { LoginRequestInterface } from '../interfaces/auth.login.request.interface'\r\nimport { CurrentUserInputInterface } from 'src/app/shared/interfaces/currrentUserInputInterface'\r\nimport { AuthUpdateInterface } from '../interfaces/authUpdate.interface'\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUser(response: CurrentUserInterface) {\r\n    return response\r\n  }\r\n  register(\r\n    data: AuthRegistrationRequestInterface,\r\n  ): Observable<CurrentUserInterface> {\r\n    const url = environment.baseUrl + environment.authRegisterApiUrl\r\n    return this.http\r\n      .post<CurrentUserInterface>(url, data)\r\n      .pipe(map(this.getUser))\r\n  }\r\n\r\n  login(data: LoginRequestInterface): Observable<CurrentUserInterface> {\r\n    const url = environment.baseUrl + environment.authLoginApiUrl\r\n\r\n    return this.http\r\n      .post<CurrentUserInterface>(url, data)\r\n      .pipe(map(this.getUser))\r\n  }\r\n  getCurrentUser(): Observable<CurrentUserInterface> {\r\n    const url = environment.baseUrl + environment.authAutoLoginApiUrl\r\n    return this.http.get<CurrentUserInterface>(url).pipe(map(this.getUser))\r\n  }\r\n  updateCurrentUser(\r\n    data: AuthUpdateInterface,\r\n  ): Observable<CurrentUserInterface> {\r\n    const url = environment.baseUrl + '/usermanagement/profileUpdate/'\r\n    return this.http\r\n      .put<CurrentUserInterface>(url, data)\r\n      .pipe(map(this.getUser))\r\n  }\r\n\r\n  logout() {\r\n    const url = environment.baseUrl + environment.authLogoutApiUrl\r\n    return this.http.get(url)\r\n  }\r\n}\r\n/*\r\n AuthResponseInterface is type being returned\r\n LoginRequestInterface is type being sent\r\n*/\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CommentService",
            "id": "injectable-CommentService-02aea07e2e4279c107145189fcccabd9d908cde9a9c4f1b5cc12a0859ac72f8f295b5bcb99e241083d3d1b3ab8bde83390a0e8e551b0939ebd14a9af65279dd0",
            "file": "src/app/shared/modules/articleComments/services/comment.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "deleteComment",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CommentInterface>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getComment",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CommentInterface>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postComment",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "CommentInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CommentInterface>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "CommentInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateComment",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "CommentInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CommentInterface>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "CommentInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpEvent, HttpRequest } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\nimport { CommentInterface } from 'src/app/shared/interfaces/comment.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Injectable()\r\nexport class CommentService {\r\n  constructor(private http: HttpClient) {}\r\n  getComment(url: string): Observable<CommentInterface> {\r\n    const fullUrl = environment.baseUrl + url\r\n    return this.http.get<CommentInterface>(fullUrl)\r\n  }\r\n  updateComment(\r\n    url: string,\r\n    data: CommentInterface,\r\n  ): Observable<CommentInterface> {\r\n    const fullUrl = environment.baseUrl + url\r\n    return this.http.put<CommentInterface>(fullUrl, { comment: data })\r\n  }\r\n  deleteComment(url: string): Observable<CommentInterface> {\r\n    const fullUrl = environment.baseUrl + url\r\n    return this.http.delete<CommentInterface>(fullUrl)\r\n  }\r\n  postComment(\r\n    url: string,\r\n    data: CommentInterface,\r\n  ): Observable<CommentInterface> {\r\n    const fullUrl = environment.baseUrl + url\r\n    return this.http.post<CommentInterface>(fullUrl, { comment: data })\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CreateArticleEffect",
            "id": "injectable-CreateArticleEffect-65cc6c379f81ddd712ab7f0ffea34b9e661ac5a2772e17c348a78759961f77b0462fceba0e88148f21e645e204c0f641cd92643682b79dba00acf099693decbf",
            "file": "src/app/pages/createArticle/store/effects/createArticle.effects.ts",
            "properties": [
                {
                    "name": "createArticle$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(createArticleAction),\r\n      switchMap(({ articleInput }) => {\r\n        return this.createArticleService.createArticle(articleInput).pipe(\r\n          map((article: ArticlesInterface) => {\r\n            console.log(article)\r\n            return createArticleSuccessAction({ article })\r\n          }),\r\n\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(\r\n              createArticleFailureAction(),\r\n              // {\r\n              //   errors: errorResponse.error.errors,\r\n              // }\r\n            )\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "redirectAfterCreate$",
                    "defaultValue": "createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(createArticleSuccessAction),\r\n        tap(({ article }) => {\r\n          this.router.navigate(['/article', article.urlGen])\r\n        }),\r\n      ),\r\n    { dispatch: false },\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { createEffect, Actions, ofType } from '@ngrx/effects'\r\nimport { map, catchError, switchMap, tap } from 'rxjs/operators'\r\nimport { HttpErrorResponse } from '@angular/common/http'\r\nimport { Router } from '@angular/router'\r\nimport { of } from 'rxjs'\r\nimport {\r\n  createArticleAction,\r\n  createArticleSuccessAction,\r\n  createArticleFailureAction,\r\n} from '../actions/createArticle.actions'\r\nimport { CreateArticleService } from '../../services/createArticle.service'\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\n\r\n@Injectable()\r\nexport class CreateArticleEffect {\r\n  createArticle$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(createArticleAction),\r\n      switchMap(({ articleInput }) => {\r\n        return this.createArticleService.createArticle(articleInput).pipe(\r\n          map((article: ArticlesInterface) => {\r\n            console.log(article)\r\n            return createArticleSuccessAction({ article })\r\n          }),\r\n\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(\r\n              createArticleFailureAction(),\r\n              // {\r\n              //   errors: errorResponse.error.errors,\r\n              // }\r\n            )\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n\r\n  redirectAfterCreate$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(createArticleSuccessAction),\r\n        tap(({ article }) => {\r\n          this.router.navigate(['/article', article.urlGen])\r\n        }),\r\n      ),\r\n    { dispatch: false },\r\n  )\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private createArticleService: CreateArticleService,\r\n    private router: Router,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "createArticleService",
                        "type": "CreateArticleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "createArticleService",
                        "type": "CreateArticleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CreateArticleService",
            "id": "injectable-CreateArticleService-7f68da284161a4b4e66af8f8ba12176d486c240d87fbee12cb86194d36bf8b2bd2c8f6d61861fc2e7690357ae7944e428d019865f85f36e20781d10d054342cc",
            "file": "src/app/pages/createArticle/services/createArticle.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createArticle",
                    "args": [
                        {
                            "name": "articleInput",
                            "type": "ArticleInputInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ArticlesInterface>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "articleInput",
                            "type": "ArticleInputInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\nimport { map } from 'rxjs/operators'\r\n\r\nimport { ArticleInputInterface } from 'src/app/shared/interfaces/articleInput.interface'\r\n\r\nimport { environment } from 'src/environments/environment'\r\n\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport { GetArticleResponseInterface } from 'src/app/shared/interfaces/getArticleResponse.interface'\r\n\r\n@Injectable()\r\nexport class CreateArticleService {\r\n  constructor(private http: HttpClient) {}\r\n  createArticle(\r\n    articleInput: ArticleInputInterface,\r\n  ): Observable<ArticlesInterface> {\r\n    const url = environment.baseUrl + environment.createArticleApiUrl\r\n    //'/playground/importantData/' //\r\n    return this.http\r\n      .post<GetArticleResponseInterface>(url, { article: articleInput })\r\n      .pipe(\r\n        map((response: GetArticleResponseInterface) => {\r\n          return response.article\r\n        }),\r\n      )\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DeleteArticleEffect",
            "id": "injectable-DeleteArticleEffect-0aa9d3678732ae52fbd60560b6593ce4460012fb58bd6ee0abd11648ce284261fa6e8671f13b58fef12a2272d31bb2bdf3bf5a6f033e572e23e220e896626454",
            "file": "src/app/pages/article/store/effects/deleteArticle.effects.ts",
            "properties": [
                {
                    "name": "deleteArticle$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(deleteArticleAction),\r\n      switchMap(({ title }) => {\r\n        return this.deleteArticleService\r\n          .deleteArticle(title.split(' ').join('-'))\r\n          .pipe(\r\n            map(() => {\r\n              return deleteArticleSuccessAction()\r\n            }),\r\n            catchError(() => {\r\n              return of(deleteArticleFailureAction())\r\n            }),\r\n          )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { createEffect, Actions, ofType } from '@ngrx/effects'\r\nimport { map, catchError, switchMap, tap } from 'rxjs/operators'\r\nimport { of } from 'rxjs'\r\n\r\nimport { Router } from '@angular/router'\r\n\r\nimport {\r\n  deleteArticleAction,\r\n  deleteArticleSuccessAction,\r\n  deleteArticleFailureAction,\r\n} from '../actions/deleteArticle.actions'\r\nimport { DeleteArticleService } from '../../services/article.service'\r\n\r\n@Injectable()\r\nexport class DeleteArticleEffect {\r\n  deleteArticle$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(deleteArticleAction),\r\n      switchMap(({ title }) => {\r\n        return this.deleteArticleService\r\n          .deleteArticle(title.split(' ').join('-'))\r\n          .pipe(\r\n            map(() => {\r\n              return deleteArticleSuccessAction()\r\n            }),\r\n            catchError(() => {\r\n              return of(deleteArticleFailureAction())\r\n            }),\r\n          )\r\n      }),\r\n    ),\r\n  )\r\n  // redirectAfterDelete$ = createEffect(\r\n  //   () =>\r\n  //     this.actions$.pipe(\r\n  //       ofType(deleteArticleSuccessAction),\r\n  //       tap(() => {\r\n  //         this.router.navigate(['/'])\r\n  //       }),\r\n  //     ),\r\n  //   { dispatch: false },\r\n  //)\r\n  constructor(\r\n    private actions$: Actions,\r\n    private deleteArticleService: DeleteArticleService,\r\n    private router: Router,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "deleteArticleService",
                        "type": "DeleteArticleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "deleteArticleService",
                        "type": "DeleteArticleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DeleteArticleService",
            "id": "injectable-DeleteArticleService-e9d6e25b876694160e28e6aa84d74c25930ce641ed6adaef16088885f2506c8eba894204e2aebeeee72448fd217bde65543b22a3444dc016dac57b982e5a83ed",
            "file": "src/app/pages/article/services/article.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "deleteArticle",
                    "args": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Injectable()\r\nexport class DeleteArticleService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  deleteArticle(title: string): Observable<{}> {\r\n    const url =\r\n      environment.baseUrl + environment.deleteArticleApiUrl + `${title}/`\r\n    return this.http.delete<{}>(url)\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DeleteCommentEffect",
            "id": "injectable-DeleteCommentEffect-f4d231af9096777c5f646ab32a874076fdae36b27ce0031d8d51c053cc23f374398830956fe868a9879c80f413ebe60365893c8acc9d6f7d4fa26a163bf41e13",
            "file": "src/app/shared/modules/articleComments/store/effects/deleteComment.effects.ts",
            "properties": [
                {
                    "name": "getComment$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(deleteCommentAction),\r\n      switchMap(({ url }) => {\r\n        return this.commentService.deleteComment(url).pipe(\r\n          map((comment: CommentInterface) => {\r\n            return deleteCommentSuccesAction({ comment })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(deleteCommentFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { createEffect, ofType, Actions } from '@ngrx/effects'\r\nimport { of } from 'rxjs'\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators'\r\nimport { CommentInterface } from 'src/app/shared/interfaces/comment.interface'\r\nimport { CommentService } from '../../services/comment.service'\r\nimport {\r\n  deleteCommentAction,\r\n  deleteCommentFailureAction,\r\n  deleteCommentSuccesAction,\r\n} from '../actions/deleteComment.actions'\r\n\r\nimport {\r\n  getCommentAction,\r\n  getCommentFailureAction,\r\n  getCommentSuccesAction,\r\n} from '../actions/getComment.actions'\r\n\r\n/*\r\nEFFECTS must be declared in the module config\r\n\r\n\r\n*/\r\n@Injectable()\r\nexport class DeleteCommentEffect {\r\n  getComment$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(deleteCommentAction),\r\n      switchMap(({ url }) => {\r\n        return this.commentService.deleteComment(url).pipe(\r\n          map((comment: CommentInterface) => {\r\n            return deleteCommentSuccesAction({ comment })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(deleteCommentFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private commentService: CommentService,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "commentService",
                        "type": "CommentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "commentService",
                        "type": "CommentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "EditArticleService",
            "id": "injectable-EditArticleService-7d2255dd8989dc4f69b9e164ed09c079056fda0a5d92e3a69a76391bc5ae605c25ba2fe0affc3f21b77ccf73dbf35b1723476c3b4c5aace18b4301d87f2ee4cd",
            "file": "src/app/pages/editArticle/services/updateArticle.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "updateArticle",
                    "args": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "articleInput",
                            "type": "ArticleInputInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ArticlesInterface>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "articleInput",
                            "type": "ArticleInputInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\nimport { map } from 'rxjs/operators'\r\n\r\nimport { ArticleInputInterface } from 'src/app/shared/interfaces/articleInput.interface'\r\n\r\nimport { environment } from 'src/environments/environment'\r\n\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport { SaveArticleResponseInterface } from 'src/app/shared/interfaces/saveArticleResponse.interface'\r\n\r\n@Injectable()\r\nexport class EditArticleService {\r\n  constructor(private http: HttpClient) {}\r\n  updateArticle(\r\n    title: string,\r\n    articleInput: ArticleInputInterface,\r\n  ): Observable<ArticlesInterface> {\r\n    const fullUrl =\r\n      environment.baseUrl + environment.editArticleApiUrl + `${title}/`\r\n\r\n    return this.http\r\n      .put<SaveArticleResponseInterface>(fullUrl, { article: articleInput })\r\n      .pipe(\r\n        map((response: SaveArticleResponseInterface) => {\r\n          return response.article\r\n        }),\r\n      )\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FavoriteArticleEffect",
            "id": "injectable-FavoriteArticleEffect-38c65f300a98570fba4a7f05d151ca3fd141253f08a6bf34b99229a61a517a25853b1ece2b8caf45294624b59da04823b020f4793e1f054311765104299449b2",
            "file": "src/app/pages/article/store/effects/favorite.Article.effects.ts",
            "properties": [
                {
                    "name": "getArticle$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(favoriteArticleAction),\r\n      switchMap(({ myArticle }) => {\r\n        return this.sharedArticleService\r\n          .onFavorite(myArticle.id, myArticle.favorited)\r\n          .pipe(\r\n            map(() => {\r\n              let newArticle = this.updateFav(myArticle)\r\n              return favoriteArticleSuccessAction({ article: newArticle })\r\n            }),\r\n            catchError((error) => {\r\n              return of(favoriteArticleFailureAction())\r\n            }),\r\n          )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [
                {
                    "name": "updateFav",
                    "args": [
                        {
                            "name": "myArticle",
                            "type": "ArticlesInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ articleDescription: any; articleImage: any; articleTitle: any; author: any; content: any; creationDate: any; favorited: boolean; id: any; tags: any; favoriteCount: any; urlGen: any; }",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "myArticle",
                            "type": "ArticlesInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { createEffect, Actions, ofType } from '@ngrx/effects'\r\nimport { map, catchError, switchMap } from 'rxjs/operators'\r\nimport { of } from 'rxjs'\r\n\r\nimport { ArticleService as SharedArticleService } from 'src/app/shared/services/article.service'\r\n\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport {\r\n  favoriteArticleAction,\r\n  favoriteArticleFailureAction,\r\n  favoriteArticleSuccessAction,\r\n} from '../actions/favoriteArticle.actions'\r\n\r\n@Injectable()\r\nexport class FavoriteArticleEffect {\r\n  getArticle$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(favoriteArticleAction),\r\n      switchMap(({ myArticle }) => {\r\n        return this.sharedArticleService\r\n          .onFavorite(myArticle.id, myArticle.favorited)\r\n          .pipe(\r\n            map(() => {\r\n              let newArticle = this.updateFav(myArticle)\r\n              return favoriteArticleSuccessAction({ article: newArticle })\r\n            }),\r\n            catchError((error) => {\r\n              return of(favoriteArticleFailureAction())\r\n            }),\r\n          )\r\n      }),\r\n    ),\r\n  )\r\n  updateFav(myArticle: ArticlesInterface) {\r\n    let newArticle = {\r\n      articleDescription: myArticle.articleDescription,\r\n      articleImage: myArticle.articleImage,\r\n      articleTitle: myArticle.articleTitle,\r\n      author: myArticle.author,\r\n      content: myArticle.content,\r\n      creationDate: myArticle.creationDate,\r\n      favorited: !myArticle.favorited,\r\n      id: myArticle.id,\r\n      tags: myArticle.tags,\r\n      favoriteCount: myArticle.favoriteCount,\r\n      urlGen: myArticle.urlGen,\r\n    }\r\n\r\n    return newArticle\r\n  }\r\n  constructor(\r\n    private actions$: Actions,\r\n    private sharedArticleService: SharedArticleService,\r\n  ) {}\r\n}\r\nexport class updateArticle {}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sharedArticleService",
                        "type": "SharedArticleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 51,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sharedArticleService",
                        "type": "SharedArticleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FeedService",
            "id": "injectable-FeedService-3b3ab1051498d626a12e55ba0379f790338221ee7c0673a71c7eec7c58a5be48f630dc66877f2db5ae6eb0e4485a88a71ba843dc1f9ba5a2b59b0f49d612b3e3",
            "file": "src/app/shared/modules/feed/services/feed.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getFeed",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<GetFeedResponceInterface>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\nimport { environment } from 'src/environments/environment'\r\nimport { GetFeedResponceInterface } from '../interfaces/getFeedResponce.interface'\r\n\r\n@Injectable()\r\nexport class FeedService {\r\n  constructor(private http: HttpClient) {}\r\n  getFeed(url: string): Observable<GetFeedResponceInterface> {\r\n    console.log(url)\r\n    const fullUrl = environment.baseUrl + url\r\n    return this.http.get<GetFeedResponceInterface>(fullUrl)\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GetArticleEffect",
            "id": "injectable-GetArticleEffect-2e2befc5ce7416a4fe2e313d27180d68f035cacde8816347d841feb17d3862a9f5d7d01bc63d38dee2db4bc126dc69d1c2eadf2b1ff926d55564e2faa4336843",
            "file": "src/app/pages/article/store/effects/getArticle.effects.ts",
            "properties": [
                {
                    "name": "getArticle$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getArticleAction),\r\n      switchMap(({ title }) => {\r\n        const newtitle = title.split(' ').join('-')\r\n        console.warn(title)\r\n        return this.sharedArticleService.getArticle(newtitle).pipe(\r\n          //takes the slug add to a html string\r\n          map((article: ArticlesInterface) => {\r\n            return getArticleSuccessAction({ article })\r\n          }),\r\n\r\n          catchError(() => {\r\n            return of(getArticleFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "redirectAfterSubmit$",
                    "defaultValue": "createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(getArticleFailureAction),\r\n        tap(() => {\r\n          this.router.navigateByUrl('/')\r\n        }),\r\n      ),\r\n    { dispatch: false },\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { createEffect, Actions, ofType } from '@ngrx/effects'\r\nimport { map, catchError, switchMap, tap } from 'rxjs/operators'\r\nimport { of } from 'rxjs'\r\n\r\nimport { ArticleService as SharedArticleService } from 'src/app/shared/services/article.service'\r\nimport {\r\n  getArticleAction,\r\n  getArticleSuccessAction,\r\n  getArticleFailureAction,\r\n} from '../actions/getArticle.actions'\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport { Router } from '@angular/router'\r\n\r\n@Injectable()\r\nexport class GetArticleEffect {\r\n  getArticle$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getArticleAction),\r\n      switchMap(({ title }) => {\r\n        const newtitle = title.split(' ').join('-')\r\n        console.warn(title)\r\n        return this.sharedArticleService.getArticle(newtitle).pipe(\r\n          //takes the slug add to a html string\r\n          map((article: ArticlesInterface) => {\r\n            return getArticleSuccessAction({ article })\r\n          }),\r\n\r\n          catchError(() => {\r\n            return of(getArticleFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n  redirectAfterSubmit$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(getArticleFailureAction),\r\n        tap(() => {\r\n          this.router.navigateByUrl('/')\r\n        }),\r\n      ),\r\n    { dispatch: false },\r\n  )\r\n  constructor(\r\n    private actions$: Actions,\r\n    private sharedArticleService: SharedArticleService,\r\n    private router: Router,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sharedArticleService",
                        "type": "SharedArticleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sharedArticleService",
                        "type": "SharedArticleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GetArticleEffect",
            "id": "injectable-GetArticleEffect-f14b8b36cb67b82dc5d31e2d0f9a83c4405d741da5ffba7f5fac2be40e9ccca80e54b308bb88851dd9d22490ca81fdf4fdd438870c8ed05e610ade2e20a746ff-1",
            "file": "src/app/pages/editArticle/store/effects/getArticle.effects.ts",
            "properties": [
                {
                    "name": "getArticle$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getArticleAction),\r\n      switchMap(({ title }) => {\r\n        return this.sharedArticleService.getArticle(title).pipe(\r\n          map((article: ArticlesInterface) => {\r\n            console.log(article)\r\n\r\n            return getArticleSuccessAction({ article })\r\n          }),\r\n          catchError(() => {\r\n            return of(getArticleFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\r\n\r\nimport { ArticleService as ShardedArticleService } from 'src/app/shared/services/article.service'\r\n\r\nimport { of } from 'rxjs'\r\nimport { switchMap, map, catchError } from 'rxjs/operators'\r\n\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport {\r\n  getArticleAction,\r\n  getArticleFailureAction,\r\n  getArticleSuccessAction,\r\n} from '../actions/getArticle.actions'\r\n\r\n@Injectable()\r\nexport class GetArticleEffect {\r\n  getArticle$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getArticleAction),\r\n      switchMap(({ title }) => {\r\n        return this.sharedArticleService.getArticle(title).pipe(\r\n          map((article: ArticlesInterface) => {\r\n            console.log(article)\r\n\r\n            return getArticleSuccessAction({ article })\r\n          }),\r\n          catchError(() => {\r\n            return of(getArticleFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private sharedArticleService: ShardedArticleService,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sharedArticleService",
                        "type": "ShardedArticleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sharedArticleService",
                        "type": "ShardedArticleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "GetArticleEffect-1"
        },
        {
            "name": "GetAvailableTagsService",
            "id": "injectable-GetAvailableTagsService-0affcdd5c453b0ef6a2e97fa6e8e463fa8f1dd046c50d2f717e16ba6e6869992aaaae487e4b3e060cb147d6a9008dec55a85d3e57ed56637fe99ae687aed07c1",
            "file": "src/app/shared/modules/articleForms/services/tagSelector.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getAvailableTags",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { map } from 'rxjs'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Injectable()\r\nexport class GetAvailableTagsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAvailableTags() {\r\n    const url = `http://104.254.15.78:8000/verification/taglist/`\r\n    console.log('hi')\r\n    return this.http.get<tagList>(url).pipe(\r\n      map((response: tagList) => {\r\n        return response.tags.MasterTagList\r\n      }),\r\n    )\r\n  }\r\n}\r\nexport interface tagList {\r\n  tags: {\r\n    MasterTagList: string[]\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GetCommentEffect",
            "id": "injectable-GetCommentEffect-9bd6f7504c009c7be7f01789490a27ec076aa358b2a773b0a1d0315d06e7f9064dd4139c092eb465287744c84316ac111b23ab982643fd323400feb1c97b9ad5",
            "file": "src/app/shared/modules/articleComments/store/effects/getComment.effects.ts",
            "properties": [
                {
                    "name": "getComment$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getCommentAction),\r\n      switchMap(({ url }) => {\r\n        return this.commentService.getComment(url).pipe(\r\n          map((comment: CommentInterface) => {\r\n            console.log(comment)\r\n            return getCommentSuccesAction({ comment })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(getCommentFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { createEffect, ofType, Actions } from '@ngrx/effects'\r\nimport { of } from 'rxjs'\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators'\r\nimport { CommentInterface } from 'src/app/shared/interfaces/comment.interface'\r\nimport { CommentService } from '../../services/comment.service'\r\n\r\nimport {\r\n  getCommentAction,\r\n  getCommentFailureAction,\r\n  getCommentSuccesAction,\r\n} from '../actions/getComment.actions'\r\n\r\n/*\r\nEFFECTS must be declared in the module config\r\n\r\n\r\n*/\r\n@Injectable()\r\nexport class GetCommentEffect {\r\n  getComment$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getCommentAction),\r\n      switchMap(({ url }) => {\r\n        return this.commentService.getComment(url).pipe(\r\n          map((comment: CommentInterface) => {\r\n            console.log(comment)\r\n            return getCommentSuccesAction({ comment })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(getCommentFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private commentService: CommentService,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "commentService",
                        "type": "CommentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "commentService",
                        "type": "CommentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GetCurrentUserEffect",
            "id": "injectable-GetCurrentUserEffect-5d2bf93b045cb885b2258eadfe9562c2b324e35cb2090cc6b8924e67252efbaf2c83ddbbbddd720d2a0e72d93781e66ac6650834dd8ef7ee4b43fef25b66d7d8",
            "file": "src/app/pages/auth/store/effects/auth.getCurrentUser.effects.ts",
            "properties": [
                {
                    "name": "getCurrentUser$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getCurrentUserAction),\r\n      switchMap(() => {\r\n        const token = this.persistanceService.get('accessToken')\r\n        if (!token) {\r\n          return of(getCurrentUserFailureAction())\r\n        }\r\n        return this.authService.getCurrentUser().pipe(\r\n          map((currentUser: CurrentUserInterface) => {\r\n            this.persistanceService.set(\r\n              'accessToken',\r\n              currentUser.currentUser.token,\r\n            )\r\n            return getCurrentUserSuccessAction({ currentUser })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            console.log(errorResponse)\r\n            if (errorResponse.error.detail === 'Invalid token.') {\r\n              this.persistanceService.set('accessToken', '')\r\n            }\r\n            return of(getCurrentUserFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { createEffect, ofType, Actions } from '@ngrx/effects'\r\nimport { of } from 'rxjs'\r\nimport { catchError, map, switchMap } from 'rxjs/operators'\r\nimport { PersistanceService } from 'src/app/shared/services/persistance.service'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\nimport { AuthService } from '../../services/auth.service'\r\nimport {\r\n  getCurrentUserAction,\r\n  getCurrentUserSuccessAction,\r\n  getCurrentUserFailureAction,\r\n} from '../actions/auth.getCurrentUser.actions'\r\n/*\r\nEFFECTS must be declared in the module config\r\n\r\n\r\n*/\r\n@Injectable()\r\nexport class GetCurrentUserEffect {\r\n  getCurrentUser$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getCurrentUserAction),\r\n      switchMap(() => {\r\n        const token = this.persistanceService.get('accessToken')\r\n        if (!token) {\r\n          return of(getCurrentUserFailureAction())\r\n        }\r\n        return this.authService.getCurrentUser().pipe(\r\n          map((currentUser: CurrentUserInterface) => {\r\n            this.persistanceService.set(\r\n              'accessToken',\r\n              currentUser.currentUser.token,\r\n            )\r\n            return getCurrentUserSuccessAction({ currentUser })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            console.log(errorResponse)\r\n            if (errorResponse.error.detail === 'Invalid token.') {\r\n              this.persistanceService.set('accessToken', '')\r\n            }\r\n            return of(getCurrentUserFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n  constructor(\r\n    private actions$: Actions,\r\n    private authService: AuthService,\r\n    private persistanceService: PersistanceService,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "persistanceService",
                        "type": "PersistanceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "persistanceService",
                        "type": "PersistanceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GetFeedEffect",
            "id": "injectable-GetFeedEffect-a10797b75d4e337b076aa20e2bfedc795acdface825a0ad78690e230872338a7b058ebf5ac50e937cd8f9da457be147d36ef7c43052efd70409f33241fb489b9",
            "file": "src/app/shared/modules/feed/store/effects/getFeed.effects.ts",
            "properties": [
                {
                    "name": "getFeed$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getFeedAction),\r\n      switchMap(({ url }) => {\r\n        return this.feedService.getFeed(url).pipe(\r\n          map((data: GetFeedResponceInterface) =>\r\n            getFeedSuccesAction({\r\n              feed: data.articles,\r\n              articleCount: data.articleCount,\r\n            }),\r\n          ),\r\n          catchError((errorResponse: HttpErrorResponse) =>\r\n            of(getFeedFailureAction(errorResponse.error)),\r\n          ),\r\n        )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { createEffect, ofType, Actions } from '@ngrx/effects'\r\nimport { of } from 'rxjs'\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators'\r\nimport { FeedService } from '../../services/feed.service'\r\nimport { GetFeedResponceInterface } from '../../interfaces/getFeedResponce.interface'\r\nimport {\r\n  getFeedAction,\r\n  getFeedFailureAction,\r\n  getFeedSuccesAction,\r\n} from '../actions/getFeed.actions'\r\n\r\n/*\r\nEFFECTS must be declared in the module config\r\n\r\n\r\n*/\r\n@Injectable()\r\nexport class GetFeedEffect {\r\n  getFeed$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getFeedAction),\r\n      switchMap(({ url }) => {\r\n        return this.feedService.getFeed(url).pipe(\r\n          map((data: GetFeedResponceInterface) =>\r\n            getFeedSuccesAction({\r\n              feed: data.articles,\r\n              articleCount: data.articleCount,\r\n            }),\r\n          ),\r\n          catchError((errorResponse: HttpErrorResponse) =>\r\n            of(getFeedFailureAction(errorResponse.error)),\r\n          ),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n\r\n  constructor(private actions$: Actions, private feedService: FeedService) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "feedService",
                        "type": "FeedService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "feedService",
                        "type": "FeedService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GetTagEffect",
            "id": "injectable-GetTagEffect-599c44fcac898d0e9a0119a4bee95a66350fa9c793fd8dbf0c6f3686cfd6f19d97f1b108f2a691e7825f73b27f0d5c81cc6c90a5a5b063797f1187052f219178",
            "file": "src/app/shared/modules/articleForms/components/store/effects/getTag.effects.ts",
            "properties": [
                {
                    "name": "getFeed$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getTagAction),\r\n      switchMap(() => {\r\n        return this.getAvailableTagsService.getAvailableTags().pipe(\r\n          map((tags: any) => {\r\n            console.log(tags)\r\n            return getTagSuccessAction({ tags })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            console.log(errorResponse)\r\n            return of(getTagFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { createEffect, ofType, Actions } from '@ngrx/effects'\r\nimport { of } from 'rxjs'\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators'\r\n\r\nimport { GetAvailableTagsService } from '../../../services/tagSelector.service'\r\nimport {\r\n  getTagAction,\r\n  getTagFailureAction,\r\n  getTagSuccessAction,\r\n} from '../actions/getTags.actions'\r\n\r\n/*\r\nEFFECTS must be declared in the module config\r\n\r\n\r\n*/\r\n@Injectable()\r\nexport class GetTagEffect {\r\n  getFeed$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getTagAction),\r\n      switchMap(() => {\r\n        return this.getAvailableTagsService.getAvailableTags().pipe(\r\n          map((tags: any) => {\r\n            console.log(tags)\r\n            return getTagSuccessAction({ tags })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            console.log(errorResponse)\r\n            return of(getTagFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private getAvailableTagsService: GetAvailableTagsService,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "getAvailableTagsService",
                        "type": "GetAvailableTagsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "getAvailableTagsService",
                        "type": "GetAvailableTagsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GetUserProfileEffect",
            "id": "injectable-GetUserProfileEffect-d8c5c2ebdeabbf8344fe4cdeecbe5fedd5a52131340f68ef28bbe95a6e4d73f50e39e99f9254c63173b98c341739d7f638587ac1b2b353106fd05071df8e9f29",
            "file": "src/app/pages/userProfile/store/effects/getUserProfile.effects.ts",
            "properties": [
                {
                    "name": "getUserProfile$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getUserProfileAction),\r\n      switchMap(({ slug }) => {\r\n        return this.userProfileService.getUserProfile(slug).pipe(\r\n          map((userProfile: UserProfileInterface) => {\r\n            return getUserProfileSuccessAction({ userProfile })\r\n          }),\r\n\r\n          catchError(() => {\r\n            return of(getUserProfileFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { createEffect, Actions, ofType } from '@ngrx/effects'\r\nimport { map, catchError, switchMap } from 'rxjs/operators'\r\nimport { of } from 'rxjs'\r\n\r\nimport { UserProfileService } from '../../services/userProfile.service'\r\nimport {\r\n  getUserProfileAction,\r\n  getUserProfileSuccessAction,\r\n  getUserProfileFailureAction,\r\n} from '../actions/getUserProfile.actions'\r\nimport { UserProfileInterface } from '../../interfaces/userProfile.interface'\r\n\r\n@Injectable()\r\nexport class GetUserProfileEffect {\r\n  getUserProfile$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(getUserProfileAction),\r\n      switchMap(({ slug }) => {\r\n        return this.userProfileService.getUserProfile(slug).pipe(\r\n          map((userProfile: UserProfileInterface) => {\r\n            return getUserProfileSuccessAction({ userProfile })\r\n          }),\r\n\r\n          catchError(() => {\r\n            return of(getUserProfileFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private userProfileService: UserProfileService,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userProfileService",
                        "type": "UserProfileService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LoginEffect",
            "id": "injectable-LoginEffect-eb79fcafe94e537888b4be62e9566e8d30a565481b0559e60d0bcab55ab8ec559a35c85952d92b58c03a6f9254a64c29fa2ee47ca77be5cf1589e3590a6e524f",
            "file": "src/app/pages/auth/store/effects/auth.login.effects.ts",
            "properties": [
                {
                    "name": "login$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(loginAction),\r\n      switchMap(({ payload }) => {\r\n        return this.authService.login(payload).pipe(\r\n          map((currentUser: CurrentUserInterface) => {\r\n            this.persistanceService.set(\r\n              'accessToken',\r\n              currentUser.currentUser.token,\r\n            )\r\n            return loginSuccessAction({ currentUser })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            console.log(errorResponse.error.errors)\r\n            return of(\r\n              loginFailureAction({ errors: errorResponse.error.errors }),\r\n            )\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "redirectAfterSubmit$",
                    "defaultValue": "createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(loginSuccessAction),\r\n        tap(() => {\r\n          this.router.navigateByUrl('/')\r\n        }),\r\n      ),\r\n    { dispatch: false },\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "redirectEmailFailure$",
                    "defaultValue": "createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(emailValFailureAction),\r\n        tap(() => {\r\n          this.router.navigateByUrl('/emailvalidation')\r\n        }),\r\n      ),\r\n    { dispatch: false },\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { Router } from '@angular/router'\r\nimport { createEffect, ofType, Actions } from '@ngrx/effects'\r\nimport { of } from 'rxjs'\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators'\r\nimport { PersistanceService } from 'src/app/shared/services/persistance.service'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\nimport { AuthService } from '../../services/auth.service'\r\nimport {\r\n  emailValFailureAction,\r\n  loginAction,\r\n  loginFailureAction,\r\n  loginSuccessAction,\r\n} from '../actions/auth.login.actions'\r\n/*\r\nEFFECTS must be declared in the module config\r\n\r\n\r\n*/\r\n@Injectable()\r\nexport class LoginEffect {\r\n  login$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(loginAction),\r\n      switchMap(({ payload }) => {\r\n        return this.authService.login(payload).pipe(\r\n          map((currentUser: CurrentUserInterface) => {\r\n            this.persistanceService.set(\r\n              'accessToken',\r\n              currentUser.currentUser.token,\r\n            )\r\n            return loginSuccessAction({ currentUser })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            console.log(errorResponse.error.errors)\r\n            return of(\r\n              loginFailureAction({ errors: errorResponse.error.errors }),\r\n            )\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n  redirectAfterSubmit$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(loginSuccessAction),\r\n        tap(() => {\r\n          this.router.navigateByUrl('/')\r\n        }),\r\n      ),\r\n    { dispatch: false },\r\n  )\r\n  redirectEmailFailure$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(emailValFailureAction),\r\n        tap(() => {\r\n          this.router.navigateByUrl('/emailvalidation')\r\n        }),\r\n      ),\r\n    { dispatch: false },\r\n  )\r\n  constructor(\r\n    private actions$: Actions,\r\n    private authService: AuthService,\r\n    private persistanceService: PersistanceService,\r\n    private router: Router,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "persistanceService",
                        "type": "PersistanceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 64,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "persistanceService",
                        "type": "PersistanceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LogoutEffect",
            "id": "injectable-LogoutEffect-f512b9400ad495926499acd87281f893b80d99829248a15cdff94fe2356ff87cc10f8e55377ff31bb0752b4f9bb7d2f6008770bc578427c2e65faf19f0b1be36",
            "file": "src/app/pages/auth/store/effects/auth.logout.effects.ts",
            "properties": [
                {
                    "name": "logout$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(logoutAction),\r\n      switchMap(() => {\r\n        return this.authService.logout().pipe(\r\n          map(() => {\r\n            this.persistanceService.set('accessToken', '')\r\n            this.router.navigateByUrl('/')\r\n            return logoutSuccessAction()\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            console.log(errorResponse.error.detail)\r\n            if (errorResponse.error.detail === 'Invalid token.') {\r\n              this.persistanceService.set('accessToken', '')\r\n              this.router.navigateByUrl('/')\r\n            }\r\n            return of(logoutFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { Router } from '@angular/router'\r\nimport { createEffect, ofType, Actions } from '@ngrx/effects'\r\nimport { of } from 'rxjs'\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators'\r\nimport { PersistanceService } from 'src/app/shared/services/persistance.service'\r\nimport { AuthService } from '../../services/auth.service'\r\n\r\nimport {\r\n  logoutAction,\r\n  logoutFailureAction,\r\n  logoutSuccessAction,\r\n} from '../actions/auth.sync.actions'\r\n\r\n@Injectable()\r\nexport class LogoutEffect {\r\n  logout$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(logoutAction),\r\n      switchMap(() => {\r\n        return this.authService.logout().pipe(\r\n          map(() => {\r\n            this.persistanceService.set('accessToken', '')\r\n            this.router.navigateByUrl('/')\r\n            return logoutSuccessAction()\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            console.log(errorResponse.error.detail)\r\n            if (errorResponse.error.detail === 'Invalid token.') {\r\n              this.persistanceService.set('accessToken', '')\r\n              this.router.navigateByUrl('/')\r\n            }\r\n            return of(logoutFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n  constructor(\r\n    private actions$: Actions,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private persistanceService: PersistanceService,\r\n  ) {}\r\n}\r\n/*\r\n  login$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(logoutAction),\r\n      switchMap(() => {\r\n        return this.authService.logout().pipe(\r\n          map(() => {\r\n          this.persistanceService.set('accessToken', '')\r\n          this.router.navigateByUrl('/')\r\n            return loginSuccessAction()\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            console.log(errorResponse)\r\n            return of(loginFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n\r\n\r\n*/\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "persistanceService",
                        "type": "PersistanceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "persistanceService",
                        "type": "PersistanceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "PostCommentEffect",
            "id": "injectable-PostCommentEffect-aa4656de4ed8b35666e0faa1307e1487249cfab688df05889c8a78f79ead5e558c6510d13481784d7b6aba9387cd90d08c8df423cd8bb3cd1b967197492949cb",
            "file": "src/app/shared/modules/articleComments/store/effects/postComment.effects.ts",
            "properties": [
                {
                    "name": "getComment$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(postCommentAction),\r\n      switchMap(({ url, comment }) => {\r\n        return this.commentService.postComment(url, comment).pipe(\r\n          map((comment: CommentInterface) => {\r\n            return postCommentSuccessAction({ comment })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(postCommentFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { createEffect, ofType, Actions } from '@ngrx/effects'\r\nimport { of } from 'rxjs'\r\nimport { catchError, map, switchMap } from 'rxjs/operators'\r\nimport { CommentInterface } from 'src/app/shared/interfaces/comment.interface'\r\nimport { CommentService } from '../../services/comment.service'\r\n\r\nimport {\r\n  postCommentAction,\r\n  postCommentFailureAction,\r\n  postCommentSuccessAction,\r\n} from '../actions/postComment.actions'\r\n\r\n/*\r\nEFFECTS must be declared in the module config\r\n\r\n\r\n*/\r\n@Injectable()\r\nexport class PostCommentEffect {\r\n  getComment$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(postCommentAction),\r\n      switchMap(({ url, comment }) => {\r\n        return this.commentService.postComment(url, comment).pipe(\r\n          map((comment: CommentInterface) => {\r\n            return postCommentSuccessAction({ comment })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(postCommentFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private commentService: CommentService,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "commentService",
                        "type": "CommentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "commentService",
                        "type": "CommentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "RegisterEffect",
            "id": "injectable-RegisterEffect-bdbb1333144f7ead4ef2470bcf8781e990d2a4be04b8c4103e311777c31a305a7a6a718df4c2706d5ede5616f9ad17177f415f46367c02325ef496c2baed4aa6",
            "file": "src/app/pages/auth/store/effects/auth.register.effects.ts",
            "properties": [
                {
                    "name": "redirectAfterSubmit$",
                    "defaultValue": "createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(registerSuccessAction),\r\n        tap(() => {\r\n          this.router.navigateByUrl('/emailvalidation')\r\n        }),\r\n      ),\r\n    { dispatch: false },\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "register$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(registerAction), //<-auth.register.actions'\r\n      switchMap(({ payload }) => {\r\n        //<-auth.register.actions\r\n        return this.authService.register(payload).pipe(\r\n          map(() => {\r\n            console.log('register')\r\n            return registerSuccessAction() //<-auth.login.actions.ts @@ ->auth.reducer.ts ->redirectAfterSumit$\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(\r\n              registerFailureAction({ errors: errorResponse.error.errors }), //<-auth.register.actions.ts @@ ->auth.reducer.ts\r\n            )\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { Router } from '@angular/router'\r\nimport { createEffect, ofType, Actions } from '@ngrx/effects'\r\nimport { of } from 'rxjs'\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators'\r\nimport { AuthService } from '../../services/auth.service'\r\nimport {\r\n  registerAction,\r\n  registerFailureAction,\r\n  registerSuccessAction,\r\n} from '../actions/auth.register.actions'\r\n\r\n@Injectable()\r\nexport class RegisterEffect {\r\n  /*\r\n    The actions$ effect is listening for all dispatched actions through the Actions stream, \r\n        but is only interested in the (registerAction) event using the ofType operator.\r\n    \r\n    request is the data being sent to http can comes from auth.register.actions.ts\r\n\r\n    then maping what is returned from api \r\n    \r\n    if Success will trigger registerSuccessAction and pass in (currentUser) the api response *Data from auth.service.ts\r\n\r\n    if failure triggers registerFailureAction \r\n\r\n    effect most return Observable\r\n\r\n    map returns an obserable but catchError dose not so the use of (of) turns it into one\r\n\r\n    (errors) comes form auth.register.actions.ts\r\n\r\n  EFFECTS must be declared in the module config\r\n\r\n\r\n*/\r\n  register$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(registerAction), //<-auth.register.actions'\r\n      switchMap(({ payload }) => {\r\n        //<-auth.register.actions\r\n        return this.authService.register(payload).pipe(\r\n          map(() => {\r\n            console.log('register')\r\n            return registerSuccessAction() //<-auth.login.actions.ts @@ ->auth.reducer.ts ->redirectAfterSumit$\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(\r\n              registerFailureAction({ errors: errorResponse.error.errors }), //<-auth.register.actions.ts @@ ->auth.reducer.ts\r\n            )\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n\r\n  /*\r\n      tap\r\n        Used when you want to affect outside state with a notification without altering the notification\r\n  */\r\n  redirectAfterSubmit$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(registerSuccessAction),\r\n        tap(() => {\r\n          this.router.navigateByUrl('/emailvalidation')\r\n        }),\r\n      ),\r\n    { dispatch: false },\r\n  )\r\n  constructor(\r\n    private actions$: Actions,\r\n    private authService: AuthService,\r\n\r\n    private router: Router,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 71,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UpdateArticleEffect",
            "id": "injectable-UpdateArticleEffect-b3561ad1b9e82693c8861a0c0dfc6ebad6a5aa1752f90b743e90f867fbe0f62bc6c473414129365426b796aaa7093b33eab3e601d074040dfb4d36b19ba735e7",
            "file": "src/app/pages/editArticle/store/effects/editArticle.effects.ts",
            "properties": [
                {
                    "name": "createArticle$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(updateArticleAction),\r\n      switchMap(({ title, articleInput }) => {\r\n        return this.editArticleService\r\n          .updateArticle(`${title}`, articleInput)\r\n          .pipe(\r\n            map((article: ArticlesInterface) => {\r\n              return updateArticleSuccessAction({ article })\r\n            }),\r\n\r\n            catchError((errorResponse: HttpErrorResponse) => {\r\n              return of(\r\n                updateArticleFailureAction({\r\n                  errors: errorResponse.error.errors,\r\n                }),\r\n              )\r\n            }),\r\n          )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "redirectAfterUpdate$",
                    "defaultValue": "createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(updateArticleSuccessAction),\r\n        tap(({ article }) => {\r\n          const title = article.urlGen\r\n          this.router.navigate(['/article', title])\r\n        }),\r\n      ),\r\n    { dispatch: false },\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\r\nimport { Router } from '@angular/router'\r\n\r\nimport { of } from 'rxjs'\r\nimport { switchMap, map, catchError, tap } from 'rxjs/operators'\r\n\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport { HttpErrorResponse } from '@angular/common/http'\r\nimport { EditArticleService } from '../../services/updateArticle.service'\r\nimport {\r\n  updateArticleAction,\r\n  updateArticleSuccessAction,\r\n  updateArticleFailureAction,\r\n} from '../actions/updateArticle.actions'\r\n\r\n@Injectable()\r\nexport class UpdateArticleEffect {\r\n  createArticle$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(updateArticleAction),\r\n      switchMap(({ title, articleInput }) => {\r\n        return this.editArticleService\r\n          .updateArticle(`${title}`, articleInput)\r\n          .pipe(\r\n            map((article: ArticlesInterface) => {\r\n              return updateArticleSuccessAction({ article })\r\n            }),\r\n\r\n            catchError((errorResponse: HttpErrorResponse) => {\r\n              return of(\r\n                updateArticleFailureAction({\r\n                  errors: errorResponse.error.errors,\r\n                }),\r\n              )\r\n            }),\r\n          )\r\n      }),\r\n    ),\r\n  )\r\n\r\n  redirectAfterUpdate$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(updateArticleSuccessAction),\r\n        tap(({ article }) => {\r\n          const title = article.urlGen\r\n          this.router.navigate(['/article', title])\r\n        }),\r\n      ),\r\n    { dispatch: false },\r\n  )\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private editArticleService: EditArticleService,\r\n    private router: Router,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "editArticleService",
                        "type": "EditArticleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 52,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "editArticleService",
                        "type": "EditArticleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UpdateCommentEffect",
            "id": "injectable-UpdateCommentEffect-c2aabe2e5b6620bebb9d5d92ecd91666975e6886ccd367bf55a379a858d1f29f0a1cea10dcbfefc9dc350b74adc6965e424ef41ab3d9d038d47dcb6d14e7bd3d",
            "file": "src/app/shared/modules/articleComments/store/effects/updateComment.effects.ts",
            "properties": [
                {
                    "name": "getComment$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(updateCommentAction),\r\n      switchMap(({ url, comment }) => {\r\n        return this.commentService.updateComment(url, comment).pipe(\r\n          map((comment: CommentInterface) => {\r\n            return updateCommentSuccessAction({ comment })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(updateCommentFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { createEffect, ofType, Actions } from '@ngrx/effects'\r\nimport { of } from 'rxjs'\r\nimport { catchError, map, switchMap } from 'rxjs/operators'\r\nimport { CommentInterface } from 'src/app/shared/interfaces/comment.interface'\r\nimport { CommentService } from '../../services/comment.service'\r\n\r\nimport {\r\n  updateCommentAction,\r\n  updateCommentFailureAction,\r\n  updateCommentSuccessAction,\r\n} from '../actions/updateComment.actions'\r\n\r\n/*\r\nEFFECTS must be declared in the module config\r\n\r\n\r\n*/\r\n@Injectable()\r\nexport class UpdateCommentEffect {\r\n  getComment$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(updateCommentAction),\r\n      switchMap(({ url, comment }) => {\r\n        return this.commentService.updateComment(url, comment).pipe(\r\n          map((comment: CommentInterface) => {\r\n            return updateCommentSuccessAction({ comment })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(updateCommentFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private commentService: CommentService,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "commentService",
                        "type": "CommentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "commentService",
                        "type": "CommentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UpdateCurrentUserEffect",
            "id": "injectable-UpdateCurrentUserEffect-1c578ba84d4f6dba0602227ee543616561f57cc6cee532cda8d9e3a2f4a68d03d352f828b93d417f2fe0e7702dc7ee79ef50f6655b7b16c5c2f73404908670d4",
            "file": "src/app/pages/auth/store/effects/auth.updateCurrentUser.effects.ts",
            "properties": [
                {
                    "name": "updateCurrentUser$",
                    "defaultValue": "createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(updateCurrentUserAction),\r\n      switchMap(({ currentUserInput }) => {\r\n        return this.authService.updateCurrentUser(currentUserInput).pipe(\r\n          map((currentUser: CurrentUserInterface) => {\r\n            this.persistanceService.set(\r\n              'accessToken',\r\n              currentUser.currentUser.token,\r\n            )\r\n            return updateCurrentUserSuccessAction({ currentUser })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(updateCurrentUserFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { Router } from '@angular/router'\r\nimport { createEffect, ofType, Actions } from '@ngrx/effects'\r\nimport { of } from 'rxjs'\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators'\r\nimport { PersistanceService } from 'src/app/shared/services/persistance.service'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\nimport { AuthService } from '../../services/auth.service'\r\n\r\nimport {\r\n  updateCurrentUserAction,\r\n  updateCurrentUserFailureAction,\r\n  updateCurrentUserSuccessAction,\r\n} from '../actions/auth.updateCurrentUserData.actions'\r\n/*\r\nEFFECTS must be declared in the module config\r\n\r\n\r\n*/\r\n@Injectable()\r\nexport class UpdateCurrentUserEffect {\r\n  updateCurrentUser$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(updateCurrentUserAction),\r\n      switchMap(({ currentUserInput }) => {\r\n        return this.authService.updateCurrentUser(currentUserInput).pipe(\r\n          map((currentUser: CurrentUserInterface) => {\r\n            this.persistanceService.set(\r\n              'accessToken',\r\n              currentUser.currentUser.token,\r\n            )\r\n            return updateCurrentUserSuccessAction({ currentUser })\r\n          }),\r\n          catchError((errorResponse: HttpErrorResponse) => {\r\n            return of(updateCurrentUserFailureAction())\r\n          }),\r\n        )\r\n      }),\r\n    ),\r\n  )\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private authService: AuthService,\r\n    private persistanceService: PersistanceService,\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "persistanceService",
                        "type": "PersistanceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "persistanceService",
                        "type": "PersistanceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UserProfileService",
            "id": "injectable-UserProfileService-c79addf528c0bb0bd99c3e392227120c0786b2b6e86ee8bd11ff3b380b96b83565ebaa1feac6138c193e95c5ba23e9fcfe59b52bacffb090057bda72818e7326",
            "file": "src/app/pages/userProfile/services/userProfile.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getUserProfile",
                    "args": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<UserProfileInterface>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\n\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from 'src/environments/environment'\r\nimport { map } from 'rxjs/operators'\r\nimport { GetUserProfileResponseInterface } from '../interfaces/getUserProfileResponse.interface'\r\nimport { UserProfileInterface } from '../interfaces/userProfile.interface'\r\n\r\n@Injectable()\r\nexport class UserProfileService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUserProfile(slug: string): Observable<UserProfileInterface> {\r\n    const url =\r\n      `${environment.baseUrl}${environment.profileApiUrl}` + slug + '/'\r\n\r\n    return this.http\r\n      .get<GetUserProfileResponseInterface>(url)\r\n      .pipe(\r\n        map((response: GetUserProfileResponseInterface) => response.profile),\r\n      )\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UtilsService",
            "id": "injectable-UtilsService-d9b1a08690d05ec17160656ef0e7b50c3a9c254623ecfdd5d52d3d3832a237cd8b608b22085d74aacba5642ffcb2158ae6c0cc58f67634928a19cfacb599a46d",
            "file": "src/app/shared/services/utils.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "range",
                    "args": [
                        {
                            "name": "start",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "end",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number[]",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "start",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "end",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core'\r\n\r\n@Injectable()\r\nexport class UtilsService {\r\n  range(start: number, end: number): number[] {\r\n    return [...Array(end).keys()].map(el => el + start)\r\n  }\r\n}\r\n",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [
        {
            "name": "AuthInterceptor",
            "id": "injectable-AuthInterceptor-3bbe121c52731083911150b568d6970794aeef23fc502124dc6bc781ff7d9949e5d85639f56bd6d21ee09885694f243ab8d9bc09864f28150096304fd96af10b",
            "file": "src/app/shared/services/auth.interceptor.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\nimport { PersistanceService } from './persistance.service'\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private persistanceService: PersistanceService) {}\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler,\r\n  ): Observable<HttpEvent<any>> {\r\n    const token = this.persistanceService.get('accessToken')\r\n    req = req.clone({\r\n      setHeaders: {\r\n        Authorization: token ? `Token ${token}` : '',\r\n      },\r\n    })\r\n    return next.handle(req)\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "persistanceService",
                        "type": "PersistanceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "persistanceService",
                        "type": "PersistanceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "interceptor"
        }
    ],
    "classes": [
        {
            "name": "PersistanceService",
            "id": "class-PersistanceService-d383361070886b93f06ab36f1d02d510d5171d49cb6f47b39748227323cb37a6a72f7b607c81f0f04cdca43dbfda63e8c3fc6826e2394a34a268c4c16fa434c2",
            "file": "src/app/shared/services/persistance.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class PersistanceService {\r\n  set(key: string, data: any): void {\r\n    try {\r\n      localStorage.setItem(key, JSON.stringify(data))\r\n    } catch (e) {\r\n      //if (e) console.error('Error saving to localStorage', e)\r\n    }\r\n  }\r\n  get(key: string): any {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(key) || '')\r\n    } catch (e) {\r\n      // if (e) console.error('Error getting from localStorage', e)\r\n      return null\r\n    }\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "updateArticle",
            "id": "class-updateArticle-38c65f300a98570fba4a7f05d151ca3fd141253f08a6bf34b99229a61a517a25853b1ece2b8caf45294624b59da04823b020f4793e1f054311765104299449b2",
            "file": "src/app/pages/article/store/effects/favorite.Article.effects.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core'\r\nimport { createEffect, Actions, ofType } from '@ngrx/effects'\r\nimport { map, catchError, switchMap } from 'rxjs/operators'\r\nimport { of } from 'rxjs'\r\n\r\nimport { ArticleService as SharedArticleService } from 'src/app/shared/services/article.service'\r\n\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport {\r\n  favoriteArticleAction,\r\n  favoriteArticleFailureAction,\r\n  favoriteArticleSuccessAction,\r\n} from '../actions/favoriteArticle.actions'\r\n\r\n@Injectable()\r\nexport class FavoriteArticleEffect {\r\n  getArticle$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(favoriteArticleAction),\r\n      switchMap(({ myArticle }) => {\r\n        return this.sharedArticleService\r\n          .onFavorite(myArticle.id, myArticle.favorited)\r\n          .pipe(\r\n            map(() => {\r\n              let newArticle = this.updateFav(myArticle)\r\n              return favoriteArticleSuccessAction({ article: newArticle })\r\n            }),\r\n            catchError((error) => {\r\n              return of(favoriteArticleFailureAction())\r\n            }),\r\n          )\r\n      }),\r\n    ),\r\n  )\r\n  updateFav(myArticle: ArticlesInterface) {\r\n    let newArticle = {\r\n      articleDescription: myArticle.articleDescription,\r\n      articleImage: myArticle.articleImage,\r\n      articleTitle: myArticle.articleTitle,\r\n      author: myArticle.author,\r\n      content: myArticle.content,\r\n      creationDate: myArticle.creationDate,\r\n      favorited: !myArticle.favorited,\r\n      id: myArticle.id,\r\n      tags: myArticle.tags,\r\n      favoriteCount: myArticle.favoriteCount,\r\n      urlGen: myArticle.urlGen,\r\n    }\r\n\r\n    return newArticle\r\n  }\r\n  constructor(\r\n    private actions$: Actions,\r\n    private sharedArticleService: SharedArticleService,\r\n  ) {}\r\n}\r\nexport class updateArticle {}\r\n",
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Validation",
            "id": "class-Validation-a0f52de369cd1dc4f484b405c4e23d7ee259f7ecb84710051db1db1ed70da32ae4d5cd3247ff541b84250ff4fd4ab24d0b74ebac54c3af307f08d42f311f7be9",
            "file": "src/app/pages/auth/services/auth.confirm-password.validator.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { AbstractControl, ValidatorFn } from '@angular/forms'\r\n\r\nexport default class Validation {\r\n  static match(controlName: string, checkControlName: string): ValidatorFn {\r\n    return (controls: AbstractControl) => {\r\n      const control = controls.get(controlName)\r\n      const checkControl = controls.get(checkControlName)\r\n      if (checkControl?.errors && !checkControl.errors['matching']) {\r\n        return null\r\n      }\r\n\r\n      if (control?.value !== checkControl?.value) {\r\n        if (checkControl !== null) {\r\n          checkControl.setErrors({ matching: true })\r\n        }\r\n        return null\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "match",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "checkControlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "checkControlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "HighlightDirective",
            "id": "directive-HighlightDirective-dc6e2b6f8c191febdaa39d7f6dd598ebfc5b293a49d235a7bbd72132efe3abdd379d2d112d141e5ac442ae0011eca06384b091a3d48c4c77543a3f964041b1de",
            "file": "src/app/pages/auth/components/registation-component/focus.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, HostListener, Renderer2 } from '@angular/core'\r\n\r\n@Directive({\r\n  selector: '[appHighlight]',\r\n})\r\nexport class HighlightDirective {\r\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\r\n  // @HostListener('mouseenter') onMouseEnter() {\r\n  //   this.highlight('blue')\r\n  // }\r\n\r\n  // @HostListener('mouseleave') onMouseLeave() {\r\n  //   this.highlight('')\r\n  // }\r\n  @HostListener('focus') onFocus() {\r\n    this.highlight('focus')\r\n  }\r\n  private highlight(color: string) {\r\n    // console.log(color)\r\n    // this.renderer.addClass(this.el.nativeElement, 'focus')\r\n    // this.el.nativeElement.class = color\r\n  }\r\n}\r\n",
            "selector": "[appHighlight]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "focus",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "highlight",
                    "args": [
                        {
                            "name": "color",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "color",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFocus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'focus'"
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-57860b041b9384166716a2f9e875d3ca915f1bc464c2595faa0a9f728057638376362522664eb80a426da65fa7f24f99c1daca7e6fcae36cc6f50bdd61ef73ab",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "interval",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "'dz-blog'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ontimer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pauseTimer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "printpath",
                    "args": [
                        {
                            "name": "parent",
                            "type": "String",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "Route[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "parent",
                            "type": "String",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "Route[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { Router, Route } from '@angular/router'\r\nimport { select, Store } from '@ngrx/store'\r\nimport { map } from 'rxjs'\r\nimport { getCurrentUserAction } from './pages/auth/store/actions/auth.getCurrentUser.actions'\r\nimport {\r\n  isLoadingSelector,\r\n  isLoggedInSelector,\r\n} from './pages/auth/store/selectors/auth.selectors'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.sass'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  interval!: any\r\n\r\n  constructor(private store: Store, public router: Router) {}\r\n  ngOnInit(): void {\r\n    this.store.dispatch(getCurrentUserAction())\r\n    console.log(this.router)\r\n  }\r\n  title = 'dz-blog'\r\n\r\n  printpath(parent: String, config: Route[]) {\r\n    for (let i = 0; i < config.length; i++) {\r\n      const route = config[i]\r\n      console.log(parent + '/' + route.path)\r\n      if (route.children) {\r\n        const currentPath = route.path ? parent + '/' + route.path : parent\r\n        this.printpath(currentPath, route.children)\r\n      }\r\n    }\r\n  }\r\n  ontimer(): void {\r\n    this.interval = setInterval(() => {\r\n      this.store.dispatch(getCurrentUserAction())\r\n    }, 1000)\r\n  }\r\n  pauseTimer() {\r\n    clearInterval(this.interval)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<head>\r\n  <!-- <script src=\"//cdn.quilljs.com/1.3.6/quill.js\"></script>\r\n  <script src=\"//cdn.quilljs.com/1.3.6/quill.min.js\"></script>\r\n\r\n\r\n  <link href=\"//cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\" />\r\n  <link href=\"//cdn.quilljs.com/1.3.6/quill.bubble.css\" rel=\"stylesheet\" />\r\n\r\n\r\n  <link href=\"//cdn.quilljs.com/1.3.6/quill.core.css\" rel=\"stylesheet\" />\r\n  <script src=\"//cdn.quilljs.com/1.3.6/quill.core.js\"></script>\r\n\r\n  <link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\" />\r\n\r\n\r\n\r\n\r\n  <script src=\"https://cdn.quilljs.com/1.3.6/quill.js\"></script> -->\r\n\r\n  <!-- Initialize Quill editor -->\r\n</head>\r\n<div class=\"h-max bg-dz-dark\">\r\n  <dz-test-nav\r\n    *ngIf=\"!router.url.includes('login') && !router.url.includes('register')\"\r\n  ></dz-test-nav>\r\n  <router-outlet></router-outlet>\r\n  <dz-footer\r\n    *ngIf=\"!router.url.includes('login') && !router.url.includes('register')\"\r\n  ></dz-footer>\r\n</div>\r\n<!-- <button (click)=\"ontimer()\">timer</button>\r\n<button (click)=\"pauseTimer()\">Pause</button> -->\r\n"
        },
        {
            "name": "ArticleComponent",
            "id": "component-ArticleComponent-199d2fcc4524628dfb54a515ee1702b0506514a707d44adf030d3a552e27c107d72ce0a61ade7d2856dc07c74fc302dcba23ca5b33f36352e384623d8c01579d",
            "file": "src/app/pages/article/components/article/article.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mc-article",
            "styleUrls": [
                "./article.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./article.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticlesInterface",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "articleSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "baseMedia",
                    "defaultValue": "environment.baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "commentUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "contentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ContentTypes",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "error$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | null>",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "favorited",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "isAuthor$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "isFavoriting$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "isLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "pipe",
                    "defaultValue": "new DatePipe('en-US')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "todayWithPipe",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAuthorClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DatePipe } from '@angular/common'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Component, OnInit, OnDestroy } from '@angular/core'\r\nimport { Title } from '@angular/platform-browser'\r\nimport { ActivatedRoute, Router } from '@angular/router'\r\nimport { Store, select } from '@ngrx/store'\r\nimport { Subscription, Observable, combineLatest } from 'rxjs'\r\nimport { map } from 'rxjs/operators'\r\n\r\nimport { currentUserSelector } from 'src/app/pages/auth/store/selectors/auth.selectors'\r\nimport { saveArticleAction } from 'src/app/pages/editArticle/store/actions/updateArticle.actions'\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\nimport { ArticleService } from 'src/app/shared/services/article.service'\r\nimport { ContentTypes, environment } from 'src/environments/environment'\r\n\r\nimport { deleteArticleAction } from '../../store/actions/deleteArticle.actions'\r\nimport { favoriteArticleAction } from '../../store/actions/favoriteArticle.actions'\r\nimport { getArticleAction } from '../../store/actions/getArticle.actions'\r\nimport {\r\n  isLoadingSelector,\r\n  errorSelector,\r\n  articleSelector,\r\n  isFavoritingSelector,\r\n} from '../../store/selectors/articles.selectors'\r\n\r\n@Component({\r\n  selector: 'mc-article',\r\n  templateUrl: './article.component.html',\r\n  styleUrls: ['./article.component.sass'],\r\n})\r\nexport class ArticleComponent implements OnInit, OnDestroy {\r\n  title: string\r\n  article!: ArticlesInterface\r\n  articleSubscription!: Subscription\r\n  isLoading$!: Observable<boolean>\r\n  isFavoriting$!: Observable<boolean>\r\n  error$!: Observable<string | null>\r\n  isAuthor$!: Observable<boolean>\r\n  commentUrl: string\r\n  favorited: boolean\r\n  date: string | null\r\n  pipe = new DatePipe('en-US')\r\n  todayWithPipe = null\r\n  contentType: ContentTypes\r\n  baseMedia = environment.baseMedia\r\n  constructor(\r\n    private store: Store,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private articleService: ArticleService,\r\n    private titleService: Title,\r\n  ) {\r\n    this.title = ''\r\n    this.commentUrl = ''\r\n    this.date = ''\r\n    this.favorited = false\r\n    this.contentType = environment.contentTypes\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    //this.articleSubscription.unsubscribe()\r\n  }\r\n\r\n  initializeValues(): void {\r\n    this.title = this.route.snapshot.paramMap.get('title') || ''\r\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector))\r\n    this.isFavoriting$ = this.store.pipe(select(isFavoritingSelector))\r\n    this.error$ = this.store.pipe(select(errorSelector))\r\n\r\n    this.isAuthor$ = combineLatest([\r\n      this.store.pipe(select(articleSelector)),\r\n      this.store.pipe(select(currentUserSelector)),\r\n    ]).pipe(\r\n      map(\r\n        ([article, currentUser]: [\r\n          ArticlesInterface | null,\r\n          CurrentUserInterface | null,\r\n        ]) => {\r\n          if (!article || !currentUser) {\r\n            return false\r\n          }\r\n\r\n          return currentUser.currentUser.userName === article.author.username\r\n        },\r\n      ),\r\n    )\r\n  }\r\n\r\n  initializeListeners(): void {\r\n    this.articleSubscription = this.store\r\n      .pipe(select(articleSelector))\r\n      .subscribe((article) => {\r\n        if (article !== null) {\r\n          this.article = article\r\n\r\n          if (article) {\r\n            this.titleService.setTitle(this.article.articleTitle)\r\n            this.commentUrl =\r\n              environment.getCommentsApiUrl + `${this.article.id}/`\r\n          }\r\n          this.date = this.pipe.transform(Date.now(), 'EEEE, MMMM d, y')\r\n        }\r\n      })\r\n  }\r\n\r\n  fetchData(): void {\r\n    this.store.dispatch(getArticleAction({ title: this.title }))\r\n  }\r\n\r\n  onEdit(): void {\r\n    this.store.dispatch(saveArticleAction({ article: this.article }))\r\n  }\r\n  deleteArticle(): void {\r\n    this.router.navigate(['/'])\r\n    this.store.dispatch(deleteArticleAction({ title: this.title }))\r\n  }\r\n  onAuthorClick(): void {\r\n    console.log('dispatch action to get author page')\r\n  }\r\n  onFav() {\r\n    this.store.dispatch(favoriteArticleAction({ myArticle: this.article }))\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container\r\n  @apply flex justify-center w-full\r\n.article\r\n  @apply lg:w-[960px]\r\n.date\r\n  @apply py-4 text-xs text-center col-span-full\r\n",
                    "styleUrl": "./article.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "articleService",
                        "type": "ArticleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "titleService",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "articleService",
                        "type": "ArticleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "titleService",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"container\" *ngIf=\"!(isLoading$ | async)\" class=\"bg-white\">\r\n  <article class=\"article\" *ngIf=\"article\">\r\n    <div class=\"date\">\r\n      <dd class=\"text-right\">\r\n        {{ date }}\r\n      </dd>\r\n    </div>\r\n    <div class=\"flex text-sm text-yellow-600 uppercase\">\r\n      <div *ngFor=\"let tag of article.tags; let i = index\" class=\"flex\">\r\n        <p *ngIf=\"i != 0\">&nbsp;|&nbsp;</p>\r\n        <a\r\n          [routerLink]=\"['/feed', 'tag', tag]\"\r\n          routerLinkActive=\"active\"\r\n          [routerLinkActiveOptions]=\"{ exact: true }\"\r\n        >\r\n          {{ tag }}\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-span-6 text-xl text-left\">\r\n      <div class=\"\">\r\n        <dl>\r\n          <dt class=\"sr-only\">Date</dt>\r\n        </dl>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex justify-center w-full\">\r\n      <div class=\"\">\r\n        <span *ngIf=\"isAuthor$ | async\">\r\n          <a\r\n            [routerLink]=\"['/article', article.urlGen, 'edit']\"\r\n            class=\"btn btn-outline-secondary btn-sm hello\"\r\n            (click)=\"onEdit()\"\r\n          >\r\n            <i class=\"ion-edit\"></i>\r\n            Edit Article\r\n          </a>\r\n          <button\r\n            class=\"btn btn-outline-danger btn-sm\"\r\n            (click)=\"deleteArticle()\"\r\n          >\r\n            Delete Article\r\n          </button>\r\n        </span>\r\n        <div\r\n          *ngFor=\"let content of article.content\"\r\n          class=\"pb-10 text-xl whitespace-pre-wrap\"\r\n        >\r\n          <div *ngIf=\"content.type === contentType.title\" class=\"\">\r\n            <dz-title-type-001 [content]=\"content\"></dz-title-type-001>\r\n          </div>\r\n          <div *ngIf=\"content.type === contentType.body\" class=\"\">\r\n            <dz-body-type-001 [content]=\"content\"></dz-body-type-001>\r\n          </div>\r\n          <!-- <div *ngIf=\"content.type === contentType.body\" class=\"\">\r\n            <dz-image-type-001 [content]=\"content\"></dz-image-type-001>\r\n          </div> -->\r\n          <div *ngIf=\"content.type === contentType.image\" class=\"\">\r\n            <dz-image-type-001 [content]=\"content\"></dz-image-type-001>\r\n          </div>\r\n          <div *ngIf=\"content.type === contentType.imageImage\" class=\"\">\r\n            <dz-image-image-type-001\r\n              [content]=\"content\"\r\n            ></dz-image-image-type-001>\r\n          </div>\r\n          <div *ngIf=\"content.type === contentType.bodyImage\" class=\"\">\r\n            <dz-text-image-type-001\r\n              [content]=\"content\"\r\n            ></dz-text-image-type-001>\r\n          </div>\r\n          <div *ngIf=\"content.type === contentType.imageBody\" class=\"\">\r\n            <dz-image-text-type-001\r\n              [content]=\"content\"\r\n            ></dz-image-text-type-001>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex items-center gap-3 py-5\">\r\n      <img\r\n        [src]=\"baseMedia + article.author.profileImg\"\r\n        alt=\"\"\r\n        class=\"w-12 rounded-full\"\r\n      />\r\n      <div class=\"text-base\">\r\n        <a class=\"\" (click)=\"onAuthorClick()\">\r\n          Author: {{ article.author.username }}\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <dz-comment-main [apiUrl]=\"commentUrl\" [id]=\"article.id\"></dz-comment-main>\r\n  </article>\r\n</div>\r\n<div></div>\r\n<button (click)=\"onFav()\" [disabled]=\"isFavoriting$ | async\">fav</button>\r\n"
        },
        {
            "name": "ArticleContentComponent",
            "id": "component-ArticleContentComponent-f884cbac3a120bba766568c170d1b68cccb22c297f7c8d3fac39a7e6b395776f6e32e1545e81ea79cac31261c6e287dca1a00de40d322ade34d1a57a126dd2e4",
            "file": "src/app/shared/modules/articleForms/components/articleContent/articleContent.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-article-content",
            "styleUrls": [
                "./articleContent.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./articleContent.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "block",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onDeleteEvent",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "contentTypes",
                    "defaultValue": "environment.contentTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\r\nimport { FormGroup } from '@angular/forms'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-article-content',\r\n  templateUrl: './articleContent.component.html',\r\n  styleUrls: ['./articleContent.component.sass'],\r\n})\r\nexport class ArticleContentComponent implements OnInit {\r\n  @Input() block!: FormGroup\r\n  @Output() onDeleteEvent = new EventEmitter<number>()\r\n  contentTypes = environment.contentTypes\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n  onDelete(): void {\r\n    this.onDeleteEvent.emit()\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./articleContent.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": ""
        },
        {
            "name": "ArticleFormComponent",
            "id": "component-ArticleFormComponent-dbe9d84f2afde8f69d3a7f49880b85048262700c4f7fa25949c7d3cff8c3bdf4290cb8cbab7eacdbbd1f937be26c40df01a6007899cb3c9f654caecccfb033d6",
            "file": "src/app/shared/modules/articleForms/components/articleForms/article-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-article-form",
            "styleUrls": [
                "./article-form.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./article-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "errors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "BackendErrorsInterface | null",
                    "decorators": []
                },
                {
                    "name": "initialValues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "ArticleInputInterface | null",
                    "decorators": []
                },
                {
                    "name": "isSubmitting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "articleSubmit",
                    "defaultValue": "new EventEmitter<\r\n    ArticleInputInterface\r\n  >()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticleBlockInterface[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "contentTypes",
                    "defaultValue": "environment.contentTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "old_tag_list",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "move",
                    "args": [
                        {
                            "name": "shift",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "currentIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "shift",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "currentIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAddType",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFill",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateTaggings",
                    "args": [
                        {
                            "name": "new_tags",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "new_tags",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterContentInit,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core'\r\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms'\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { ArticleInputInterface } from 'src/app/shared/interfaces/articleInput.interface'\r\nimport { BackendErrorsInterface } from 'src/app/shared/interfaces/backendError.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-article-form',\r\n  templateUrl: './article-form.component.html',\r\n  styleUrls: ['./article-form.component.sass'],\r\n})\r\nexport class ArticleFormComponent implements OnInit, AfterContentInit {\r\n  @Input('initialValues') initialValuesProps!: ArticleInputInterface | null\r\n  @Input('isSubmitting') isSubmittingProps: boolean | null\r\n  @Input('errors') errorsProps!: BackendErrorsInterface | null\r\n\r\n  @Output('articleSubmit') articleSubmitEvent = new EventEmitter<\r\n    ArticleInputInterface\r\n  >()\r\n  contentTypes = environment.contentTypes\r\n  form!: FormGroup\r\n  content!: ArticleBlockInterface[]\r\n  position: number\r\n  old_tag_list: string[]\r\n  constructor(private fb: FormBuilder) {\r\n    this.position = 0\r\n    this.isSubmittingProps = false\r\n    this.old_tag_list = []\r\n  }\r\n  updateTaggings(new_tags: any) {\r\n    this.old_tag_list = new_tags\r\n  }\r\n  ngOnInit(): void {}\r\n  ngAfterContentInit(): void {\r\n    this.initializeForm()\r\n    this.initializeValues()\r\n  }\r\n  initializeValues(): void {\r\n    this.position\r\n  }\r\n  initializeForm(): void {\r\n    if (this.initialValuesProps) {\r\n      this.form = this.fb.group({\r\n        //tags: this.initialValuesProps.tags,\r\n        articleTitle: this.initialValuesProps.articleTitle,\r\n        articleDescription: this.initialValuesProps.articleDescription,\r\n        articleImage: this.initialValuesProps.articleImage,\r\n        content: this.fb.array([]),\r\n      })\r\n\r\n      this.old_tag_list = this.initialValuesProps.tags\r\n      console.log(this.old_tag_list)\r\n      if (this.initialValuesProps.content == null) {\r\n      } else {\r\n        this.onFill()\r\n      }\r\n    }\r\n  }\r\n  get contentArray(): any {\r\n    return this.form.controls['content'] as FormArray\r\n  }\r\n  onFill(): void {\r\n    let content\r\n    if (this.initialValuesProps) {\r\n      for (let i = 0; i < this.initialValuesProps.content.length; i++) {\r\n        content = this.fb.group({\r\n          title: this.initialValuesProps.content[i].title,\r\n          type: this.initialValuesProps.content[i].type,\r\n          body: this.initialValuesProps.content[i].body,\r\n          imageOne: this.initialValuesProps.content[i].imageOne,\r\n          imageTwo: this.initialValuesProps.content[i].imageTwo,\r\n          position: this.initialValuesProps.content[i].position,\r\n          customObject: this.initialValuesProps.content[i].customObject,\r\n        })\r\n        this.contentArray.push(content)\r\n      }\r\n    }\r\n  }\r\n  onAddType(type: string): void {\r\n    let content: Object | null = null\r\n    let custom = false\r\n    if (type === this.contentTypes.title) {\r\n      content = this.fb.group({\r\n        title: '',\r\n        type: type,\r\n        position: this.position,\r\n        customObject: custom,\r\n      })\r\n    } else if (type === this.contentTypes.body) {\r\n      content = this.fb.group({\r\n        type: type,\r\n        body: undefined,\r\n        position: this.position,\r\n        customObject: custom,\r\n      })\r\n    } else if (type === this.contentTypes.image) {\r\n      content = this.fb.group({\r\n        type: type,\r\n        imageOne: undefined,\r\n        position: this.position,\r\n        customObject: custom,\r\n      })\r\n    } else if (type === this.contentTypes.imageImage) {\r\n      content = this.fb.group({\r\n        type: type,\r\n        imageOne: undefined,\r\n        imageTwo: undefined,\r\n        position: this.position,\r\n        customObject: custom,\r\n      })\r\n    } else if (type === this.contentTypes.bodyImage) {\r\n      content = this.fb.group({\r\n        type: type,\r\n        body: undefined,\r\n        imageOne: undefined,\r\n        position: this.position,\r\n        customObject: custom,\r\n      })\r\n    } else if (type === this.contentTypes.imageBody) {\r\n      content = this.fb.group({\r\n        type: type,\r\n        body: undefined,\r\n        imageOne: undefined,\r\n        position: this.position,\r\n        customObject: custom,\r\n      })\r\n    }\r\n    if (content !== null) {\r\n      this.position++\r\n      this.contentArray.push(content)\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.log(this.form)\r\n    this.form.value.tags = this.old_tag_list\r\n\r\n    for (let i = 0; i < this.contentArray.length; i++) {\r\n      this.contentArray.value[i].position = i\r\n    }\r\n    this.articleSubmitEvent.emit(this.form.value)\r\n  }\r\n\r\n  onDelete(index: number): void {\r\n    this.contentArray.removeAt(index)\r\n  }\r\n\r\n  move(shift: number, currentIndex: number): void {\r\n    let newIndex: number = currentIndex + shift\r\n    if (newIndex != -1) {\r\n      const currentGroup = this.contentArray.at(currentIndex)\r\n\r\n      this.contentArray.removeAt(currentIndex)\r\n      this.contentArray.insert(newIndex, currentGroup)\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./article-form.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterContentInit"
            ],
            "accessors": {
                "contentArray": {
                    "name": "contentArray",
                    "getSignature": {
                        "name": "contentArray",
                        "type": "any",
                        "returnType": "any",
                        "line": 67
                    }
                }
            },
            "templateData": "<!DOCTYPE html>\r\n<div class=\"container mx-10 rounded\" *ngIf=\"form\">\r\n  <div\r\n    class=\"p-5 mx-auto my-10 border-t border-b border-l border-r rounded-md shadow-sm\"\r\n  >\r\n    <div>\r\n      <div class=\"p-6 border-b\">\r\n        <!-- <dz-backend-errors\r\n          *ngIf=\"errorsProps\"\r\n          [backendErrors]=\"errorsProps\"\r\n        ></dz-backend-errors> -->\r\n        <form [formGroup]=\"form\" #forms=\"ngForm\" class=\"mb-2 text-xl text-bold\">\r\n          <fieldset>\r\n            <dz-article-form-info\r\n              [parentFormGroup]=\"form\"\r\n              [old_tag_list_props]=\"old_tag_list\"\r\n              (selected_tag_output)=\"updateTaggings($event)\"\r\n            ></dz-article-form-info>\r\n            <!--*********************************************** content      ***********************************************-->\r\n            <div formArrayName=\"content\" class=\"w-full\">\r\n              <div class=\"flex content-center w-full text-center\">\r\n                <div class=\"content-center w-full text-center\">\r\n                  <h1 class=\"\">\r\n                    Main Article\r\n                    <p\r\n                      *ngIf=\"form.value.content.length === 0\"\r\n                      class=\"text-sm text-right text-red-600 align-top\"\r\n                    >\r\n                      article content required\r\n                    </p>\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n              <div\r\n                *ngFor=\"let block of contentArray.controls; let i = index\"\r\n                formGroupName=\"{{ i }}\"\r\n                class=\"px-3 m-2 mx-0 border rounded border-cyan-200\"\r\n              >\r\n                <div class=\"flex\">\r\n                  <dz-title-form-type-001\r\n                    class=\"w-full\"\r\n                    [parentFormGroup]=\"block\"\r\n                    *ngIf=\"block.value.type === contentTypes.title\"\r\n                  ></dz-title-form-type-001>\r\n\r\n                  <dz-body-form-type-001\r\n                    *ngIf=\"block.value.type === contentTypes.body\"\r\n                    class=\"w-full\"\r\n                    [parentFormGroup]=\"block\"\r\n                  ></dz-body-form-type-001>\r\n\r\n                  <dz-image-form-type-001\r\n                    *ngIf=\"block.value.type === contentTypes.image\"\r\n                    class=\"w-full\"\r\n                    [parentFormGroup]=\"block\"\r\n                  ></dz-image-form-type-001>\r\n\r\n                  <dz-form-image-image-type-001\r\n                    *ngIf=\"block.value.type === contentTypes.imageImage\"\r\n                    class=\"w-full\"\r\n                    [parentFormGroup]=\"block\"\r\n                  ></dz-form-image-image-type-001>\r\n\r\n                  <dz-form-image-text-type-001\r\n                    *ngIf=\"block.value.type === contentTypes.imageBody\"\r\n                    class=\"w-full\"\r\n                    [parentFormGroup]=\"block\"\r\n                  ></dz-form-image-text-type-001>\r\n\r\n                  <dz-form-text-image-type-001\r\n                    *ngIf=\"block.value.type === contentTypes.bodyImage\"\r\n                    class=\"w-full\"\r\n                    [parentFormGroup]=\"block\"\r\n                  ></dz-form-text-image-type-001>\r\n\r\n                  <div class=\"grid w-4 grid-cols-1 pt-2\">\r\n                    <button\r\n                      class=\"row-span-1 pt-1 text-center transition duration-150 ease-in-out hover:text-green-400\"\r\n                      data-bs-toggle=\"tooltip\"\r\n                      data-bs-placement=\"top\"\r\n                      title=\"Move section up\"\r\n                      (click)=\"move(-1, i)\"\r\n                      *ngIf=\"i !== 0\"\r\n                    >\r\n                      <mat-icon>\r\n                        arrow_upward\r\n                      </mat-icon>\r\n                    </button>\r\n                    <button\r\n                      (click)=\"onDelete(i)\"\r\n                      class=\"row-span-1 pt-1 text-center hover:text-red-600\"\r\n                      data-bs-toggle=\"tooltip\"\r\n                      data-bs-placement=\"top\"\r\n                      title=\"Delete section\"\r\n                    >\r\n                      <mat-icon>delete_forever</mat-icon>\r\n                    </button>\r\n                    <button\r\n                      class=\"row-span-1 pt-1 text-center transition duration-150 ease-in-out hover:text-green-400\"\r\n                      data-bs-toggle=\"tooltip\"\r\n                      data-bs-placement=\"top\"\r\n                      title=\"Move section down\"\r\n                      (click)=\"move(1, i)\"\r\n                      *ngIf=\"i !== this.form.value.content.length - 1\"\r\n                    >\r\n                      <mat-icon>\r\n                        arrow_downward\r\n                      </mat-icon>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <fieldset>\r\n              <dz-block-type-menu\r\n                (newItemEvent)=\"onAddType($event)\"\r\n              ></dz-block-type-menu>\r\n              <div class=\"flex\">\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"content-center px-2 py-4 text-white bg-green-500 rounded-md disabled:bg-red-400 focus:bg-green-600 focus:outline-none\"\r\n                  (click)=\"onSubmit()\"\r\n                  [disabled]=\"\r\n                    form.value.content.length === 0 ||\r\n                    form.value.articleTitle === ''\r\n                  \"\r\n                >\r\n                  Publish article\r\n                </button>\r\n              </div>\r\n            </fieldset>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- <div>\r\n  <dz-article-preview [parentFormGroup]=\"form.value\"></dz-article-preview>\r\n</div> -->\r\n"
        },
        {
            "name": "ArticleFormInfoComponent",
            "id": "component-ArticleFormInfoComponent-a4df2ac3e12507e591db9cff1a580eb7d764e88602f7ae920be1b34eb9760ffa04833d96c3240cdf104b695af662f6bb9a041c0c1a3bd029f2dc57afbb8dce7f",
            "file": "src/app/shared/modules/articleForms/components/articleFormInfo/articleFormInfo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-article-form-info",
            "styleUrls": [
                "./articleFormInfo.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./articleFormInfo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "old_tag_list_props",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "parentFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected_tag_output",
                    "defaultValue": "new EventEmitter<string[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "available_tag_list",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "selected_tag_list",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "addTag",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeTag",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\r\nimport { FormGroup } from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'dz-article-form-info',\r\n  templateUrl: './articleFormInfo.component.html',\r\n  styleUrls: ['./articleFormInfo.component.sass'],\r\n})\r\nexport class ArticleFormInfoComponent implements OnInit {\r\n  @Input() parentFormGroup!: FormGroup\r\n  @Output() selected_tag_output = new EventEmitter<string[]>()\r\n  @Input() old_tag_list_props: string[]\r\n  selected_tag_list: string[] = []\r\n  available_tag_list: string[]\r\n  constructor() {\r\n    this.available_tag_list = [\r\n      'hello',\r\n      'world0',\r\n      'world1',\r\n      'world2',\r\n      'world3',\r\n      'world4',\r\n      'world5',\r\n      'world6',\r\n    ]\r\n    this.old_tag_list_props = []\r\n  }\r\n  addTag(value: string, index: number) {\r\n    this.selected_tag_list.push(value)\r\n\r\n    this.available_tag_list.splice(index, 1)\r\n    this.selected_tag_output.emit(this.selected_tag_list)\r\n  }\r\n  removeTag(value: any) {\r\n    this.selected_tag_output.emit(value)\r\n  }\r\n  ngOnInit() {\r\n    this.initValues()\r\n  }\r\n  initValues() {\r\n    if (this.old_tag_list_props[0] !== '') {\r\n      this.available_tag_list = this.available_tag_list.filter((val) => {\r\n        return !this.old_tag_list_props.includes(val)\r\n      })\r\n      //this.selected_tag_list = this.old_tag_list_props\r\n      console.log(this.selected_tag_list)\r\n      for (let i = 0; i < this.old_tag_list_props.length; i++)\r\n        this.selected_tag_list.push(this.old_tag_list_props[i])\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./articleFormInfo.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [formGroup]=\"parentFormGroup\" class=\"w-full\">\r\n  <div class=\"flex content-center w-full text-center\">\r\n    <h1 class=\"content-center w-full text-center\">Card Data</h1>\r\n  </div>\r\n  <div class=\"border-2\">\r\n    <div class=\"mb-6\">\r\n      <label class=\"block\"></label>\r\n      <fieldset class=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n          placeholder=\"title\"\r\n          formControlName=\"articleTitle\"\r\n        />\r\n      </fieldset>\r\n    </div>\r\n    <div class=\"mb-6\">\r\n      <label class=\"block\">\r\n        Description\r\n      </label>\r\n      <fieldset class=\"form-group\">\r\n        <textarea\r\n          type=\"text\"\r\n          class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n          placeholder=\"Description\"\r\n          formControlName=\"articleDescription\"\r\n        ></textarea>\r\n      </fieldset>\r\n    </div>\r\n    <div class=\"mb-6\">\r\n      <!--  -->\r\n      <!-- <div\r\n        class=\"flex flex-wrap items-end justify-center space-x-2\"\r\n        *ngIf=\"selected_tag_list\"\r\n      >\r\n        <span\r\n          *ngFor=\"let item of selected_tag_list; let i = index\"\r\n          class=\"flex text-sm font-semibold text-gray-500 transition duration-300 bg-green-200 rounded-full cursor-pointer align-center active:bg-gray-300 ease w-max\"\r\n          (click)=\"removeTag(i, item)\"\r\n        >\r\n          <span class=\"flex items-center px-3 py-2\">\r\n            {{ item }}\r\n          </span>\r\n          <button class=\"bg-transparent hover focus:outline-none\">\r\n            <svg\r\n              aria-hidden=\"true\"\r\n              focusable=\"false\"\r\n              data-prefix=\"fas\"\r\n              data-icon=\"times\"\r\n              class=\"w-3 mr-4\"\r\n              role=\"img\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 352 512\"\r\n            >\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"\r\n              ></path>\r\n            </svg>\r\n          </button>\r\n        </span>\r\n      </div> -->\r\n      <!--  -->\r\n      <!-- <div\r\n        class=\"flex flex-wrap items-end justify-center space-x-2\"\r\n        *ngIf=\"available_tag_list\"\r\n      >\r\n        <span\r\n          *ngFor=\"let item of available_tag_list; let i = index\"\r\n          class=\"flex text-sm font-semibold text-gray-500 transition duration-300 bg-gray-200 rounded-full cursor-pointer align-center active:bg-gray-300 ease w-max\"\r\n          (click)=\"addTag(item, i)\"\r\n        >\r\n          <span class=\"flex items-center px-3 py-2\">\r\n            {{ item }}\r\n          </span>\r\n          <button class=\"bg-transparent hover focus:outline-none\">\r\n            <svg\r\n              aria-hidden=\"true\"\r\n              focusable=\"false\"\r\n              data-prefix=\"fas\"\r\n              data-icon=\"times\"\r\n              class=\"w-3 mr-4\"\r\n              role=\"img\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 352 512\"\r\n            >\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"\r\n              ></path>\r\n            </svg>\r\n          </button>\r\n        </span>\r\n      </div> -->\r\n      <dz-tag-selector\r\n        [old_tag_list_props]=\"old_tag_list_props\"\r\n        (selected_tag_output)=\"removeTag($event)\"\r\n      ></dz-tag-selector>\r\n      <!--  -->\r\n      <!-- <fieldset class=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n          placeholder=\"Enter available_tag_list\"\r\n          formControlName=\"available_tag_list\"\r\n        />\r\n      </fieldset> -->\r\n    </div>\r\n    <div class=\"flex justify-center\">\r\n      <div class=\"\">\r\n        <h3 class=\"text-center\">Image</h3>\r\n        <dz-article-image-form\r\n          [parentFormGroup]=\"parentFormGroup\"\r\n        ></dz-article-image-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ArticleImageFormComponent",
            "id": "component-ArticleImageFormComponent-220f1623061d45bad3c49b98100e08ead98983e934a9a46e0c67d43f1435dc6bd914020ee4eb5d09de8701a419cac3e6cfe142d86051bc2721ed412cbf08a993",
            "file": "src/app/shared/modules/imageUploader/components/articleImage/article-image-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-article-image-form",
            "styleUrls": [
                "./article-image-form.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./article-image-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "imageNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "initialValues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "ArticleInputInterface",
                    "decorators": []
                },
                {
                    "name": "parentFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticleBlockInterface[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "imgResultAfterCompress",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "imgResultAfterResize",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "imgResultBeforeCompress",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "imgResultMultiple",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UploadResponse[]",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "imgResultUpload",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "compressFile",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDeleteImage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "uploadAnResize",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "uploadFile",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "uploadMultipleFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, Input, OnInit } from '@angular/core'\r\nimport { FormGroup, FormBuilder } from '@angular/forms'\r\nimport {\r\n  DataUrl,\r\n  UploadResponse,\r\n  NgxImageCompressService,\r\n} from 'ngx-image-compress'\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { ArticleInputInterface } from 'src/app/shared/interfaces/articleInput.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-article-image-form',\r\n  templateUrl: './article-image-form.component.html',\r\n  styleUrls: ['./article-image-form.component.sass'],\r\n})\r\nexport class ArticleImageFormComponent implements OnInit, AfterViewInit {\r\n  @Input() parentFormGroup!: FormGroup\r\n  @Input('initialValues') initialValuesProps!: ArticleInputInterface\r\n  @Input('imageNumber') imageNumber: number\r\n  content!: ArticleBlockInterface[]\r\n  image: any\r\n  url: any\r\n\r\n  constructor(private imageCompress: NgxImageCompressService) {\r\n    this.imageNumber = 0\r\n  }\r\n  ngAfterViewInit(): void {}\r\n\r\n  ngOnInit() {\r\n    this.initValues()\r\n  }\r\n  initValues(): void {\r\n    this.url = environment.baseMedia + this.parentFormGroup.value.articleImage\r\n  }\r\n  onDeleteImage(): void {\r\n    this.url = ''\r\n    this.parentFormGroup.value.image = this.url\r\n  }\r\n\r\n  imgResultBeforeCompress: DataUrl = ''\r\n  imgResultAfterCompress: DataUrl = ''\r\n  imgResultAfterResize: DataUrl = ''\r\n  imgResultUpload: DataUrl = ''\r\n  imgResultMultiple: UploadResponse[] = []\r\n\r\n  compressFile() {\r\n    console.log('here')\r\n    return this.imageCompress\r\n      .uploadFile()\r\n      .then(({ image, orientation }: UploadResponse) => {\r\n        console.warn('Size in bytes was:', this.imageCompress.byteCount(image))\r\n        this.imgResultBeforeCompress = image\r\n        this.imageCompress\r\n          .compressFile(image, orientation, 100, 100)\r\n          .then((result: DataUrl) => {\r\n            this.url = result\r\n            this.parentFormGroup.patchValue({ articleImage: this.url })\r\n          })\r\n      })\r\n  }\r\n\r\n  uploadFile() {\r\n    return this.imageCompress\r\n      .uploadFile()\r\n      .then(({ image, orientation }: UploadResponse) => {\r\n        this.imgResultUpload = image\r\n      })\r\n  }\r\n\r\n  uploadMultipleFiles() {\r\n    return this.imageCompress\r\n      .uploadMultipleFiles()\r\n      .then((multipleOrientedFiles: UploadResponse[]) => {\r\n        this.imgResultMultiple = multipleOrientedFiles\r\n        console.warn(`${multipleOrientedFiles.length} files selected`)\r\n      })\r\n  }\r\n\r\n  uploadAnResize() {\r\n    return this.imageCompress\r\n      .uploadFile()\r\n      .then(({ image, orientation }: UploadResponse) => {\r\n        console.warn('Size in bytes was:', this.imageCompress.byteCount(image))\r\n        console.warn('Compressing and resizing to width 200px height 100px...')\r\n\r\n        this.imageCompress\r\n          .compressFile(image, orientation, 50, 50, 200, 100)\r\n          .then((result: DataUrl) => {\r\n            this.imgResultAfterResize = result\r\n            console.warn(\r\n              'Size in bytes is now:',\r\n              this.imageCompress.byteCount(result),\r\n            )\r\n          })\r\n      })\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./article-image-form.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "imageCompress",
                        "type": "NgxImageCompressService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "imageCompress",
                        "type": "NgxImageCompressService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div [formGroup]=\"parentFormGroup\">\r\n  <div class=\"max-w-md mx-auto rounded-lg md:max-w-xl\">\r\n    <div class=\"md:flex\">\r\n      <div class=\"w-full p-3\">\r\n        <button (click)=\"compressFile()\" class=\"w-full h-full\">\r\n          <div *ngIf=\"url\" class=\"relative\">\r\n            <img [src]=\"url\" class=\"flex justify-center\" />\r\n            <button\r\n              *ngIf=\"url\"\r\n              (click)=\"onDeleteImage(); $event.stopPropagation()\"\r\n            >\r\n              <mat-icon\r\n                class=\"absolute z-20 text-xl hover:text-red-600 top-2 right-4 x\"\r\n              >\r\n                delete_forever\r\n              </mat-icon>\r\n            </button>\r\n          </div>\r\n\r\n          <div\r\n            *ngIf=\"!url\"\r\n            class=\"relative flex items-center justify-center h-48 bg-gray-100 border-2 border-blue-700 border-dashed border-dotted rounded-lg\"\r\n          >\r\n            <div class=\"\">\r\n              <div class=\"flex flex-col items-center\">\r\n                <i class=\"text-blue-700 fa fa-folder-open fa-4x\"></i>\r\n                <span class=\"block font-normal text-gray-400\"></span>\r\n              </div>\r\n            </div>\r\n\r\n            Upload and compress Image\r\n          </div>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ArticlePreviewComponent",
            "id": "component-ArticlePreviewComponent-4bf9696f84f1414582450110023b1c682b3d0d2f4224bd1ab69d9b50c1846663b7b3547f115c5bc6096dd7d247a6e97283c62fe04e0256af0b9ed7fed9d292a1",
            "file": "src/app/shared/modules/articlePreview/components/articlePreview/article.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-article-preview",
            "styleUrls": [
                "./article.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./article.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "parentFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "ArticleInputInterface",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAuthorClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\nimport { FormGroup } from '@angular/forms'\r\n\r\nimport { Subscription, Observable } from 'rxjs'\r\nimport { ArticleInputInterface } from 'src/app/shared/interfaces/articleInput.interface'\r\n\r\n@Component({\r\n  selector: 'dz-article-preview',\r\n  templateUrl: './article.component.html',\r\n  styleUrls: ['./article.component.scss'],\r\n})\r\nexport class ArticlePreviewComponent implements OnInit, OnDestroy {\r\n  @Input('parentFormGroup') article!: ArticleInputInterface\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {\r\n    // console.log(this.article)\r\n  }\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n  onAuthorClick(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./article.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": ""
        },
        {
            "name": "BackendErrorMessagesComponent",
            "id": "component-BackendErrorMessagesComponent-b9c0c9c675f9b469940337c0f1aa9e4c1d282e0a155b4a679950f9f09d5ccf2efbc7ac9901c5066373de4c6543e8c8eb739d76396828042719e092f499adc55c",
            "file": "src/app/shared/modules/backendErrorMessages/components/backendErrorMessages/backendErrorMessages.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-backendErrors",
            "styleUrls": [
                "./backendErrorMessages.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./backendErrorMessages.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backendErrors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "BackendErrorsInterface | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\r\nimport { Store } from '@ngrx/store'\r\nimport { Observable } from 'rxjs'\r\nimport { BackendErrorsInterface } from 'src/app/shared/interfaces/backendError.interface'\r\n\r\n@Component({\r\n  selector: 'dz-backendErrors',\r\n  templateUrl: './backendErrorMessages.component.html',\r\n  styleUrls: ['./backendErrorMessages.component.sass'],\r\n})\r\nexport class BackendErrorMessagesComponent implements OnInit {\r\n  @Input('backendErrors') backendErrorsProps!: BackendErrorsInterface | null\r\n\r\n  errorMessages: string[]\r\n  constructor() {\r\n    this.errorMessages = []\r\n    console.log(this.backendErrorsProps)\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n/*\r\n    object.key(obj)\r\n        method returns an array of a given object's own enumerable property names, iterated in the same order that a normal loop would.\r\n    (obj)\r\n        The object of which the enumerable's own properties are to be returned.\r\n    .join(' ')\r\n        joins all array elements with (' ')\r\n*/\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./backendErrorMessages.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ul class=\"error-messages\">\r\n  <li *ngFor=\"let errorMessage of errorMessages\"></li>\r\n  {{\r\n    backendErrorsProps\r\n  }}\r\n</ul>\r\n<!--\r\n\r\n -->\r\n"
        },
        {
            "name": "BlockTypeMenuComponent",
            "id": "component-BlockTypeMenuComponent-433e8f6fec0612dae5affaf52dd823f63c9ac1c8db683b765f4bcd2f4214c4c4848caeb576dffaa2909fc238258786d3c58900c3c50ae3bff415a728fde3ecf8",
            "file": "src/app/shared/modules/articleContentBlock/components/block-type-menu/displayType001/blockTypeMenu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-block-type-menu",
            "styleUrls": [
                "./blockTypeMenu.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./blockTypeMenu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "newItemEvent",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "contentTypes",
                    "defaultValue": "environment.contentTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAddType",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "customObject",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "customObject",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  EventEmitter,\r\n  Output,\r\n} from '@angular/core'\r\nimport { MatDialogRef } from '@angular/material/dialog'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-block-type-menu',\r\n  templateUrl: './blockTypeMenu.component.html',\r\n  styleUrls: ['./blockTypeMenu.component.sass'],\r\n})\r\nexport class BlockTypeMenuComponent implements OnInit, OnDestroy {\r\n  constructor() {}\r\n  contentTypes = environment.contentTypes\r\n\r\n  @Output() newItemEvent = new EventEmitter<string>()\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  onAddType(type: string, customObject: boolean): void {\r\n    this.newItemEvent.emit(type)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./blockTypeMenu.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div class=\"flex w-full gap-2 p-1\">\r\n  <button\r\n    (click)=\"onAddType(contentTypes.title, false)\"\r\n    class=\"w-full h-full px-2 py-4 text-white rounded-md bg-cyan-500 focus:bg-cyan-800 focus:outline-none\"\r\n  >\r\n    title\r\n  </button>\r\n\r\n  <button\r\n    (click)=\"onAddType(contentTypes.body, false)\"\r\n    class=\"w-full h-full px-2 py-4 text-white rounded-md bg-cyan-500 focus:bg-cyan-800 focus:outline-none\"\r\n  >\r\n    body\r\n  </button>\r\n\r\n  <button\r\n    (click)=\"onAddType(contentTypes.image, false)\"\r\n    class=\"w-full h-full px-2 py-4 text-white rounded-md bg-cyan-500 focus:bg-cyan-800 focus:outline-none\"\r\n  >\r\n    image\r\n  </button>\r\n  <button\r\n    (click)=\"onAddType(contentTypes.imageImage, false)\"\r\n    class=\"w-full h-full px-2 py-4 text-white rounded-md bg-cyan-500 focus:bg-cyan-800 focus:outline-none\"\r\n  >\r\n    image image\r\n  </button>\r\n\r\n  <button\r\n    (click)=\"onAddType(contentTypes.imageBody, false)\"\r\n    class=\"w-full h-full px-2 py-4 text-white rounded-md bg-cyan-500 focus:bg-cyan-800 focus:outline-none\"\r\n  >\r\n    image body\r\n  </button>\r\n\r\n  <button\r\n    (click)=\"onAddType(contentTypes.bodyImage, false)\"\r\n    class=\"w-full h-full px-2 py-4 text-white rounded-md bg-cyan-500 focus:bg-cyan-800 focus:outline-none\"\r\n  >\r\n    body image\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "BodyFormType001Component",
            "id": "component-BodyFormType001Component-ad5149f9737660e8ff31912e440e9c9d42a791235c856120941dd502c6478df443e867ac53eea89b6b7a07722438f0b261b88899adeac7a71f62ecf4670e5aa6",
            "file": "src/app/shared/modules/articleContentBlock/components/bodys/type001/form/bodyFormType001.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-body-form-type-001",
            "styleUrls": [
                "./bodyFormType001.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./bodyFormType001.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialValues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "ArticleInputInterface",
                    "decorators": []
                },
                {
                    "name": "parentFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticleBlockInterface[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "imgResultAfterCompress",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "imgResultAfterResize",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "imgResultBeforeCompress",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "imgResultMultiple",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UploadResponse[]",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "imgResultUpload",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "compressFile",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "uploadFile",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\r\nimport { FormGroup } from '@angular/forms'\r\nimport {\r\n  NgxImageCompressService,\r\n  DataUrl,\r\n  UploadResponse,\r\n} from 'ngx-image-compress'\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { ArticleInputInterface } from 'src/app/shared/interfaces/articleInput.interface'\r\n\r\n@Component({\r\n  selector: 'dz-body-form-type-001',\r\n  templateUrl: './bodyFormType001.component.html',\r\n  styleUrls: ['./bodyFormType001.component.sass'],\r\n})\r\nexport class BodyFormType001Component implements OnInit {\r\n  @Input() parentFormGroup!: FormGroup\r\n\r\n  @Input('initialValues') initialValuesProps!: ArticleInputInterface\r\n\r\n  content!: ArticleBlockInterface[]\r\n  image: any\r\n  url: any\r\n\r\n  constructor(private imageCompress: NgxImageCompressService) {}\r\n\r\n  ngOnInit() {\r\n    this.url = this.parentFormGroup.value.image\r\n  }\r\n\r\n  imgResultBeforeCompress: DataUrl = ''\r\n  imgResultAfterCompress: DataUrl = ''\r\n  imgResultAfterResize: DataUrl = ''\r\n  imgResultUpload: DataUrl = ''\r\n  imgResultMultiple: UploadResponse[] = []\r\n\r\n  compressFile() {\r\n    return this.imageCompress\r\n      .uploadFile()\r\n      .then(({ image, orientation }: UploadResponse) => {\r\n        this.imgResultBeforeCompress = image\r\n\r\n        this.imageCompress\r\n          .compressFile(image, orientation, 50, 50)\r\n          .then((result: DataUrl) => {\r\n            this.url = result\r\n            this.parentFormGroup.value.image = this.url\r\n            console.log(\r\n              'image initialValues: ',\r\n              this.parentFormGroup.value.image,\r\n            )\r\n          })\r\n      })\r\n  }\r\n\r\n  uploadFile() {\r\n    return this.imageCompress\r\n      .uploadFile()\r\n      .then(({ image, orientation }: UploadResponse) => {\r\n        this.imgResultUpload = image\r\n      })\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./bodyFormType001.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "imageCompress",
                        "type": "NgxImageCompressService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "imageCompress",
                        "type": "NgxImageCompressService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- Main Quill library -->\r\n\r\n<div [formGroup]=\"parentFormGroup\" class=\"\">\r\n  <div class=\"mt-5\">\r\n    <div class=\"rounded-lg shadow-xl\">\r\n      <div class=\"mb-6\">\r\n        <label class=\"block my-2 text-sm\">\r\n          Description\r\n        </label>\r\n        <fieldset class=\"bg-white border rounded\">\r\n          <textarea\r\n            type=\"text\"\r\n            class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md h-44 focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n            placeholder=\"Description\"\r\n            formControlName=\"body\"\r\n          ></textarea>\r\n        </fieldset>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "BodyType001Component",
            "id": "component-BodyType001Component-43fe613db501f8123f33c3600f74a37677fa1710e3ba1d88b57ae624e54ed87a7c96e73100156e002392b4feb69675a1d1952582662709d7ff3501004893fe8a",
            "file": "src/app/shared/modules/articleContentBlock/components/bodys/type001/display/articleDisplayType005.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-body-type-001",
            "styleUrls": [
                "./articleDisplayType005.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./articleDisplayType005.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "ArticleBlockInterface",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\n\r\n@Component({\r\n  selector: 'dz-body-type-001',\r\n  templateUrl: './articleDisplayType005.component.html',\r\n  styleUrls: ['./articleDisplayType005.component.sass'],\r\n})\r\nexport class BodyType001Component implements OnInit, OnDestroy {\r\n  @Input('content') content!: ArticleBlockInterface\r\n\r\n  constructor() {}\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./articleDisplayType005.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n\r\n<div class=\"text-lg font-EB-Garamond\">\r\n  <p>{{ content.body }}</p>\r\n</div>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-8ceaf520f96e5437b08eeda244d84efb29effe62ddca4fc38eaa229085c2a1126c5715e61445bae741505aca1e4d377b350cb05fadd1dc45d9b2bbf7527029f1",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 747,
                            "end": 761,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 748,
                                "end": 756,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CardType001Component",
            "id": "component-CardType001Component-67f4990222873f27b92809fa302017d6e32b28b7d69093c18cc8c54419be1d688283cd86a89bd4f888785c0bff3b37669b7db43a71cba58b125c54d293722e43",
            "file": "src/app/shared/modules/Cards/components/cardType001/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-card-type-001",
            "styleUrls": [
                "./card.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "ArticlesInterface",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-card-type-001',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.sass'],\r\n})\r\nexport class CardType001Component implements OnInit, OnDestroy {\r\n  @Input('article') article!: ArticlesInterface\r\n  baseMedia: string\r\n  constructor() {\r\n    this.baseMedia = environment.baseMedia\r\n  }\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".multi-line\r\n  display: -webkit-box\r\n  -webkit-box-orient: vertical\r\n  -webkit-line-clamp: 4\r\n  overflow: hidden\r\n  //text-overflow: fade\r\n\r\n",
                    "styleUrl": "./card.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!-- <div class=\"\">\r\n  <div class=\"\">\r\n    <img\r\n      [src]=\"baseMedia + article.articleImage\"\r\n      alt=\"\"\r\n      class=\"w-full rounded shadow-sm max-h-80 min-h-[320px]\"\r\n      [routerLink]=\"['/article/', article.urlGen]\"\r\n    />\r\n  </div>\r\n  <h1\r\n    class=\"py-3 font-serif text-3xl font-semibold hover:underline hover:underline-offset-4 decoration-yellow-500\"\r\n    [routerLink]=\"['/article/', article.urlGen]\"\r\n  >\r\n    {{ article.articleTitle }}\r\n  </h1>\r\n  <h3 class=\"pb-3 text-sm font-medium\">\r\n    Author: {{ article.author.username }}\r\n  </h3>\r\n  <p class=\"pb-3 text-base break-normal\">\r\n    {{ article.articleDescription }} ...\r\n  </p>\r\n  <p\r\n    class=\"font-medium hover:underline hover:underline-offset-4 decoration-yellow-500\"\r\n    [routerLink]=\"['/article/', article.urlGen]\"\r\n  >\r\n    Read more\r\n  </p>\r\n</div> -->\r\n<div class=\"w-full p-6 m-4 border\">\r\n  <div class=\"flex mx-4\">\r\n    <div class=\"w-full px-4\">\r\n      <a href=\"\">\r\n        <img\r\n          src=\"https://images.unsplash.com/photo-1518235506717-e1ed3306a89b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80\"\r\n          alt=\"asdf\"\r\n          class=\"object-cover object-center w-full h-auto max-w-full min-w-[160px]\"\r\n        />\r\n      </a>\r\n    </div>\r\n    <div class=\"px-4\">\r\n      <header>\r\n        <h1 class=\"text-3xl font-semibold font-EB-Garamond\">\r\n          <a href=\"\">\r\n            {{ article.articleTitle }}\r\n          </a>\r\n        </h1>\r\n      </header>\r\n      <div class=\"flex gap-1 text-base\">\r\n        <span class=\"text-[#dc3545]\">{{ article.author.username }}</span>\r\n        <span>/</span>\r\n        <div *ngFor=\"let tag of article.tags; let x = index\" class=\"\">\r\n          <span *ngIf=\"x !== article.tags.length - 1\">{{ tag }},</span>\r\n          <span *ngIf=\"x == article.tags.length - 1\">{{ tag }}</span>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <p class=\"hidden text-xl font-normal leading-7 md:block\">\r\n          {{\r\n            article.articleDescription\r\n              | limitpipe: { length: 55, cocat: ' [...]' }\r\n          }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CardType002Component",
            "id": "component-CardType002Component-ba3d89f87f81bda5baca18a1fac1e4e3a9c42f8d93d01ba69062b4a4e013b1e90d22d3f3182f3c235e3d5e12522728ec198422623aaef0fbff348263efad52b6",
            "file": "src/app/shared/modules/Cards/components/cardType002/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-card-type-002",
            "styleUrls": [
                "./card.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "ArticlesInterface",
                    "decorators": []
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "fav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "pipe",
                    "defaultValue": "new DatePipe('en-US')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "storyBookTest",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DatePipe } from '@angular/common'\r\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-card-type-002',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.sass'],\r\n})\r\nexport class CardType002Component implements OnInit, OnDestroy {\r\n  @Input('article') article!: ArticlesInterface\r\n  @Input('index') indexProps!: number\r\n  baseMedia: string\r\n  date: string | null\r\n  pipe = new DatePipe('en-US')\r\n  imageUrl!: string\r\n  storyBookTest!: boolean\r\n  fav!: boolean\r\n  constructor() {\r\n    this.baseMedia = environment.baseMedia\r\n    this.date = this.pipe.transform(Date.now(), 'MMM, d')\r\n  }\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\nh1\r\n  @apply text-5xl mt-8 font-EB-Garamond text-center absolute m-0 bottom-4 text-white w-full\r\n\r\n.blog-wrapper\r\n  @apply p-4 flex flex-row justify-center flex-wrap max-w-[300px] m-4 bg-[#fff] border-0 border-[#CB6074] text-center cursor-pointer hover:shadow-[0_3px_10px_0_rgba(0,0,0,.1)]\r\n  .card-img\r\n    img\r\n      @apply hover:opacity-80\r\n    @apply relative text-center bg-[#CB6074] max-h-44 w-full border-b-4 border-[#CB6074]\r\n  .card-text\r\n    @apply py-8 px-4 leading-6\r\n.card-details\r\n  @apply mt-8 text-[#3C3C3C]\r\n  span\r\n    @apply px-0 py-8\r\n  i\r\n    @apply mr-1\r\n\r\n  &:before\r\n    content: ''\r\n    position: absolute\r\n    bottom: -8px\r\n    left: 50%\r\n    margin-left: -10px\r\n    width: 0\r\n    height: 0\r\n    border-top: solid 10px #CB6074\r\n    border-left: solid 10px transparent\r\n    border-right: solid 10px transparent\r\n  .read-more\r\n    display: inline-block\r\n    width: auto\r\n    text-align: center\r\n    text-transform: uppercase\r\n    background: #CB6074\r\n    color: #fff\r\n    padding: 15px\r\n    margin-bottom: 30px\r\n    font-family: 'Oswald', sans-serif\r\n    &:hover\r\n      background: darken(#CB6074,20%)\r\n.favorited\r\n  @apply text-red-600\r\n",
                    "styleUrl": "./card.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 21
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<head>\r\n  <link\r\n    href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\r\n    rel=\"stylesheet\"\r\n  />\r\n</head>\r\n<div class=\"blog-wrapper\">\r\n  <div class=\"blog-card\">\r\n    <div class=\"card-img\">\r\n      <img\r\n        src=\"https://images.unsplash.com/photo-1518235506717-e1ed3306a89b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80\"\r\n      />\r\n      <h1>New York</h1>\r\n    </div>\r\n    <div class=\"card-details\">\r\n      <span>\r\n        <i class=\"fa fa-calendar\"></i>\r\n        {{ date }}\r\n      </span>\r\n      <span>\r\n        <mat-icon [ngClass]=\"{ favorited: article.favorited === true }\">\r\n          favorite\r\n        </mat-icon>\r\n        {{ article.favoriteCount }}\r\n      </span>\r\n    </div>\r\n    <div class=\"card-text\">\r\n      <p>\r\n        {{ article.articleDescription }}\r\n      </p>\r\n    </div>\r\n    <div class=\"read-more\">Read More</div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CardType003Component",
            "id": "component-CardType003Component-0fefb39fcba807aad59f839ca5c207a89b6a2b9e512230aae9da14dab515cc90de014c91ba8cac9943884a90af5698cf21c7fd5ccfa26b455fad76229576b922",
            "file": "src/app/shared/modules/Cards/components/cardType003/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-card-type-003",
            "styleUrls": [
                "./card.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "ArticlesInterface",
                    "decorators": []
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "pipe",
                    "defaultValue": "new DatePipe('en-US')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "storyBookTest",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DatePipe } from '@angular/common'\r\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-card-type-003',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.sass'],\r\n})\r\nexport class CardType003Component implements OnInit, OnDestroy {\r\n  @Input('article') article!: ArticlesInterface\r\n  @Input('index') indexProps!: number\r\n  baseMedia: string\r\n  date: string | null\r\n  pipe = new DatePipe('en-US')\r\n  imageUrl!: string\r\n  storyBookTest!: boolean\r\n  constructor() {\r\n    this.baseMedia = environment.baseMedia\r\n    this.date = this.pipe.transform(Date.now(), 'EEEE, MMMM d, y')\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.article.articleImage !== undefined)\r\n      this.imageUrl = this.baseMedia + this.article.articleImage\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n    console.log(this.article)\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*PEN STYLES*/\r\n\r\n*\r\n  @apply box-border\r\n\r\n\r\nbody\r\n  @apply bg-[#f1f1f1] m-8\r\n\r\n\r\n$color_white: #fff\r\n$color_prime: #5ad67d\r\n$color_grey: #e2e2e2\r\n$color_grey_dark: #a2a2a2\r\n\r\n.blog-card\r\n  @apply w-full flex flex-col mx-auto my-4 shadow-[0_3px_7px_-15px_rgba(0,0,0,0.1)] mb-[1.6%] bg-white leading-snug font-sans border-4 overflow-hidden z-0\r\n  a\r\n    @apply hover:text-[#5ad67d]\r\n\r\n    .photo\r\n      @apply hover:transform hover:scale-[1.3] hover:rotate-3\r\n  .meta\r\n    @apply relative z-0 h-[200px]\r\n  .photo\r\n    @apply absolute top-0 right-0 bottom-0 left-0 bg-cover bg-center transition-[transform_.2s]\r\n\r\n  .details,\r\n  .details ul\r\n    @apply m-auto p-0 list-none\r\n  .details\r\n    @apply absolute top-0 bottom-0 -left-full m-auto transition-[left_.2s] bg-black opacity-60 text-white p-[10px] w-full text-sm\r\n\r\n    a\r\n      @apply border-dotted underline\r\n\r\n    ul li\r\n      @apply inline-block\r\n\r\n    .author:before\r\n      @apply mr-[10px]\r\n\r\n\r\n\r\n    .date:before\r\n      @apply mr-[10px]\r\n\r\n\r\n    // .tags\r\n    //   ul:before\r\n    //     @apply mr-[10px]\r\n\r\n    //   li\r\n    //     @apply mr-[2px]\r\n\r\n    //     &:first-child\r\n    //       @apply ml-[-4px]\r\n\r\n\r\n\r\n\r\n  .description\r\n    padding: 1rem\r\n    background: $color_white\r\n    position: relative\r\n    z-index: 1\r\n    h1,\r\n    h2\r\n      font-family: Poppins, sans-serif\r\n\r\n    h1\r\n      line-height: 1\r\n      margin: 0\r\n      font-size: 1.7rem\r\n\r\n    h2\r\n      font-size: 1rem\r\n      font-weight: 300\r\n      text-transform: uppercase\r\n      color: $color_grey_dark\r\n      margin-top: 5px\r\n\r\n    .read-more\r\n      text-align: right\r\n      a\r\n        color: $color_prime\r\n        display: inline-block\r\n        position: relative\r\n        &:after\r\n          content: \"\\f061\"\r\n          font-family: FontAwesome\r\n          margin-left: -10px\r\n          opacity: 0\r\n          vertical-align: middle\r\n          transition: margin .3s, opacity .3s\r\n\r\n\r\n        &:hover:after\r\n          margin-left: 5px\r\n          opacity: 1\r\n\r\n\r\n\r\n\r\n  p\r\n    position: relative\r\n    margin: 1rem 0 0\r\n    &:first-of-type\r\n      margin-top: 1.25rem\r\n      &:before\r\n        content: \"\"\r\n        position: absolute\r\n        height: 5px\r\n        background: $color_prime\r\n        width: 35px\r\n        top: -0.75rem\r\n        border-radius: 3px\r\n\r\n\r\n\r\n  &:hover\r\n    .details\r\n      left: 0%\r\n\r\n\r\n\r\n\r\n  @media (min-width: 640px)\r\n    flex-direction: row\r\n    max-width: 700px\r\n    .meta\r\n      flex-basis: 40%\r\n      height: auto\r\n\r\n    .description\r\n      flex-basis: 60%\r\n      &:before\r\n        transform: skewX(-3deg)\r\n        content: \"\"\r\n        background: #fff\r\n        width: 30px\r\n        position: absolute\r\n        left: -10px\r\n        top: 0\r\n        bottom: 0\r\n        z-index: -1\r\n\r\n\r\n    &.alt\r\n      flex-direction: row-reverse\r\n      .description\r\n        &:before\r\n          left: inherit\r\n          right: -10px\r\n          transform: skew(3deg)\r\n\r\n\r\n      .details\r\n        padding-left: 25px\r\n\r\n\r\n\r\n\r\n",
                    "styleUrl": "./card.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"blog-card\" *ngIf=\"indexProps % 2 !== 0\">\r\n  <div class=\"meta\">\r\n    <div\r\n      *ngIf=\"storyBookTest\"\r\n      class=\"photo\"\r\n      style=\"\r\n        background-image: url(https://storage.googleapis.com/chydlx/codepen/blog-cards/image-1.jpg);\r\n      \"\r\n    ></div>\r\n    <div\r\n      *ngIf=\"!storyBookTest\"\r\n      class=\"photo\"\r\n      style=\"background-image: url({{ imageUrl }})\"\r\n    ></div>\r\n    <ul class=\"details\">\r\n      <li class=\"author\">\r\n        <a href=\"#\">{{ article.author.username }}</a>\r\n      </li>\r\n      <li class=\"date\">{{ date }}</li>\r\n      <li class=\"tags flex\">\r\n        <ul *ngFor=\"let tag of article.tags\" class=\"flex\">\r\n          <li class=\"flex\">\r\n            <a\r\n              [routerLink]=\"['/feed', 'tag', tag]\"\r\n              routerLinkActive=\"active\"\r\n              [routerLinkActiveOptions]=\"{ exact: true }\"\r\n              class=\"flex\"\r\n            >\r\n              {{ tag }}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"description\">\r\n    <h1>{{ article.articleTitle }}</h1>\r\n    <p>\r\n      {{ article.articleDescription }}\r\n    </p>\r\n    <p class=\"read-more\">\r\n      <a [routerLink]=\"['/article/', article.urlGen]\">Read More</a>\r\n    </p>\r\n  </div>\r\n</div>\r\n<div class=\"blog-card alt\" *ngIf=\"indexProps % 2 === 0\">\r\n  <div class=\"meta\">\r\n    <div\r\n      *ngIf=\"storyBookTest\"\r\n      class=\"photo\"\r\n      style=\"\r\n        background-image: url(https://storage.googleapis.com/chydlx/codepen/blog-cards/image-1.jpg);\r\n      \"\r\n    ></div>\r\n    <div\r\n      *ngIf=\"!storyBookTest\"\r\n      class=\"photo\"\r\n      style=\"background-image: url({{ imageUrl }})\"\r\n    ></div>\r\n    <ul class=\"details\">\r\n      <li class=\"author\">\r\n        <a href=\"#\">{{ article.author.username }}</a>\r\n      </li>\r\n      <li class=\"date\">{{ date }}</li>\r\n      <li class=\"tags\">\r\n        <ul *ngFor=\"let tag of article.tags\" class=\"flex\">\r\n          <li class=\"flex\">\r\n            <a\r\n              [routerLink]=\"['/feed', 'tag', tag]\"\r\n              routerLinkActive=\"active\"\r\n              [routerLinkActiveOptions]=\"{ exact: true }\"\r\n            >\r\n              {{ tag }}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"description\">\r\n    <h1>{{ article.articleTitle }}</h1>\r\n    <p>\r\n      {{ article.articleDescription }}\r\n    </p>\r\n    <p class=\"read-more\">\r\n      <a [routerLink]=\"['/article/', article.urlGen]\">Read More</a>\r\n    </p>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CardType004Component",
            "id": "component-CardType004Component-fbb2d5f7b28c880f0f595b4bb9c9bd474748eb4f1f18af131a7fa380be68d7107dc216168cc6df361d74c6a8993889f3c8b54a458544f2fdcce6127aed347932",
            "file": "src/app/shared/modules/Cards/components/cardType004/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-card-type-004",
            "styleUrls": [
                "./card.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "ArticlesInterface",
                    "decorators": []
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "pipe",
                    "defaultValue": "new DatePipe('en-US')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "storyBookTest",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "storyBookTestImageUrl",
                    "defaultValue": "'https://storage.googleapis.com/chydlx/codepen/blog-cards/image-1.jpg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DatePipe } from '@angular/common'\r\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-card-type-004',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.sass'],\r\n})\r\nexport class CardType004Component implements OnInit, OnDestroy {\r\n  @Input('article') article!: ArticlesInterface\r\n  @Input('index') indexProps!: number\r\n  baseMedia: string\r\n  date: string | null\r\n  pipe = new DatePipe('en-US')\r\n  imageUrl!: string\r\n  storyBookTest!: boolean\r\n  storyBookTestImageUrl: string =\r\n    'https://storage.googleapis.com/chydlx/codepen/blog-cards/image-1.jpg'\r\n  constructor() {\r\n    this.baseMedia = environment.baseMedia\r\n    this.date = this.pipe.transform(Date.now(), 'EEEE, MMMM d, y')\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.article.articleImage !== undefined)\r\n      this.imageUrl = this.baseMedia + this.article.articleImage\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n    console.log(this.article)\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*PEN STYLES*/\r\n\r\n*\r\n  @apply box-border\r\n\r\n\r\nbody\r\n  @apply bg-[#f1f1f1] m-8\r\n\r\n\r\n$color_white: #fff\r\n$color_prime: #5ad67d\r\n$color_grey: #e2e2e2\r\n$color_grey_dark: #a2a2a2\r\n\r\n.blog-card\r\n  @apply w-full flex flex-col mx-auto my-4 shadow-[0_3px_7px_-15px_rgba(0,0,0,0.1)] mb-[1.6%] bg-white leading-snug font-sans border-4 overflow-hidden z-0\r\n  a\r\n    @apply hover:text-[#5ad67d]\r\n\r\n    .photo\r\n      @apply hover:transform hover:scale-[1.3] hover:rotate-3\r\n  .meta\r\n    @apply relative z-0 h-[200px]\r\n  .photo\r\n    @apply absolute top-0 right-0 bottom-0 left-0 bg-cover bg-center transition-[transform_.2s]\r\n\r\n  .details,\r\n  .details ul\r\n    @apply m-auto p-0 list-none\r\n  .details\r\n    @apply absolute top-0 bottom-0 -left-full m-auto transition-[left_.2s] bg-black opacity-60 text-white p-[10px] w-full text-sm\r\n\r\n    a\r\n      @apply border-dotted underline\r\n\r\n    ul li\r\n      @apply inline-block\r\n\r\n    .author:before\r\n      @apply mr-[10px] content-['\\f007']\r\n\r\n\r\n\r\n    .date:before\r\n      @apply mr-[10px] content-['\\f133']\r\n\r\n\r\n    .tags\r\n      ul:before\r\n        @apply mr-[10px] content-['\\f02b']\r\n\r\n      li\r\n        @apply mr-[2px]\r\n\r\n        &:first-child\r\n          @apply ml-[-4px]\r\n\r\n\r\n\r\n\r\n  .description\r\n    padding: 1rem\r\n    background: $color_white\r\n    position: relative\r\n    z-index: 1\r\n    h1,\r\n    h2\r\n      font-family: Poppins, sans-serif\r\n\r\n    h1\r\n      line-height: 1\r\n      margin: 0\r\n      font-size: 1.7rem\r\n\r\n    h2\r\n      font-size: 1rem\r\n      font-weight: 300\r\n      text-transform: uppercase\r\n      color: $color_grey_dark\r\n      margin-top: 5px\r\n\r\n    .read-more\r\n      text-align: right\r\n      a\r\n        color: $color_prime\r\n        display: inline-block\r\n        position: relative\r\n        &:after\r\n          content: \"\\f061\"\r\n          font-family: FontAwesome\r\n          margin-left: -10px\r\n          opacity: 0\r\n          vertical-align: middle\r\n          transition: margin .3s, opacity .3s\r\n\r\n\r\n        &:hover:after\r\n          margin-left: 5px\r\n          opacity: 1\r\n\r\n\r\n\r\n\r\n  p\r\n    position: relative\r\n    margin: 1rem 0 0\r\n    &:first-of-type\r\n      margin-top: 1.25rem\r\n      &:before\r\n        content: \"\"\r\n        position: absolute\r\n        height: 5px\r\n        background: $color_prime\r\n        width: 35px\r\n        top: -0.75rem\r\n        border-radius: 3px\r\n\r\n\r\n\r\n  &:hover\r\n    .details\r\n      left: 0%\r\n\r\n\r\n\r\n\r\n  @media (min-width: 640px)\r\n    flex-direction: row\r\n    max-width: 700px\r\n    .meta\r\n      flex-basis: 40%\r\n      height: auto\r\n\r\n    .description\r\n      flex-basis: 60%\r\n      &:before\r\n        transform: skewX(-3deg)\r\n        content: \"\"\r\n        background: #fff\r\n        width: 30px\r\n        position: absolute\r\n        left: -10px\r\n        top: 0\r\n        bottom: 0\r\n        z-index: -1\r\n\r\n\r\n    &.alt\r\n      flex-direction: row-reverse\r\n      .description\r\n        &:before\r\n          left: inherit\r\n          right: -10px\r\n          transform: skew(3deg)\r\n\r\n\r\n      .details\r\n        padding-left: 25px\r\n\r\n\r\n\r\n\r\n",
                    "styleUrl": "./card.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"p-10\">\r\n  <!--Card 1-->\r\n  <div class=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n    <img\r\n      class=\"w-full\"\r\n      src=\"{{ storyBookTestImageUrl }}\"\r\n      alt=\"Mountain\"\r\n      *ngIf=\"storyBookTest\"\r\n    />\r\n    <img\r\n      class=\"w-full\"\r\n      src=\"{{ imageUrl }}\"\r\n      alt=\"Mountain\"\r\n      *ngIf=\"!storyBookTest\"\r\n    />\r\n    <div class=\"px-6 py-4\">\r\n      <div class=\"font-bold text-xl mb-2\">{{ article.articleTitle }}</div>\r\n      <p class=\"text-gray-700 text-base\">\r\n        {{ article.articleDescription }}\r\n      </p>\r\n    </div>\r\n    <div class=\"px-6 pt-4 pb-2 flex\">\r\n      <div *ngFor=\"let tag of article.tags\">\r\n        <span\r\n          class=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold\"\r\n          class=\"text-gray-700 mr-2 mb-2\"\r\n        >\r\n          {{ tag }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CardType005Component",
            "id": "component-CardType005Component-cadae869d3853bab69c6ef78cce177ef51ededaf0b70612e83b219e22de62f89fcd407c6ba8f429d67b137d851a4104b5bdc665eff5ec60812072ba6f9a65e95",
            "file": "src/app/shared/modules/Cards/components/cardType005/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-card-type-005",
            "styleUrls": [
                "./card.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "ArticlesInterface",
                    "decorators": []
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authorImageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "pipe",
                    "defaultValue": "new DatePipe('en-US')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "storyBookTest",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "storyBookTestImageUrl",
                    "defaultValue": "'https://storage.googleapis.com/chydlx/codepen/blog-cards/image-1.jpg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DatePipe } from '@angular/common'\r\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-card-type-005',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.sass'],\r\n})\r\nexport class CardType005Component implements OnInit, OnDestroy {\r\n  @Input('article') article!: ArticlesInterface\r\n  @Input('index') indexProps!: number\r\n  baseMedia: string\r\n  date: string | null\r\n  pipe = new DatePipe('en-US')\r\n  imageUrl!: string\r\n  authorImageUrl!: string\r\n  storyBookTest!: boolean\r\n  storyBookTestImageUrl: string =\r\n    'https://storage.googleapis.com/chydlx/codepen/blog-cards/image-1.jpg'\r\n  constructor() {\r\n    this.baseMedia = environment.baseMedia\r\n    this.date = this.pipe.transform(Date.now(), 'EEEE, MMMM d, y')\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.article.articleImage !== undefined)\r\n      this.imageUrl = this.baseMedia + this.article.articleImage\r\n    if (this.article.articleImage !== undefined)\r\n      this.authorImageUrl = this.baseMedia + this.article.author.profileImg\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n    console.log(this.article)\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*PEN STYLES*/\r\n\r\n*\r\n  @apply box-border\r\n\r\n\r\nbody\r\n  @apply bg-[#f1f1f1] m-8\r\n\r\n\r\n$color_white: #fff\r\n$color_prime: #5ad67d\r\n$color_grey: #e2e2e2\r\n$color_grey_dark: #a2a2a2\r\n\r\n.blog-card\r\n  @apply w-full flex flex-col mx-auto my-4 shadow-[0_3px_7px_-15px_rgba(0,0,0,0.1)] mb-[1.6%] bg-white leading-snug font-sans border-4 overflow-hidden z-0\r\n  a\r\n    @apply hover:text-[#5ad67d]\r\n\r\n    .photo\r\n      @apply hover:transform hover:scale-[1.3] hover:rotate-3\r\n  .meta\r\n    @apply relative z-0 h-[200px]\r\n  .photo\r\n    @apply absolute top-0 right-0 bottom-0 left-0 bg-cover bg-center transition-[transform_.2s]\r\n\r\n  .details,\r\n  .details ul\r\n    @apply m-auto p-0 list-none\r\n  .details\r\n    @apply absolute top-0 bottom-0 -left-full m-auto transition-[left_.2s] bg-black opacity-60 text-white p-[10px] w-full text-sm\r\n\r\n    a\r\n      @apply border-dotted underline\r\n\r\n    ul li\r\n      @apply inline-block\r\n\r\n    .author:before\r\n      @apply mr-[10px] content-['\\f007']\r\n\r\n\r\n\r\n    .date:before\r\n      @apply mr-[10px] content-['\\f133']\r\n\r\n\r\n    .tags\r\n      ul:before\r\n        @apply mr-[10px] content-['\\f02b']\r\n\r\n      li\r\n        @apply mr-[2px]\r\n\r\n        &:first-child\r\n          @apply ml-[-4px]\r\n\r\n\r\n\r\n\r\n  .description\r\n    padding: 1rem\r\n    background: $color_white\r\n    position: relative\r\n    z-index: 1\r\n    h1,\r\n    h2\r\n      font-family: Poppins, sans-serif\r\n\r\n    h1\r\n      line-height: 1\r\n      margin: 0\r\n      font-size: 1.7rem\r\n\r\n    h2\r\n      font-size: 1rem\r\n      font-weight: 300\r\n      text-transform: uppercase\r\n      color: $color_grey_dark\r\n      margin-top: 5px\r\n\r\n    .read-more\r\n      text-align: right\r\n      a\r\n        color: $color_prime\r\n        display: inline-block\r\n        position: relative\r\n        &:after\r\n          content: \"\\f061\"\r\n          font-family: FontAwesome\r\n          margin-left: -10px\r\n          opacity: 0\r\n          vertical-align: middle\r\n          transition: margin .3s, opacity .3s\r\n\r\n\r\n        &:hover:after\r\n          margin-left: 5px\r\n          opacity: 1\r\n\r\n\r\n\r\n\r\n  p\r\n    position: relative\r\n    margin: 1rem 0 0\r\n    &:first-of-type\r\n      margin-top: 1.25rem\r\n      &:before\r\n        content: \"\"\r\n        position: absolute\r\n        height: 5px\r\n        background: $color_prime\r\n        width: 35px\r\n        top: -0.75rem\r\n        border-radius: 3px\r\n\r\n\r\n\r\n  &:hover\r\n    .details\r\n      left: 0%\r\n\r\n\r\n\r\n\r\n  @media (min-width: 640px)\r\n    flex-direction: row\r\n    max-width: 700px\r\n    .meta\r\n      flex-basis: 40%\r\n      height: auto\r\n\r\n    .description\r\n      flex-basis: 60%\r\n      &:before\r\n        transform: skewX(-3deg)\r\n        content: \"\"\r\n        background: #fff\r\n        width: 30px\r\n        position: absolute\r\n        left: -10px\r\n        top: 0\r\n        bottom: 0\r\n        z-index: -1\r\n\r\n\r\n    &.alt\r\n      flex-direction: row-reverse\r\n      .description\r\n        &:before\r\n          left: inherit\r\n          right: -10px\r\n          transform: skew(3deg)\r\n\r\n\r\n      .details\r\n        padding-left: 25px\r\n\r\n\r\n\r\n\r\n",
                    "styleUrl": "./card.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"p-10\">\r\n  <!--Card 1-->\r\n  <div class=\"w-full lg:max-w-full lg:flex\">\r\n    <div\r\n      class=\"h-48 lg:h-auto lg:w-48 flex-none bg-cover rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden\"\r\n      style=\"background-image: url('{{ storyBookTestImageUrl }}');\"\r\n      title=\"Mountain\"\r\n      *ngIf=\"storyBookTest\"\r\n    ></div>\r\n    <div\r\n      class=\"h-48 lg:h-auto lg:w-48 flex-none bg-cover rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden\"\r\n      style=\"background-image: url('{{ imageUrl }}');\"\r\n      title=\"Mountain\"\r\n      *ngIf=\"!storyBookTest\"\r\n    ></div>\r\n    <div\r\n      class=\"border-r border-b border-l border-gray-400 lg:border-l-0 lg:border-t lg:border-gray-400 bg-white rounded-b lg:rounded-b-none lg:rounded-r p-4 flex flex-col justify-between leading-normal\"\r\n    >\r\n      <div class=\"mb-8\">\r\n        <p class=\"text-sm text-gray-600 flex items-center\">\r\n          <svg\r\n            class=\"fill-current text-gray-500 w-3 h-3 mr-2\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 20 20\"\r\n          >\r\n            <path\r\n              d=\"M4 8V6a6 6 0 1 1 12 0v2h1a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-8c0-1.1.9-2 2-2h1zm5 6.73V17h2v-2.27a2 2 0 1 0-2 0zM7 6v2h6V6a3 3 0 0 0-6 0z\"\r\n            />\r\n          </svg>\r\n          Members only\r\n        </p>\r\n        <div class=\"text-gray-900 font-bold text-xl mb-2\">\r\n          {{ article.articleTitle }}\r\n        </div>\r\n        <p class=\"text-gray-700 text-base\">{{ article.articleDescription }}</p>\r\n      </div>\r\n      <div class=\"flex items-center\">\r\n        <img\r\n          class=\"w-10 h-10 rounded-full mr-4\"\r\n          src=\"{{ storyBookTestImageUrl }}\"\r\n          alt=\"Avatar of Writer\"\r\n          *ngIf=\"storyBookTest\"\r\n        />\r\n        <img\r\n          class=\"w-10 h-10 rounded-full mr-4\"\r\n          src=\"{{ authorImageUrl }}\"\r\n          alt=\"Avatar of Writer\"\r\n          *ngIf=\"!storyBookTest\"\r\n        />\r\n        <div class=\"text-sm\">\r\n          <p class=\"text-gray-900 leading-none\">\r\n            {{ article.author.username }}\r\n          </p>\r\n          <p class=\"text-gray-600\">{{ date }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CardType006Component",
            "id": "component-CardType006Component-5c8dcd1d796d011e11089f75c70f8ad5e739535ac237846944e40cfa20f49d5b616649b9e0f931e0639d4cb12828e1c5da8b279b7525ad547376e1c4c5fe6ede",
            "file": "src/app/shared/modules/Cards/components/cardType006/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-card-type-006",
            "styleUrls": [
                "./card.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "ArticlesInterface",
                    "decorators": []
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authorImageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "pipe",
                    "defaultValue": "new DatePipe('en-US')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "storyBookTest",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "storyBookTestImageUrl",
                    "defaultValue": "'https://storage.googleapis.com/chydlx/codepen/blog-cards/image-1.jpg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DatePipe } from '@angular/common'\r\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-card-type-006',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.sass'],\r\n})\r\nexport class CardType006Component implements OnInit, OnDestroy {\r\n  @Input('article') article!: ArticlesInterface\r\n  @Input('index') indexProps!: number\r\n  baseMedia: string\r\n  date: string | null\r\n  pipe = new DatePipe('en-US')\r\n  imageUrl!: string\r\n  authorImageUrl!: string\r\n  storyBookTest!: boolean\r\n  storyBookTestImageUrl: string =\r\n    'https://storage.googleapis.com/chydlx/codepen/blog-cards/image-1.jpg'\r\n  constructor() {\r\n    this.baseMedia = environment.baseMedia\r\n    this.date = this.pipe.transform(Date.now(), 'EEEE, MMMM d, y')\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.article.articleImage !== undefined)\r\n      this.imageUrl = this.baseMedia + this.article.articleImage\r\n    if (this.article.articleImage !== undefined)\r\n      this.authorImageUrl = this.baseMedia + this.article.author.profileImg\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n    console.log(this.article)\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*PEN STYLES*/\r\n\r\n*\r\n  @apply box-border\r\n\r\n\r\nbody\r\n  @apply bg-[#f1f1f1] m-8\r\n\r\n\r\n$color_white: #fff\r\n$color_prime: #5ad67d\r\n$color_grey: #e2e2e2\r\n$color_grey_dark: #a2a2a2\r\n\r\n.blog-card\r\n  @apply w-full flex flex-col mx-auto my-4 shadow-[0_3px_7px_-15px_rgba(0,0,0,0.1)] mb-[1.6%] bg-white leading-snug font-sans border-4 overflow-hidden z-0\r\n  a\r\n    @apply hover:text-[#5ad67d]\r\n\r\n    .photo\r\n      @apply hover:transform hover:scale-[1.3] hover:rotate-3\r\n  .meta\r\n    @apply relative z-0 h-[200px]\r\n  .photo\r\n    @apply absolute top-0 right-0 bottom-0 left-0 bg-cover bg-center transition-[transform_.2s]\r\n\r\n  .details,\r\n  .details ul\r\n    @apply m-auto p-0 list-none\r\n  .details\r\n    @apply absolute top-0 bottom-0 -left-full m-auto transition-[left_.2s] bg-black opacity-60 text-white p-[10px] w-full text-sm\r\n\r\n    a\r\n      @apply border-dotted underline\r\n\r\n    ul li\r\n      @apply inline-block\r\n\r\n    .author:before\r\n      @apply mr-[10px] content-['\\f007']\r\n\r\n\r\n\r\n    .date:before\r\n      @apply mr-[10px] content-['\\f133']\r\n\r\n\r\n    .tags\r\n      ul:before\r\n        @apply mr-[10px] content-['\\f02b']\r\n\r\n      li\r\n        @apply mr-[2px]\r\n\r\n        &:first-child\r\n          @apply ml-[-4px]\r\n\r\n\r\n\r\n\r\n  .description\r\n    padding: 1rem\r\n    background: $color_white\r\n    position: relative\r\n    z-index: 1\r\n    h1,\r\n    h2\r\n      font-family: Poppins, sans-serif\r\n\r\n    h1\r\n      line-height: 1\r\n      margin: 0\r\n      font-size: 1.7rem\r\n\r\n    h2\r\n      font-size: 1rem\r\n      font-weight: 300\r\n      text-transform: uppercase\r\n      color: $color_grey_dark\r\n      margin-top: 5px\r\n\r\n    .read-more\r\n      text-align: right\r\n      a\r\n        color: $color_prime\r\n        display: inline-block\r\n        position: relative\r\n        &:after\r\n          content: \"\\f061\"\r\n          font-family: FontAwesome\r\n          margin-left: -10px\r\n          opacity: 0\r\n          vertical-align: middle\r\n          transition: margin .3s, opacity .3s\r\n\r\n\r\n        &:hover:after\r\n          margin-left: 5px\r\n          opacity: 1\r\n\r\n\r\n\r\n\r\n  p\r\n    position: relative\r\n    margin: 1rem 0 0\r\n    &:first-of-type\r\n      margin-top: 1.25rem\r\n      &:before\r\n        content: \"\"\r\n        position: absolute\r\n        height: 5px\r\n        background: $color_prime\r\n        width: 35px\r\n        top: -0.75rem\r\n        border-radius: 3px\r\n\r\n\r\n\r\n  &:hover\r\n    .details\r\n      left: 0%\r\n\r\n\r\n\r\n\r\n  @media (min-width: 640px)\r\n    flex-direction: row\r\n    max-width: 700px\r\n    .meta\r\n      flex-basis: 40%\r\n      height: auto\r\n\r\n    .description\r\n      flex-basis: 60%\r\n      &:before\r\n        transform: skewX(-3deg)\r\n        content: \"\"\r\n        background: #fff\r\n        width: 30px\r\n        position: absolute\r\n        left: -10px\r\n        top: 0\r\n        bottom: 0\r\n        z-index: -1\r\n\r\n\r\n    &.alt\r\n      flex-direction: row-reverse\r\n      .description\r\n        &:before\r\n          left: inherit\r\n          right: -10px\r\n          transform: skew(3deg)\r\n\r\n\r\n      .details\r\n        padding-left: 25px\r\n\r\n\r\n\r\n\r\n",
                    "styleUrl": "./card.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"pt-6 pb-12 bg-gray-300\">\r\n  <div id=\"card\" class=\"\">\r\n    <h2 class=\"text-center font-serif uppercase text-4xl xl:text-5xl\">\r\n      Recent Articles\r\n    </h2>\r\n    <!-- container for all cards -->\r\n    <div class=\"container w-100 lg:w-4/5 mx-auto flex flex-col\">\r\n      <!-- card -->\r\n      <div\r\n        v-for=\"card in cards\"\r\n        class=\"flex flex-col md:flex-row overflow-hidden bg-white rounded-lg shadow-xl mt-4 w-100 mx-2\"\r\n      >\r\n        <!-- media -->\r\n        <div class=\"h-64 w-auto md:w-1/2\">\r\n          <img\r\n            class=\"inset-0 h-full w-full object-cover object-center\"\r\n            src=\"{{ storyBookTestImageUrl }}\"\r\n            *ngIf=\"storyBookTest\"\r\n          />\r\n          <img\r\n            class=\"inset-0 h-full w-full object-cover object-center\"\r\n            src=\"{{ imageUrl }}\"\r\n            *ngIf=\"!storyBookTest\"\r\n          />\r\n        </div>\r\n        <!-- content -->\r\n        <div\r\n          class=\"w-full py-4 px-6 text-gray-800 flex flex-col justify-between\"\r\n        >\r\n          <h3 class=\"font-semibold text-lg leading-tight truncate\">\r\n            {{ article.articleTitle }}\r\n          </h3>\r\n          <p class=\"mt-2\">\r\n            {{ article.articleDescription }}\r\n          </p>\r\n          <p\r\n            class=\"text-sm text-gray-700 uppercase tracking-wide font-semibold mt-2\"\r\n          >\r\n            {{ article.author.username }} &bull; {{ date }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <!--/ card-->\r\n    </div>\r\n    <!--/ flex-->\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CardType007Component",
            "id": "component-CardType007Component-d4269a22252adb8100466334e51289139b5d349b646ea840fe5f5790879020376748b261476adb5d7e9069d33fc54f7802107d103c10b746063b74039b58ebb4",
            "file": "src/app/shared/modules/Cards/components/cardType007/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-card-type-007",
            "styleUrls": [
                "./card.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "ArticlesInterface",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-card-type-007',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.sass'],\r\n})\r\nexport class CardType007Component implements OnInit, OnDestroy {\r\n  @Input('article') article!: ArticlesInterface\r\n  baseMedia: string\r\n  constructor() {\r\n    this.baseMedia = environment.baseMedia\r\n  }\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".multi-line\r\n  display: -webkit-box\r\n  -webkit-box-orient: vertical\r\n  -webkit-line-clamp: 4\r\n  overflow: hidden\r\n  //text-overflow: fade\r\n\r\n",
                    "styleUrl": "./card.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!-- <div class=\"\">\r\n  <div class=\"\">\r\n    <img\r\n      [src]=\"baseMedia + article.articleImage\"\r\n      alt=\"\"\r\n      class=\"w-full rounded shadow-sm max-h-80 min-h-[320px]\"\r\n      [routerLink]=\"['/article/', article.urlGen]\"\r\n    />\r\n  </div>\r\n  <h1\r\n    class=\"py-3 font-serif text-3xl font-semibold hover:underline hover:underline-offset-4 decoration-yellow-500\"\r\n    [routerLink]=\"['/article/', article.urlGen]\"\r\n  >\r\n    {{ article.articleTitle }}\r\n  </h1>\r\n  <h3 class=\"pb-3 text-sm font-medium\">\r\n    Author: {{ article.author.username }}\r\n  </h3>\r\n  <p class=\"pb-3 text-base break-normal\">\r\n    {{ article.articleDescription }} ...\r\n  </p>\r\n  <p\r\n    class=\"font-medium hover:underline hover:underline-offset-4 decoration-yellow-500\"\r\n    [routerLink]=\"['/article/', article.urlGen]\"\r\n  >\r\n    Read more\r\n  </p>\r\n</div> -->\r\n<div class=\"w-full p-6 m-4 border\">\r\n  <div class=\"flex mx-4\">\r\n    <div class=\"w-full px-4\">\r\n      <a href=\"\">\r\n        <img\r\n          src=\"https://images.unsplash.com/photo-1518235506717-e1ed3306a89b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80\"\r\n          alt=\"asdf\"\r\n          class=\"object-cover object-center w-full h-auto max-w-full min-w-[160px]\"\r\n        />\r\n      </a>\r\n    </div>\r\n    <div class=\"px-4\">\r\n      <header>\r\n        <h1 class=\"text-2xl font-semibold font-EB-Garamond\">\r\n          <a href=\"\">\r\n            {{ article.articleTitle }}\r\n          </a>\r\n        </h1>\r\n      </header>\r\n\r\n      <div>\r\n        <p class=\"hidden text-xl font-normal leading-7 md:block\">\r\n          {{\r\n            article.articleDescription\r\n              | limitpipe: { length: 13, cocat: ' [...]' }\r\n          }}\r\n        </p>\r\n      </div>\r\n      <div class=\"flex gap-1 pt-2 text-base\">\r\n        <span class=\"text-[#dc3545]\">{{ article.author.username }}</span>\r\n        <span>/</span>\r\n        <div *ngFor=\"let tag of article.tags; let x = index\" class=\"\">\r\n          <span *ngIf=\"x !== article.tags.length - 1\">{{ tag }},</span>\r\n          <span *ngIf=\"x == article.tags.length - 1\">{{ tag }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CardType008Component",
            "id": "component-CardType008Component-a345342ca568927a68a03ada25aa82ee270be98d372096f6983781d4920e2b3a9f58468b7521bda288a70495b4e7b13bbc612629c18374e70272aef10c7c6bad",
            "file": "src/app/shared/modules/Cards/components/cardType008/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-card-type-008",
            "styleUrls": [
                "./card.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "article",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "ArticlesInterface",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-card-type-008',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.sass'],\r\n})\r\nexport class CardType008Component implements OnInit, OnDestroy {\r\n  @Input('article') article!: ArticlesInterface\r\n  baseMedia: string\r\n  constructor() {\r\n    this.baseMedia = environment.baseMedia\r\n  }\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".multi-line\r\n  display: -webkit-box\r\n  -webkit-box-orient: vertical\r\n  -webkit-line-clamp: 4\r\n  overflow: hidden\r\n  //text-overflow: fade\r\n\r\n",
                    "styleUrl": "./card.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!-- <div class=\"\">\r\n  <div class=\"\">\r\n    <img\r\n      [src]=\"baseMedia + article.articleImage\"\r\n      alt=\"\"\r\n      class=\"w-full rounded shadow-sm max-h-80 min-h-[320px]\"\r\n      [routerLink]=\"['/article/', article.urlGen]\"\r\n    />\r\n  </div>\r\n  <h1\r\n    class=\"py-3 font-serif text-3xl font-semibold hover:underline hover:underline-offset-4 decoration-yellow-500\"\r\n    [routerLink]=\"['/article/', article.urlGen]\"\r\n  >\r\n    {{ article.articleTitle }}\r\n  </h1>\r\n  <h3 class=\"pb-3 text-sm font-medium\">\r\n    Author: {{ article.author.username }}\r\n  </h3>\r\n  <p class=\"pb-3 text-base break-normal\">\r\n    {{ article.articleDescription }} ...\r\n  </p>\r\n  <p\r\n    class=\"font-medium hover:underline hover:underline-offset-4 decoration-yellow-500\"\r\n    [routerLink]=\"['/article/', article.urlGen]\"\r\n  >\r\n    Read more\r\n  </p>\r\n</div> -->\r\n<div class=\"w-full p-6 m-4 border\">\r\n  <div\r\n    class=\"flex mx-4 md:min-h-[400px] md:max-h-[420px] flex-none bg-no-repeat bg-cover overflow-hidden relative md:max-w-[550px]\"\r\n    style=\"\r\n      background-image: url('https://images.unsplash.com/photo-1518235506717-e1ed3306a89b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80');\r\n    \"\r\n  >\r\n    <!-- <div class=\"w-full px-4\">\r\n      <a href=\"\">\r\n        <img\r\n          src=\"https://images.unsplash.com/photo-1518235506717-e1ed3306a89b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80\"\r\n          alt=\"asdf\"\r\n          class=\"object-cover object-center w-full h-auto max-w-full min-w-[160px]\"\r\n        />\r\n      </a>\r\n    </div> -->\r\n    <div class=\"absolute bottom-0 w-full px-4 bg-black opacity-50 h-1/3\"></div>\r\n    <div class=\"absolute bottom-0 px-4\">\r\n      <header>\r\n        <span\r\n          class=\"px-2 py-1 text-sm font-medium text-left text-black uppercase bg-white w-fit\"\r\n        >\r\n          FEATURED\r\n        </span>\r\n        <h1 class=\"text-3xl font-semibold text-white font-EB-Garamond\">\r\n          <a href=\"\">\r\n            {{ article.articleTitle }}\r\n          </a>\r\n        </h1>\r\n      </header>\r\n\r\n      <!-- <div>\r\n        <p class=\"hidden text-xl font-normal leading-7 md:block\">\r\n          {{\r\n            article.articleDescription\r\n              | limitpipe: { length: 13, cocat: ' [...]' }\r\n          }}\r\n        </p>\r\n      </div> -->\r\n      <div class=\"flex gap-1 py-4 text-base\">\r\n        <span class=\"text-[#dc3545]\">{{ article.author.username }}</span>\r\n        <span class=\"text-gray-400\">/</span>\r\n        <div\r\n          *ngFor=\"let tag of article.tags; let x = index\"\r\n          class=\"text-gray-400\"\r\n        >\r\n          <span *ngIf=\"x !== article.tags.length - 1\">{{ tag }},</span>\r\n          <span *ngIf=\"x == article.tags.length - 1\">{{ tag }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CommentComponent",
            "id": "component-CommentComponent-6b9dfdd6c9ff3531f7493d193f2a40fd24eb67b45e83ee946bf63ca31fb3c68c2b384815cd0642eb340d50302a5f161d41daabf30763878f8804109c731f3ada",
            "file": "src/app/shared/modules/articleComments/components/comment/comment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-comment",
            "styleUrls": [
                "./comment.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./comment.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "comment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "CommentArrayInterface",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseMedia",
                    "defaultValue": "environment.baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "comments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CommentArrayInterface[] | null",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "commentsSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "edit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "isAuthor$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "pipe",
                    "defaultValue": "new DatePipe('en-US')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchComments",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DatePipe } from '@angular/common'\r\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core'\r\nimport { FormBuilder, FormGroup } from '@angular/forms'\r\nimport { ActivatedRoute, Router } from '@angular/router'\r\nimport { select, Store } from '@ngrx/store'\r\nimport { combineLatest, map, Observable, Subscription } from 'rxjs'\r\nimport { currentUserSelector } from 'src/app/pages/auth/store/selectors/auth.selectors'\r\nimport {\r\n  CommentArrayInterface,\r\n  CommentInterface,\r\n} from 'src/app/shared/interfaces/comment.interface'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\nimport { environment } from 'src/environments/environment'\r\nimport { deleteCommentAction } from '../../store/actions/deleteComment.actions'\r\nimport { commentSelector } from '../../store/selectors/comment.selectors'\r\n\r\n@Component({\r\n  selector: 'dz-comment',\r\n  templateUrl: './comment.component.html',\r\n  styleUrls: ['./comment.component.sass'],\r\n})\r\nexport class CommentComponent implements OnInit, OnDestroy {\r\n  @Input('apiUrl') aipUrlProps!: string\r\n  @Input('id') idProps!: number\r\n  @Input('comment') comment!: CommentArrayInterface\r\n  edit: boolean\r\n  form!: FormGroup\r\n  commentsSubscription!: Subscription\r\n  comments: CommentArrayInterface[] | null\r\n  baseMedia = environment.baseMedia\r\n  date!: string | null\r\n  pipe = new DatePipe('en-US')\r\n  isAuthor$: Observable<boolean>\r\n  constructor(\r\n    private store: Store,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n  ) {\r\n    this.edit = false\r\n    this.comments = null\r\n    this.isAuthor$ = this.store.pipe(select(currentUserSelector)).pipe(\r\n      map((currentUser) => {\r\n        if (currentUser)\r\n          return (\r\n            currentUser.currentUser.userName === this.comment.author.username\r\n          )\r\n        return false\r\n      }),\r\n    )\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.comment.creationDate)\r\n    this.date = this.pipe.transform(this.comment.creationDate, 'short')\r\n    console.log(this.date)\r\n  }\r\n  ngOnDestroy(): void {}\r\n  initializeForm(): void {}\r\n  initializeListeners(): void {}\r\n  onEdit(): void {\r\n    console.log('no')\r\n    this.edit = !this.edit\r\n  }\r\n  onDelete(): void {\r\n    console.log(this.comment)\r\n\r\n    let fullUrl = `${environment.DeleteCommentApiUrl}${this.comment.comment_id}/`\r\n    this.store.dispatch(deleteCommentAction({ url: fullUrl }))\r\n  }\r\n  onCancel() {\r\n    console.log('no')\r\n    this.edit = !this.edit\r\n  }\r\n  fetchComments(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./comment.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div>\r\n  <div\r\n    class=\"relative max-w-screen-sm mx-auto antialiased bg-dz-light\"\r\n    *ngIf=\"!edit\"\r\n  >\r\n    <h3 class=\"mb-4 text-lg font-semibold\">Comments</h3>\r\n\r\n    <div class=\"space-y-4\">\r\n      <div class=\"flex\">\r\n        <div class=\"flex-shrink-0 mr-3\">\r\n          <img\r\n            class=\"w-8 h-8 mt-2 rounded-full sm:w-10 sm:h-10\"\r\n            [src]=\"baseMedia + comment.author.profileImg\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div\r\n          class=\"flex-1 px-4 py-2 leading-relaxed border rounded-lg sm:px-6 sm:py-4\"\r\n        >\r\n          <strong class=\"\">{{ comment.author.username }}</strong>\r\n          <span class=\"text-xs text-gray-800\">\r\n            {{ comment.creationDate | dateAgo }}\r\n          </span>\r\n          <div class=\"relative h-full\">\r\n            <p class=\"text-sm\">\r\n              {{ comment.content }}\r\n            </p>\r\n            <p *ngIf=\"true\" class=\"absolute bottom-0 right-0\">\r\n              last edited x ago\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"relative flex h-10\">\r\n      <div class=\"absolute bottom-0 right-0 gap-3\">\r\n        <button\r\n          (click)=\"onEdit()\"\r\n          class=\"px-4 py-2 font-bold text-white rounded-full bg-dz-active hover:bg-dz-activehover\"\r\n        >\r\n          edit\r\n        </button>\r\n        <button\r\n          (click)=\"onDelete()\"\r\n          class=\"px-4 py-2 font-bold text-white rounded-full bg-dz-danger hover:bg-dz-dangerhover hover:text-black\"\r\n        >\r\n          delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"isAuthor$ | async\">\r\n    <dz-comment-form\r\n      [comment]=\"comment\"\r\n      *ngIf=\"edit\"\r\n      (cancelEdit)=\"onCancel()\"\r\n    ></dz-comment-form>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CommentFormComponent",
            "id": "component-CommentFormComponent-a5c8bac53e642866a4cf3a02fcb408851b469e314f92c76f1f12659613c05473d85e7ca6ad0a5e9cc25fd0a5668f9f81f13dc9f9033e4f7d85473642e5ce9640",
            "file": "src/app/shared/modules/articleComments/components/commentForm/form/commentForm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-comment-form",
            "styleUrls": [
                "./commentForm.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./commentForm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "comment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "CommentArrayInterface",
                    "decorators": []
                },
                {
                    "name": "idProps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "cancelEdit",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticleBlockInterface[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "currentPage",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "limit",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpParams } from '@angular/common/http'\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\r\nimport { FormBuilder, FormGroup } from '@angular/forms'\r\nimport { Store } from '@ngrx/store'\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\n\r\nimport { CommentArrayInterface } from 'src/app/shared/interfaces/comment.interface'\r\nimport { environment } from 'src/environments/environment'\r\nimport { postCommentAction } from '../../../store/actions/postComment.actions'\r\nimport { updateCommentAction } from '../../../store/actions/updateComment.actions'\r\n\r\n@Component({\r\n  selector: 'dz-comment-form',\r\n  templateUrl: './commentForm.component.html',\r\n  styleUrls: ['./commentForm.component.sass'],\r\n})\r\nexport class CommentFormComponent implements OnInit {\r\n  @Input('comment') comment!: CommentArrayInterface\r\n  @Input('idProps') idProps!: number\r\n  @Output() cancelEdit = new EventEmitter()\r\n  form!: FormGroup\r\n  limit = 0\r\n  currentPage: number = 0\r\n  content!: ArticleBlockInterface[]\r\n  image: any\r\n  url: any\r\n\r\n  constructor(private fb: FormBuilder, private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.initializeValues()\r\n    this.initializeForm()\r\n  }\r\n  initializeValues(): void {}\r\n\r\n  initializeForm(): void {\r\n    //this.contentBlockArray = [{ title: '', body: '', type: 1, image: '' }]\r\n    if (this.comment) {\r\n      this.form = this.fb.group({\r\n        content: this.comment.content,\r\n      })\r\n      this.url = environment.editCommentApiUrl + this.comment.comment_id + '/'\r\n    } else {\r\n      this.url = environment.postCommentApiUrl + this.idProps + '/'\r\n\r\n      this.form = this.fb.group({ content: '' })\r\n    }\r\n  }\r\n  onCancel(): void {\r\n    console.log('cancelled')\r\n    this.cancelEdit.emit()\r\n  }\r\n  onSave(): void {\r\n    const offset: number = this.limit * this.currentPage - this.limit\r\n    console.log(offset)\r\n    const params = new HttpParams()\r\n      .set('offset', offset)\r\n      .set('limit', this.limit)\r\n    //.set('comment', this.comment.comment_id)\r\n\r\n    console.log(`${this.url}?${params.toString()}`)\r\n    let fullUrl = `${this.url}`\r\n    if (this.idProps) {\r\n      this.store.dispatch(\r\n        postCommentAction({ url: fullUrl, comment: this.form.value }),\r\n      )\r\n    } else {\r\n      this.store.dispatch(\r\n        updateCommentAction({ url: fullUrl, comment: this.form.value }),\r\n      )\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./commentForm.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"max-w-screen-sm mx-auto antialiased bg-dz-light\" [formGroup]=\"form\">\r\n  <form class=\"w-full pt-2 bg-white rounded-lg\">\r\n    <div class=\"flex flex-wrap mb-6 -mx-3\">\r\n      <h2 class=\"px-4 pt-3 pb-2 text-lg text-gray-800\">Add a new comment</h2>\r\n      <div class=\"w-full px-3 mt-2 mb-2 md:w-full\">\r\n        <textarea\r\n          formControlName=\"content\"\r\n          class=\"w-full h-20 px-3 py-2 font-medium leading-normal placeholder-gray-700 bg-gray-100 border border-gray-400 rounded resize-none focus:outline-none focus:bg-white\"\r\n          name=\"body\"\r\n          placeholder=\"Type Your Comment\"\r\n          required\r\n        ></textarea>\r\n      </div>\r\n      <div class=\"flex items-end justify-end w-full px-3 md:w-full\">\r\n        <div class=\"flex w-full md:flex-grow\" *ngIf=\"this.comment\">\r\n          <button\r\n            (click)=\"onSave()\"\r\n            class=\"w-1/2 px-4 py-1 mr-1 font-medium tracking-wide text-gray-700 bg-white border border-gray-400 rounded-lg hover:bg-green-300\"\r\n          >\r\n            Post Edit\r\n          </button>\r\n          <button\r\n            (click)=\"onCancel()\"\r\n            class=\"w-1/2 px-4 py-1 mr-1 font-medium tracking-wide text-gray-700 bg-white border border-gray-400 rounded-lg hover:bg-red-500\"\r\n          >\r\n            Cancel Edit\r\n          </button>\r\n        </div>\r\n        <input\r\n          *ngIf=\"!this.comment\"\r\n          (click)=\"onSave()\"\r\n          class=\"px-4 py-1 mr-1 font-medium tracking-wide text-center text-gray-700 bg-white border border-gray-400 rounded-lg hover:bg-green-300\"\r\n          value=\"Post Comment\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "CommentMainComponent",
            "id": "component-CommentMainComponent-de769488e39e9a03eb0485765cb23ace4bb4aec79f389634ef2254d01b79556b2936ac720fc57487ea5cc774b5956508076e6028fc4d99568fe315b3c20b8f6e",
            "file": "src/app/shared/modules/articleComments/components/commentMain/commentMain.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-comment-main",
            "styleUrls": [
                "./commentMain.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./commentMain.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "initialValues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "CommentInterface[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "baseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "comments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CommentArrayInterface[] | null",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "commentsSubscription",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "currentPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "error$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | null>",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "isLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "limit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchComments",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpParams } from '@angular/common/http'\r\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core'\r\nimport { FormBuilder, FormGroup } from '@angular/forms'\r\nimport { ActivatedRoute, Params, Router } from '@angular/router'\r\nimport { select, Store } from '@ngrx/store'\r\nimport { Observable, Subscription } from 'rxjs'\r\nimport {\r\n  CommentInterface,\r\n  CommentArrayInterface,\r\n} from 'src/app/shared/interfaces/comment.interface'\r\nimport { AppStateInterface } from 'src/app/shared/store/state/app.state'\r\nimport { environment } from 'src/environments/environment'\r\nimport { deleteCommentAction } from '../../store/actions/deleteComment.actions'\r\nimport { getCommentAction } from '../../store/actions/getComment.actions'\r\nimport { postCommentAction } from '../../store/actions/postComment.actions'\r\nimport { updateCommentAction } from '../../store/actions/updateComment.actions'\r\nimport {\r\n  commentSelector,\r\n  isLoadingSelector,\r\n} from '../../store/selectors/comment.selectors'\r\n\r\n@Component({\r\n  selector: 'dz-comment-main',\r\n  templateUrl: './commentMain.component.html',\r\n  styleUrls: ['./commentMain.component.sass'],\r\n})\r\nexport class CommentMainComponent implements OnInit, OnDestroy {\r\n  @Input('apiUrl') aipUrlProps!: string\r\n  @Input('id') idProps!: number\r\n  @Input('initialValues') initialValuesProps!: CommentInterface[]\r\n  form!: FormGroup\r\n  commentsSubscription: Subscription = new Subscription()\r\n  comments: CommentArrayInterface[] | null\r\n  error$!: Observable<string | null>\r\n  isLoading$!: Observable<boolean>\r\n  baseUrl!: string\r\n  limit: number\r\n  currentPage: number\r\n  total!: number\r\n\r\n  baseMedia: string\r\n  constructor(\r\n    private store: Store,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n  ) {\r\n    this.comments = null\r\n    this.limit = 10\r\n    this.currentPage = 1\r\n    this.baseMedia = environment.baseMedia\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log()\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchComments()\r\n  }\r\n  ngOnDestroy(): void {}\r\n  initializeValues(): void {\r\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector))\r\n  }\r\n  initializeForm(): void {}\r\n  initializeListeners(): void {\r\n    this.commentsSubscription = this.store\r\n      .pipe(select(commentSelector))\r\n      .subscribe((comments: CommentInterface | null) => {\r\n        if (comments) {\r\n          this.comments = comments.commentFeed.comments\r\n          console.log(comments)\r\n        }\r\n      })\r\n  }\r\n\r\n  fetchComments(): void {\r\n    const offset: number = this.limit * this.currentPage - this.limit\r\n    console.log(offset)\r\n    const params = new HttpParams()\r\n    // .set('offset', offset)\r\n    // .set('limit', this.limit)\r\n\r\n    let fullUrl = `/${this.aipUrlProps}?${params.toString()}`\r\n    this.store.dispatch(getCommentAction({ url: fullUrl }))\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./commentMain.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div *ngIf=\"!(isLoading$ | async)\">\r\n  <div *ngFor=\"let comment of comments\">\r\n    <dz-comment [comment]=\"comment\" [apiUrl]=\"aipUrlProps\"></dz-comment>\r\n  </div>\r\n  <dz-comment-form [idProps]=\"idProps\"></dz-comment-form>\r\n</div>\r\n"
        },
        {
            "name": "ContentImageFormComponent",
            "id": "component-ContentImageFormComponent-772ac9d1805e7b0888370bc6c354d45cabcc129387b0aa853cb17871fd675a77f95000e795865b2ae4ce81a1992aa97340689067f94f4486516786e11635d78d",
            "file": "src/app/shared/modules/imageUploader/components/contentImage/content-image-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-content-image-form",
            "styleUrls": [
                "./content-image-form.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./content-image-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "imageNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "initialValues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "ArticleInputInterface",
                    "decorators": []
                },
                {
                    "name": "parentFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticleBlockInterface[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "imgResultAfterCompress",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "imgResultAfterResize",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "imgResultBeforeCompress",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "imgResultMultiple",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UploadResponse[]",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "imgResultUpload",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "compressFile",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDeleteImage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "uploadAnResize",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "uploadFile",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "uploadMultipleFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, Input, OnInit } from '@angular/core'\r\nimport { FormGroup, FormBuilder } from '@angular/forms'\r\nimport {\r\n  DataUrl,\r\n  UploadResponse,\r\n  NgxImageCompressService,\r\n} from 'ngx-image-compress'\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { ArticleInputInterface } from 'src/app/shared/interfaces/articleInput.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-content-image-form',\r\n  templateUrl: './content-image-form.component.html',\r\n  styleUrls: ['./content-image-form.component.sass'],\r\n})\r\nexport class ContentImageFormComponent implements OnInit, AfterViewInit {\r\n  @Input() parentFormGroup!: FormGroup\r\n  @Input('initialValues') initialValuesProps!: ArticleInputInterface\r\n  @Input('imageNumber') imageNumber: number\r\n  content!: ArticleBlockInterface[]\r\n  image: any\r\n  url: any\r\n\r\n  constructor(private imageCompress: NgxImageCompressService) {\r\n    this.imageNumber = 0\r\n  }\r\n  ngAfterViewInit(): void {}\r\n\r\n  ngOnInit() {\r\n    this.initValues()\r\n  }\r\n  initValues(): void {\r\n    if (this.parentFormGroup.value.imageOne) {\r\n      this.url = environment.baseMedia + this.parentFormGroup.value.imageOne\r\n      if (this.parentFormGroup.value.imageTwo) {\r\n        this.url = environment.baseMedia + this.parentFormGroup.value.imageTwo\r\n      }\r\n    }\r\n  }\r\n  onDeleteImage(): void {\r\n    this.url = ''\r\n    this.parentFormGroup.value.image = this.url\r\n  }\r\n\r\n  imgResultBeforeCompress: DataUrl = ''\r\n  imgResultAfterCompress: DataUrl = ''\r\n  imgResultAfterResize: DataUrl = ''\r\n  imgResultUpload: DataUrl = ''\r\n  imgResultMultiple: UploadResponse[] = []\r\n\r\n  compressFile() {\r\n    console.log('here')\r\n    return this.imageCompress\r\n      .uploadFile()\r\n      .then(({ image, orientation }: UploadResponse) => {\r\n        console.warn('Size in bytes was:', this.imageCompress.byteCount(image))\r\n        this.imgResultBeforeCompress = image\r\n        this.imageCompress\r\n          .compressFile(image, orientation, 50, 50)\r\n          .then((result: DataUrl) => {\r\n            console.warn(\r\n              'Size in bytes is now:',\r\n              this.imageCompress.byteCount(result),\r\n            )\r\n            this.url = result\r\n            if (this.imageNumber === 1) {\r\n              this.parentFormGroup.patchValue({ imageOne: this.url })\r\n            }\r\n            if (this.imageNumber === 2) {\r\n              this.parentFormGroup.patchValue({ imageTwo: this.url })\r\n            }\r\n          })\r\n      })\r\n  }\r\n\r\n  uploadFile() {\r\n    return this.imageCompress\r\n      .uploadFile()\r\n      .then(({ image, orientation }: UploadResponse) => {\r\n        this.imgResultUpload = image\r\n      })\r\n  }\r\n\r\n  uploadMultipleFiles() {\r\n    return this.imageCompress\r\n      .uploadMultipleFiles()\r\n      .then((multipleOrientedFiles: UploadResponse[]) => {\r\n        this.imgResultMultiple = multipleOrientedFiles\r\n        console.warn(`${multipleOrientedFiles.length} files selected`)\r\n      })\r\n  }\r\n\r\n  uploadAnResize() {\r\n    return this.imageCompress\r\n      .uploadFile()\r\n      .then(({ image, orientation }: UploadResponse) => {\r\n        console.warn('Size in bytes was:', this.imageCompress.byteCount(image))\r\n        console.warn('Compressing and resizing to width 200px height 100px...')\r\n\r\n        this.imageCompress\r\n          .compressFile(image, orientation, 50, 50, 200, 100)\r\n          .then((result: DataUrl) => {\r\n            this.imgResultAfterResize = result\r\n            console.warn(\r\n              'Size in bytes is now:',\r\n              this.imageCompress.byteCount(result),\r\n            )\r\n          })\r\n      })\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./content-image-form.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "imageCompress",
                        "type": "NgxImageCompressService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "imageCompress",
                        "type": "NgxImageCompressService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div [formGroup]=\"parentFormGroup\">\r\n  <div class=\"max-w-md mx-auto rounded-lg md:max-w-xl\">\r\n    <div class=\"md:flex\">\r\n      <div class=\"w-full p-3\">\r\n        <button (click)=\"compressFile()\" class=\"w-full h-full\">\r\n          <div *ngIf=\"url\" class=\"relative\">\r\n            <img [src]=\"url\" class=\"flex justify-center\" />\r\n            <button\r\n              *ngIf=\"url\"\r\n              (click)=\"onDeleteImage(); $event.stopPropagation()\"\r\n            >\r\n              <mat-icon\r\n                class=\"absolute z-20 text-xl hover:text-red-600 top-2 right-4 x\"\r\n              >\r\n                delete_forever\r\n              </mat-icon>\r\n            </button>\r\n          </div>\r\n\r\n          <div\r\n            *ngIf=\"!url\"\r\n            class=\"relative flex items-center justify-center h-48 bg-gray-100 border-2 border-blue-700 border-dashed border-dotted rounded-lg\"\r\n          >\r\n            <div class=\"\">\r\n              <div class=\"flex flex-col items-center\">\r\n                <i class=\"text-blue-700 fa fa-folder-open fa-4x\"></i>\r\n                <span class=\"block font-normal text-gray-400\"></span>\r\n              </div>\r\n            </div>\r\n\r\n            Upload and compress Image\r\n          </div>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CreateArticleComponent",
            "id": "component-CreateArticleComponent-fe9789b92bf271b1baa1f78f74c0094730556162fc1a99a6989c9633889e129916e07315782e29bb82e255e9ee4b2cf62351059b09100aa92abe8ad507691d91",
            "file": "src/app/pages/createArticle/components/createArticle/createArticle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-create-article",
            "styleUrls": [
                "./createArticle.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./createArticle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backendErrors$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<BackendErrorsInterface | null>",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "initialValues",
                    "defaultValue": "{\r\n    tags: [''],\r\n    articleTitle: '',\r\n    articleDescription: '',\r\n    articleImage: '',\r\n    content: [\r\n      // { title: 'sadf', type: 1, body: '', image: 'asdf', position: 0 },\r\n      // { title: 'sadf', type: 2, body: '', image: 'asdf', position: 0 },\r\n    ],\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticleInputInterface",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "isSubmitting$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "articleInput",
                            "type": "ArticleInputInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "articleInput",
                            "type": "ArticleInputInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { Store, select } from '@ngrx/store'\r\n\r\nimport { Observable } from 'rxjs'\r\n\r\nimport {\r\n  isSubmittingSelector,\r\n  validationErrorsSelector,\r\n} from 'src/app/pages/auth/store/selectors/auth.selectors'\r\nimport { ArticleInputInterface } from 'src/app/shared/interfaces/articleInput.interface'\r\nimport { BackendErrorsInterface } from 'src/app/shared/interfaces/backendError.interface'\r\n\r\nimport { createArticleAction } from '../../store/actions/createArticle.actions'\r\n\r\n@Component({\r\n  selector: 'dz-create-article',\r\n  templateUrl: './createArticle.component.html',\r\n  styleUrls: ['./createArticle.component.sass'],\r\n})\r\nexport class CreateArticleComponent implements OnInit {\r\n  initialValues: ArticleInputInterface = {\r\n    tags: [''],\r\n    articleTitle: '',\r\n    articleDescription: '',\r\n    articleImage: '',\r\n    content: [\r\n      // { title: 'sadf', type: 1, body: '', image: 'asdf', position: 0 },\r\n      // { title: 'sadf', type: 2, body: '', image: 'asdf', position: 0 },\r\n    ],\r\n  }\r\n\r\n  isSubmitting$!: Observable<boolean>\r\n  backendErrors$!: Observable<BackendErrorsInterface | null>\r\n\r\n  constructor(private store: Store) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector))\r\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector))\r\n  }\r\n\r\n  onSubmit(articleInput: ArticleInputInterface): void {\r\n    console.log(articleInput)\r\n    this.store.dispatch(createArticleAction({ articleInput }))\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./createArticle.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div class=\"\">\r\n  <p>sdhjaksdfhjgsdfgskdfhgaskdhfgkjhsgdf</p>\r\n  <dz-article-form\r\n    [initialValues]=\"initialValues\"\r\n    [isSubmitting]=\"isSubmitting$ | async\"\r\n    [errors]=\"backendErrors$ | async\"\r\n    (articleSubmit)=\"onSubmit($event)\"\r\n  ></dz-article-form>\r\n</div>\r\n"
        },
        {
            "name": "CustomDropdownComponent",
            "id": "component-CustomDropdownComponent-f766ce0c7981d7c904842630513db82dcbcfe653f84f2c0898c9383227a87774b79644fe2f2aee455030ac1dea8ba5fe7c0ceac3baf9e831dee26336443184c0",
            "file": "src/app/shared/modules/header/dropdownMenu/dropdownMenu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-custom-dropdown",
            "styleUrls": [
                "./dropdownMenu.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdownMenu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentUser$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CurrentUserInterface | null>",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { select, Store } from '@ngrx/store'\r\nimport { Observable } from 'rxjs'\r\nimport { logoutAction } from 'src/app/pages/auth/store/actions/auth.sync.actions'\r\nimport { currentUserSelector } from 'src/app/pages/auth/store/selectors/auth.selectors'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\n\r\n@Component({\r\n  selector: 'app-custom-dropdown',\r\n  templateUrl: './dropdownMenu.component.html',\r\n  styleUrls: ['./dropdownMenu.component.sass'],\r\n})\r\nexport class CustomDropdownComponent implements OnInit {\r\n  constructor(private store: Store) {}\r\n  currentUser$!: Observable<CurrentUserInterface | null>\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n  }\r\n  onLogout(): void {\r\n    this.store.dispatch(logoutAction())\r\n  }\r\n  initializeValues() {\r\n    this.currentUser$ = this.store.pipe(select(currentUserSelector))\r\n    this.currentUser$.subscribe()\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dropdownMenu.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div\r\n  class=\"absolute right-0 bg-white rounded shadow-sm dropmenu top-14 w-44 shadow-black\"\r\n>\r\n  <ul class=\"py-2\">\r\n    <li class=\"ml-2\">\r\n      <div class=\"flex\">\r\n        <img src=\"/assets/images/dzonics1 (1).svg\" alt=\"\" class=\"w-14 h-14\" />\r\n        <div class=\"relative flex items-center justify-center px-4\">\r\n          <label for=\"username\">\r\n            {{ (currentUser$ | async)?.currentUser?.userName }}\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </li>\r\n    <br />\r\n    <li class=\"ml-2 hover:bg-slate-400\">\r\n      <a\r\n        [routerLink]=\"['/profileupdate']\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        settings\r\n      </a>\r\n    </li>\r\n    <li class=\"ml-2 hover:bg-slate-400\">\r\n      <a>\r\n        profile\r\n      </a>\r\n    </li>\r\n    <li class=\"ml-2 hover:bg-slate-400\">\r\n      <a>\r\n        Favorites\r\n      </a>\r\n    </li>\r\n    <br />\r\n    <li>\r\n      <a\r\n        (click)=\"onLogout()\"\r\n        type=\"text\"\r\n        [routerLink]=\"['/']\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n        class=\"inline-flex items-center justify-center px-4 py-2 ml-8 text-base font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm whitespace-nowrap hover:bg-indigo-700\"\r\n      >\r\n        Log out\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n"
        },
        {
            "name": "EditArticleComponent",
            "id": "component-EditArticleComponent-0f87c1ecee1a147bbbd9feecddb6eeec4887da911404430962d711382226fdf820a7f920b3489dc286f75e13c20bb3d56e960091a4bfd9865e0b6df8b96007fd",
            "file": "src/app/pages/editArticle/components/editArticle/editArticle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-edit-article",
            "styleUrls": [
                "./editArticle.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./editArticle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backendErrors$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<BackendErrorsInterface | null>",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "initialValues$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ArticleInputInterface>",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "isAuthor$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "isLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "isSubmitting$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initialValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "articleInput",
                            "type": "ArticleInputInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "articleInput",
                            "type": "ArticleInputInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { ActivatedRoute, Router } from '@angular/router'\r\nimport { Store, select } from '@ngrx/store'\r\n\r\nimport { combineLatest, Observable } from 'rxjs'\r\nimport { filter, map } from 'rxjs/operators'\r\n//import { articleSelector } from 'src/app/pages/article/store/selectors/articles.selectors'\r\nimport { currentUserSelector } from 'src/app/pages/auth/store/selectors/auth.selectors'\r\n\r\nimport { ArticleInputInterface } from 'src/app/shared/interfaces/articleInput.interface'\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\nimport { BackendErrorsInterface } from 'src/app/shared/interfaces/backendError.interface'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\n\r\nimport {\r\n  saveArticleAction,\r\n  updateArticleAction,\r\n} from '../../store/actions/updateArticle.actions'\r\nimport {\r\n  articleSelector,\r\n  isLoadingSelector,\r\n  isSubmittingSelector,\r\n  validationErrorsSelector,\r\n} from '../../store/selectors/editArticle.selectors'\r\n\r\n@Component({\r\n  selector: 'dz-edit-article',\r\n  templateUrl: './editArticle.component.html',\r\n  styleUrls: ['./editArticle.component.sass'],\r\n})\r\nexport class EditArticleComponent implements OnInit {\r\n  initialValues$!: Observable<ArticleInputInterface>\r\n  isSubmitting$!: Observable<boolean>\r\n  isLoading$!: Observable<boolean>\r\n  backendErrors$!: Observable<BackendErrorsInterface | null>\r\n  title: string\r\n  isAuthor$!: Observable<boolean>\r\n  constructor(\r\n    private store: Store,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n  ) {\r\n    this.title = ''\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initialValues()\r\n    this.fetchData()\r\n    this.initializeListeners()\r\n  }\r\n\r\n  initialValues(): void {\r\n    this.title = this.route.snapshot.paramMap.get('title') || ''\r\n    this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector))\r\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector))\r\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector))\r\n    this.initialValues$ = this.store.pipe(\r\n      select(articleSelector),\r\n      filter(Boolean),\r\n      map((article: ArticlesInterface) => {\r\n        console.warn(article)\r\n\r\n        return <ArticleInputInterface>{\r\n          tags: article.tags,\r\n          articleTitle: article.articleTitle,\r\n          articleDescription: article.articleDescription,\r\n          articleImage: article.articleImage,\r\n          content: article.content,\r\n        }\r\n      }),\r\n    )\r\n  }\r\n\r\n  fetchData(): void {\r\n    this.isAuthor$ = combineLatest([\r\n      this.store.pipe(select(articleSelector)),\r\n      this.store.pipe(select(currentUserSelector)),\r\n    ]).pipe(\r\n      map(\r\n        ([article, currentUser]: [\r\n          ArticlesInterface | null,\r\n          CurrentUserInterface | null,\r\n        ]) => {\r\n          if (!article || !currentUser) {\r\n            return false\r\n          }\r\n\r\n          return currentUser.currentUser.userName === article.author.username\r\n        },\r\n      ),\r\n    )\r\n  }\r\n\r\n  initializeListeners(): void {\r\n    this.isAuthor$.subscribe((h) => {\r\n      if (!h) this.router.navigate(['/'])\r\n    })\r\n  }\r\n  onSubmit(articleInput: ArticleInputInterface): void {\r\n    this.store.dispatch(\r\n      updateArticleAction({ title: this.title, articleInput }),\r\n    )\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./editArticle.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- <dz-loading *ngIf=\"isLoading$ | async\"></dz-loading> -->\r\n<dz-article-form\r\n  *ngIf=\"initialValues$ | async\"\r\n  [initialValues]=\"initialValues$ | async\"\r\n  [isSubmitting]=\"isSubmitting$ | async\"\r\n  [errors]=\"backendErrors$ | async\"\r\n  (articleSubmit)=\"onSubmit($event)\"\r\n></dz-article-form>\r\n"
        },
        {
            "name": "EmailValidationComponent",
            "id": "component-EmailValidationComponent-35860cb2d881472a85547d1ea0cd6d5f39b93b461864fcc09b64d803c121af084d443e4adab35da1375c5b54de04102bbde410b6b92590d93438fe8c0a4b7c4d",
            "file": "src/app/pages/auth/components/emailValidation-component/emailValidation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-emailvalidation",
            "styleUrls": [
                "./emailValidation.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./emailValidation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\r\nimport { Store, select } from '@ngrx/store'\r\nimport { Observable } from 'rxjs'\r\nimport { BackendErrorsInterface } from 'src/app/shared/interfaces/backendError.interface'\r\nimport { LoginRequestInterface } from '../../interfaces/auth.login.request.interface'\r\nimport { logoutAction } from '../../store/actions/auth.sync.actions'\r\n\r\n// import { loginAction } from 'src/app/pages/auth/store/actions/auth.login.actions'\r\n// import {\r\n//   isSubmittingSelector,\r\n//   validationErrorsSelector,\r\n// } from '../../store/selectors/auth.selectors'\r\n// import { LoginRequestInterface } from '../../interface/loginRequest.interface'\r\n\r\n@Component({\r\n  selector: 'dz-emailvalidation',\r\n  templateUrl: './emailValidation.component.html',\r\n  styleUrls: ['./emailValidation.component.sass'],\r\n})\r\nexport class EmailValidationComponent implements OnInit {\r\n  constructor(private store: Store) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onLogout(): void {\r\n    this.store.dispatch(logoutAction())\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./emailValidation.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div>\r\n  <h1>\r\n    val email address\r\n  </h1>\r\n  <button (click)=\"onLogout()\">Logout</button>\r\n</div>\r\n"
        },
        {
            "name": "FavoritedComponent",
            "id": "component-FavoritedComponent-de36d056afbf8884f243de235a61ac15e28e332ae0c2979053660839a19399b17e44fa56c5e7eb8d1ed47053df1ac58159495f0733e201df5f39e2e02001c330",
            "file": "src/app/pages/userProfile/components/favoritedFeed/favoritedFeed.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-favorited-feed",
            "styleUrls": [
                "./favoritedFeed.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./favoritedFeed.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "tagName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\r\nimport { ActivatedRoute } from '@angular/router'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-favorited-feed',\r\n  templateUrl: './favoritedFeed.component.html',\r\n  styleUrls: ['./favoritedFeed.component.scss'],\r\n})\r\nexport class FavoritedComponent implements OnInit {\r\n  tagName: string\r\n  apiUrl: string\r\n  //@Input() UserID: string\r\n  constructor(private route: ActivatedRoute) {\r\n    this.tagName = 'favoritedFeed'\r\n    this.apiUrl = environment.favoritedFeedApiUrl\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.tagName = this.route.snapshot.paramMap.get('slug') || ''\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./favoritedFeed.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"home-page\">\r\n  <!-- <dz-banner></dz-banner> -->\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-9\">\r\n        <!-- <dz-feed-toggler [tagName]=\"tagName\"></dz-feed-toggler> -->\r\n        <dz-feed [apiUrl]=\"apiUrl\"></dz-feed>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <!-- <dz-popular-tags></dz-popular-tags> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FeedComponent",
            "id": "component-FeedComponent-3e3199e6d4ebd4c8094753f5dd65149b30651df7bf47a0543df92e9bbe6289a056679238f80a07a648e24dfb11458b1f9c72f570b1d7ee83d64b9fbc6e87e9f9",
            "file": "src/app/shared/modules/feed/components/feed/feed.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-feed",
            "styleUrls": [
                "./feed.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./feed.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "author",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "favorite",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tagName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "baseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "currentPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "error$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | null>",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "feed$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<[] | null>",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "feeds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticlesInterface[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "isLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "items",
                    "defaultValue": "['hello', 'world']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "limit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "offset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "pageCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "queryParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Params",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "queryPramamsSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "total$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchFeed",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initListners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onNav",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onPageNavigated",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onpageUp",
                    "args": [
                        {
                            "name": "page",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRemove",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n} from '@angular/core'\r\nimport { ActivatedRoute, Params, Router } from '@angular/router'\r\nimport { select, Store } from '@ngrx/store'\r\nimport { first, Observable, of, Subscription, tap } from 'rxjs'\r\n\r\nimport { getFeedAction } from '../../store/actions/getFeed.actions'\r\nimport {\r\n  articleCountSelector,\r\n  errorsSelector,\r\n  isLoadingSelector,\r\n  selectAllFeed,\r\n} from '../../store/selectors/feed.selectors'\r\nimport { GetFeedResponceInterface } from '../../interfaces/getFeedResponce.interface'\r\nimport { HttpParams } from '@angular/common/http'\r\nimport { environment } from 'src/environments/environment'\r\nimport { ArticlesInterface } from 'src/app/shared/interfaces/articles.interface'\r\n\r\n@Component({\r\n  selector: 'dz-feed',\r\n  templateUrl: './feed.component.html',\r\n  styleUrls: ['./feed.component.sass'],\r\n})\r\nexport class FeedComponent implements OnInit, OnDestroy, OnChanges {\r\n  @Input('apiUrl') aipUrlProps: string\r\n  @Input('tagName') tagName: string\r\n  @Input('author') author: string\r\n  @Input('favorite') favorite: string\r\n  queryPramamsSubscription!: Subscription\r\n  feed$!: Observable<ArticlesInterface[] | null>\r\n  error$!: Observable<string | null>\r\n  isLoading$!: Observable<boolean>\r\n  total$!: Observable<number>\r\n  queryParams!: Params\r\n  feeds!: ArticlesInterface[]\r\n  baseUrl: string\r\n  baseMedia: string\r\n\r\n  limit: number\r\n  currentPage: number\r\n\r\n  offset: number\r\n  items: string[] = ['hello', 'world']\r\n  date!: Date\r\n  pageCount: number\r\n  constructor(\r\n    private store: Store,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) {\r\n    this.baseMedia = environment.baseMedia\r\n    this.aipUrlProps = ''\r\n    this.tagName = ''\r\n    this.author = ''\r\n    this.favorite = ''\r\n    this.baseUrl = ''\r\n    this.pageCount = 0\r\n    this.currentPage = 0\r\n    this.limit = 10\r\n    this.offset = 0\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {}\r\n\r\n  ngOnInit(): void {\r\n    this.currentPage = 1\r\n\r\n    this.initValues()\r\n    this.feed$ = of(this.feeds)\r\n    console.log(this.feed$)\r\n    this.initListners()\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.queryPramamsSubscription.unsubscribe()\r\n  }\r\n  initListners() {\r\n    this.queryParams = { page: this.currentPage }\r\n    this.route.queryParams.subscribe((params) => {\r\n      if (params['page'] === undefined) {\r\n        this.currentPage = params['page']\r\n        console.log('bye')\r\n        this.currentPage = 1\r\n        this.router.navigate([], {\r\n          relativeTo: this.route,\r\n          queryParams: this.queryParams,\r\n          queryParamsHandling: 'merge', // remove to replace all query params by provided\r\n        })\r\n      } else {\r\n        this.currentPage = params['page']\r\n      }\r\n    })\r\n    this.fetchFeed()\r\n  }\r\n  initValues(): void {\r\n    this.isLoading$ = this.store.select(isLoadingSelector)\r\n    this.total$ = this.store\r\n      .select(articleCountSelector)\r\n      .pipe(tap((a) => (this.pageCount = Math.round(a / this.limit))))\r\n\r\n    this.feed$ = this.store.select(selectAllFeed)\r\n\r\n    this.error$ = this.store.pipe(select(errorsSelector))\r\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector))\r\n    this.offset = this.limit * +this.currentPage - this.limit\r\n  }\r\n  fetchFeed(): void {\r\n    this.offset = this.limit * +this.currentPage - this.limit\r\n    console.log(\r\n      'offset:',\r\n      this.offset,\r\n      'limit:',\r\n      this.limit,\r\n      'currentPage:',\r\n      +this.currentPage,\r\n    )\r\n    if (!this.tagName) {\r\n      const params = new HttpParams()\r\n        .append('offset', this.offset)\r\n        .append('limit', this.limit)\r\n      let fullUrl = `${this.aipUrlProps}?${params.toString()}`\r\n      this.store.dispatch(getFeedAction({ url: fullUrl }))\r\n    } else {\r\n      const params = new HttpParams()\r\n        .append('offset', this.offset)\r\n        .append('limit', this.limit)\r\n        .append('tags', this.tagName)\r\n      let fullUrl = `${this.aipUrlProps}?${params.toString()}`\r\n      this.store.dispatch(getFeedAction({ url: fullUrl }))\r\n    }\r\n  }\r\n  onpageUp(page: string): void {\r\n    if (page === 'older') +this.currentPage++\r\n    else if (page === 'newer') +this.currentPage--\r\n    this.router.navigate([], {\r\n      relativeTo: this.route,\r\n      queryParams: { page: +this.currentPage },\r\n    })\r\n    window.scroll(0, 0)\r\n    this.fetchFeed()\r\n  }\r\n  onPageNavigated(page: number): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.route,\r\n      queryParams: { page: page },\r\n    })\r\n  }\r\n  onNav(id: number): void {\r\n    this.router.navigate(['article', id])\r\n  }\r\n  onRemove(id: number): void {\r\n    console.log(this.items, 'asdf', this.items.splice(id, 1))\r\n    this.items.splice(id, 1)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./feed.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 51,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy",
                "OnChanges"
            ],
            "templateData": "<!DOCTYPE html>\r\n<!-- <dz-tile-type-002></dz-tile-type-002> -->\r\n\r\n<div class=\"grid grid-cols-2\">\r\n  <div\r\n    class=\"w-full col-span-1\"\r\n    *ngFor=\"let article of feed$ | async; let x = index\"\r\n  >\r\n    <dz-card-type-005 [article]=\"article\" [index]=\"x\"></dz-card-type-005>\r\n    <!-- <dz-tile-type-001></dz-tile-type-001> -->\r\n  </div>\r\n  <!-- <div\r\n    class=\"w-full col-span-2 p-3\"\r\n    *ngFor=\"let article of (feed$ | async)?.articles; let x = index\"\r\n  >\r\n    <dz-tile-type-002 [article]=\"article\"></dz-tile-type-002>\r\n  </div> -->\r\n</div>\r\n<ng-template #noMatches [ngIf]=\"(total$ | async) === 0\" class=\"flex\">\r\n  <H1>Could not find any articles.</H1>\r\n</ng-template>\r\n\r\n<div *ngIf=\"!(isLoading$ | async)\">\r\n  <dz-pagination\r\n    [totalCount]=\"total$ | async\"\r\n    [currentPage]=\"currentPage\"\r\n    [limit]=\"limit\"\r\n    (newPageNumber)=\"onPageNavigated($event)\"\r\n  ></dz-pagination>\r\n</div>\r\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-db467638646d5c596450a0523f71e8bcc91ce172d74098085542f0325300e6df1ac2649bb9ed9ef9153fe36cb1a851d87d6c5935e0ddf63d695017b417ea7d4e",
            "file": "src/app/shared/modules/footer/components/footer-Main/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-footer",
            "styleUrls": [
                "./footer.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authhidden",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "currentUser$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CurrentUserInterface | null>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "hidden",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "isAdmin$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean | null>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isAnonymous$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean | null>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "isLoggedIn$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean | null>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "mainTags",
                    "defaultValue": "['Coding', 'News', 'Tech']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "tag",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tag",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClickedOutside",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLoginOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { Router } from '@angular/router'\r\n\r\nimport { select, Store } from '@ngrx/store'\r\nimport { Observable } from 'rxjs'\r\nimport {\r\n  currentUserSelector,\r\n  isAdminSelector,\r\n  isAnonymousSelector,\r\n  isLoggedInSelector,\r\n} from 'src/app/pages/auth/store/selectors/auth.selectors'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\n\r\n@Component({\r\n  selector: 'dz-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.sass'],\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  isLoggedIn$!: Observable<boolean | null>\r\n  isAnonymous$!: Observable<boolean | null>\r\n  currentUser$!: Observable<CurrentUserInterface | null>\r\n  isAdmin$!: Observable<boolean | null>\r\n  hidden: boolean = true\r\n  authhidden: boolean = true\r\n\r\n  mainTags: string[] = ['Coding', 'News', 'Tech']\r\n\r\n  constructor(private store: Store, private router: Router) {}\r\n  ngOnInit(): void {\r\n    this.initializeListeners()\r\n    this.initializeValues()\r\n  }\r\n  initializeValues() {\r\n    this.isLoggedIn$ = this.store.pipe(select(isLoggedInSelector))\r\n    this.isAnonymous$ = this.store.pipe(select(isAnonymousSelector))\r\n    this.isAdmin$ = this.store.pipe(select(isAdminSelector))\r\n    this.currentUser$ = this.store.pipe(select(currentUserSelector))\r\n  }\r\n  initializeListeners(): void {}\r\n  onLoginOpen(): void {\r\n    this.authhidden = false\r\n  }\r\n  onOpen(): void {\r\n    this.hidden = false\r\n  }\r\n  onClickedOutside(e: Event) {\r\n    this.hidden = true\r\n    this.authhidden = true\r\n  }\r\n  onClick(tag: string): void {\r\n    this.router.navigate(['feed', 'tag', tag])\r\n    console.log(this.router.url)\r\n  }\r\n}\r\n/******************************\r\n{\r\n\r\n  link:{\r\n    icon:D:\\blog\\Dz-blog-v-002\\src\\assets\\images\\dzonics1 (1).svg\r\n    hyperLink: xyz.com\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n */\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#twitter:hover\r\n  background-color: black\r\n",
                    "styleUrl": "./footer.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div class=\"px-6 py-24 bg-slate-200\">\r\n  <div class=\"\">\r\n    <img\r\n      src=\"https://michaelhyatt.com/wp-content/themes/michaelhyatt-v4/images/logos/bac-dark.png\"\r\n      alt=\"\"\r\n      class=\"mb-6 rounded w-44\"\r\n    />\r\n    <h3 class=\"mb-5 font-sans text-4xl font-semibold text-purple-700\">\r\n      Scale your business.\r\n      <br />\r\n      Find your freedom.\r\n    </h3>\r\n    <h3 class=\"font-sans text-4xl font-semibold text-purple-700\"></h3>\r\n    <p class=\"w-1/2 md:w-2/6\">\r\n      Lorem ipsum dolor sit, amet consectetur adipisicing elit. Hic a\r\n      consectetur quasi vitae, nulla nam doloremque architecto est ea iusto\r\n      veritatis qui. Sequi ab mollitia atque ullam distinctio sunt pariatur\r\n      nobis perferendis nesciunt aperiam laboriosam, deleniti exercitationem\r\n      corrupti alias.\r\n    </p>\r\n  </div>\r\n  <div class=\"flex\">\r\n    <div class=\"flex justify-between w-full gap-4\">\r\n      <div class=\"flex gap-4\">\r\n        <p>©2022 Dezonic LLC</p>\r\n        <ul class=\"flex gap-3\">\r\n          <li></li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"flex text-sm text-right\">\r\n        <a>PERMISSIONS</a>\r\n        &nbsp;|&nbsp;\r\n        <a>TERMS</a>\r\n        &nbsp;|&nbsp;\r\n        <a>PRIVACY</a>\r\n        &nbsp;|&nbsp;\r\n        <a>SUPPORT</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Generator: Adobe Illustrator 25.1.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\r\n\r\n<!-- <svg\r\n  id=\"Layer_1\"\r\n  x=\"0px\"\r\n  y=\"0px\"\r\n  viewBox=\"0 0 141.00001 140.99999\"\r\n  xml:space=\"preserve\"\r\n  width=\"141\"\r\n  height=\"141\"\r\n  class=\"mx-20\"\r\n>\r\n  <use xlink:href=\"#t\"></use>\r\n</svg> -->\r\n"
        },
        {
            "name": "FormImageImageType001Component",
            "id": "component-FormImageImageType001Component-2fbd775570143708b9fdbc5c9572377fd080ab602f5e08cd7eb06989a1e48a41fdb1aded9d602c4633a0f6679a9793b96b0e3c480040c9fb51c42ead1eb407b2",
            "file": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/form/formImageImageType001.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-form-image-image-type-001",
            "styleUrls": [
                "./formImageImageType001.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./formImageImageType001.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "parentFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\r\nimport { FormGroup } from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'dz-form-image-image-type-001',\r\n  templateUrl: './formImageImageType001.component.html',\r\n  styleUrls: ['./formImageImageType001.component.sass'],\r\n})\r\nexport class FormImageImageType001Component implements OnInit {\r\n  @Input() parentFormGroup!: FormGroup\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    console.log(this.parentFormGroup)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./formImageImageType001.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [formGroup]=\"parentFormGroup\" class=\"\">\r\n  <div class=\"mt-5\">\r\n    <div class=\"flex justify-center w-full h-auto rounded\">\r\n      <dz-content-image-form\r\n        [parentFormGroup]=\"parentFormGroup\"\r\n        [imageNumber]=\"1\"\r\n        class=\"rounded\"\r\n      ></dz-content-image-form>\r\n      <dz-content-image-form\r\n        [parentFormGroup]=\"parentFormGroup\"\r\n        [imageNumber]=\"2\"\r\n        class=\"rounded\"\r\n      ></dz-content-image-form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FormImageTextType001Component",
            "id": "component-FormImageTextType001Component-079f6f7e8b5f0ffd2cb15c60c070ab52665ea9fe129668aae45759d482f80c7583d812d139671e23a4620098e647b309c94804942ec1adb4d6d76a31fcfcf784",
            "file": "src/app/shared/modules/articleContentBlock/components/image-text copy/type001/form/formImageTextType001.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-form-image-text-type-001",
            "styleUrls": [
                "./formImageTextType001.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./formImageTextType001.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "parentFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\r\nimport { FormGroup } from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'dz-form-image-text-type-001',\r\n  templateUrl: './formImageTextType001.component.html',\r\n  styleUrls: ['./formImageTextType001.component.sass'],\r\n})\r\nexport class FormImageTextType001Component implements OnInit {\r\n  @Input() parentFormGroup!: FormGroup\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./formImageTextType001.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- <div [formGroup]=\"parentFormGroup\" class=\"\">\r\n  <div class=\"mt-5\">\r\n    <div class=\"flex justify-center w-full h-auto rounded\">\r\n      <dz-image-form\r\n        [parentFormGroup]=\"parentFormGroup\"\r\n        [imageNumber]=\"1\"\r\n        class=\"rounded\"\r\n      ></dz-image-form>\r\n      <div class=\"mb-6\">\r\n        <label class=\"block my-2 text-sm\">\r\n          Description\r\n        </label>\r\n        <fieldset class=\"bg-white border rounded\">\r\n          <textarea\r\n            type=\"text\"\r\n            class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md h-44 focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n            placeholder=\"Description\"\r\n            formControlName=\"body\"\r\n          ></textarea>\r\n        </fieldset>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div> -->\r\n"
        },
        {
            "name": "FormImageTextType001Component",
            "id": "component-FormImageTextType001Component-079f6f7e8b5f0ffd2cb15c60c070ab52665ea9fe129668aae45759d482f80c7583d812d139671e23a4620098e647b309c94804942ec1adb4d6d76a31fcfcf784-1",
            "file": "src/app/shared/modules/articleContentBlock/components/image-text/type001/form/formImageTextType001.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-form-image-text-type-001",
            "styleUrls": [
                "./formImageTextType001.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./formImageTextType001.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "parentFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\r\nimport { FormGroup } from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'dz-form-image-text-type-001',\r\n  templateUrl: './formImageTextType001.component.html',\r\n  styleUrls: ['./formImageTextType001.component.sass'],\r\n})\r\nexport class FormImageTextType001Component implements OnInit {\r\n  @Input() parentFormGroup!: FormGroup\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./formImageTextType001.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "FormImageTextType001Component-1",
            "templateData": "<div [formGroup]=\"parentFormGroup\" class=\"\">\r\n  <div class=\"mt-5\">\r\n    <div class=\"flex justify-center w-full h-auto rounded\">\r\n      <dz-content-image-form\r\n        [parentFormGroup]=\"parentFormGroup\"\r\n        [imageNumber]=\"1\"\r\n        class=\"rounded\"\r\n      ></dz-content-image-form>\r\n      <div class=\"mb-6\">\r\n        <label class=\"block my-2 text-sm\">\r\n          Description\r\n        </label>\r\n        <fieldset class=\"bg-white border rounded\">\r\n          <textarea\r\n            type=\"text\"\r\n            class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md h-44 focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n            placeholder=\"Description\"\r\n            formControlName=\"body\"\r\n          ></textarea>\r\n        </fieldset>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FormImageType001Component",
            "id": "component-FormImageType001Component-df95c7d58222c2eb3cb23740b4eef5d7c3f2d088d0de49677d9ddd0dd36886e3e8527b9225f0fbf8ba49b416287e239e889c65f7da1b8f05d35b6cef24b92eb9",
            "file": "src/app/shared/modules/articleContentBlock/components/images/type001/form/formImageType001.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-image-form-type-001",
            "styleUrls": [
                "./formImageType001.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./formImageType001.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "parentFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\r\nimport { FormGroup } from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'dz-image-form-type-001',\r\n  templateUrl: './formImageType001.component.html',\r\n  styleUrls: ['./formImageType001.component.sass'],\r\n})\r\nexport class FormImageType001Component implements OnInit {\r\n  @Input() parentFormGroup!: FormGroup\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./formImageType001.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- Main Quill library -->\r\n\r\n<div [formGroup]=\"parentFormGroup\" class=\"\">\r\n  <div class=\"flex\">\r\n    <div class=\"flex items-center justify-center w-full\">\r\n      <dz-content-image-form\r\n        [parentFormGroup]=\"parentFormGroup\"\r\n        [imageNumber]=\"1\"\r\n        class=\"\"\r\n      ></dz-content-image-form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FormTextImageType001Component",
            "id": "component-FormTextImageType001Component-3390d6e9f7c015ec06763197520755406856b7e1d731d64f13df4226fe94d92b24d625f8cf87a6adbdb874e548839ec019817df8165547afec98a93a2e750b23",
            "file": "src/app/shared/modules/articleContentBlock/components/text-image/type001/form/formTextImageType001.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-form-text-image-type-001",
            "styleUrls": [
                "./formTextImageType001.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./formTextImageType001.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "parentFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\r\nimport { FormGroup } from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'dz-form-text-image-type-001',\r\n  templateUrl: './formTextImageType001.component.html',\r\n  styleUrls: ['./formTextImageType001.component.sass'],\r\n})\r\nexport class FormTextImageType001Component implements OnInit {\r\n  @Input() parentFormGroup!: FormGroup\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./formTextImageType001.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [formGroup]=\"parentFormGroup\" class=\"\">\r\n  <div class=\"mt-5\">\r\n    <div class=\"flex justify-center w-full h-auto rounded\">\r\n      <textarea\r\n        type=\"text\"\r\n        class=\"w-full mt-2 placeholder-gray-300 border border-gray-300 rounded-md h-44 focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n        placeholder=\"Input content. Text not required\"\r\n        formControlName=\"body\"\r\n      ></textarea>\r\n\r\n      <dz-content-image-form\r\n        [parentFormGroup]=\"parentFormGroup\"\r\n        [imageNumber]=\"1\"\r\n        class=\"rounded\"\r\n      ></dz-content-image-form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "GlobalFeedComponent",
            "id": "component-GlobalFeedComponent-89b164b0204e6efef9266243d205ebdc34446162e5b1261e9cef11be59b0f1c827a5f6cb4ac2097b006054ca8cc39344b65d9d45aefe257225c53eb632f3e79f",
            "file": "src/app/pages/articleFeed/components/globalFeed/globalFeed.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-global-feed",
            "styleUrls": [
                "./globalFeed.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./globalFeed.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core'\r\nimport { select, Store } from '@ngrx/store'\r\nimport { map } from 'rxjs'\r\nimport { isLoggedInSelector } from 'src/app/pages/auth/store/selectors/auth.selectors'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-global-feed',\r\n  templateUrl: './globalFeed.component.html',\r\n  styleUrls: ['./globalFeed.component.sass'],\r\n})\r\nexport class GlobalFeedComponent implements OnInit, OnDestroy {\r\n  apiUrl: string //=\r\n\r\n  constructor(private store: Store) {\r\n    this.apiUrl = environment.globalFeedUrl\r\n  }\r\n  ngOnDestroy(): void {}\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./globalFeed.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n\r\n<div class=\"flex justify-center min-h-screen\">\r\n  <!-- <dz-banner></dz-banner> -->\r\n  <div class=\"content-center w-11/12 max-w-5xl bg-slate-100\">\r\n    <dz-feed [apiUrl]=\"apiUrl\"></dz-feed>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-bda17aa3451a9f731685153f2587877b8267c32007f05e7abad3581336e6bc02346a1b660e8c69c4d90b4526b6e047b3ac1f4246252c9dc83985c9148aab5e97",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  template: `<header>\r\n    <div class=\"wrapper\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"user\">\r\n          <span class=\"welcome\">\r\n            Welcome, <b>{{ user.name }}</b\r\n            >!\r\n          </span>\r\n          <storybook-button\r\n            *ngIf=\"user\"\r\n            size=\"small\"\r\n            (onClick)=\"onLogout.emit($event)\"\r\n            label=\"Log out\"\r\n          ></storybook-button>\r\n        </div>\r\n        <div *ngIf=\"!user\">\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onLogin.emit($event)\"\r\n            label=\"Log in\"\r\n          ></storybook-button>\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            primary\r\n            size=\"small\"\r\n            primary=\"true\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onCreateAccount.emit($event)\"\r\n            label=\"Sign up\"\r\n          ></storybook-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport default class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\nsvg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nh1 {\r\n  font-weight: 900;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 10px;\r\n}\r\n\r\n.welcome {\r\n  color: #333;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-d77fa14d07115a1978b2d2d3da6728e311974e5939fb847a03deb3e97a5bed30d08bcddbcb64a6c96fc971f52aa8c0a564c48dbdf5d282147183d72e55f47078",
            "file": "src/app/pages/home/components/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-home",
            "styleUrls": [
                "./home.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'dz-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.sass'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Document</title>\r\n  </head>\r\n  <body>\r\n    home page\r\n  </body>\r\n</html>\r\n"
        },
        {
            "name": "ImageImageType001Component",
            "id": "component-ImageImageType001Component-4cc6e7306221ecd96367b7d08f563d2d19dc896bba2f1e11d9aeacda356d9a75cd4ea49d3542206cf307f826d3c5a847dc8c965956b0290a2d1a5644a41533f6",
            "file": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/display/imageImageType001.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-image-image-type-001",
            "styleUrls": [
                "./imageImageType001.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./imageImageType001.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "ArticleBlockInterface",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-image-image-type-001',\r\n  templateUrl: './imageImageType001.component.html',\r\n  styleUrls: ['./imageImageType001.component.sass'],\r\n})\r\nexport class ImageImageType001Component implements OnInit, OnDestroy {\r\n  @Input('content') content!: ArticleBlockInterface\r\n  baseMedia: string\r\n  constructor() {\r\n    this.baseMedia = environment.baseMedia\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n  }\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./imageImageType001.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div class=\"w-full text-center\">\r\n  <div class=\"flex w-full max-w-full gap-4 rounded shadow-sm\">\r\n    <img\r\n      [src]=\"baseMedia + content.imageOne\"\r\n      alt=\"\"\r\n      class=\"w-1/2 mb-2 rounded shadow-sm\"\r\n    />\r\n    <img\r\n      [src]=\"baseMedia + content.imageTwo\"\r\n      alt=\"\"\r\n      class=\"w-1/2 mb-2 rounded shadow-sm\"\r\n    />\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ImageTextType001Component",
            "id": "component-ImageTextType001Component-69856c7503802e4bed4700ba4b9f8ca594c079640b404c3f1c8ea777504797ff191434c6e4fe22e77568bdf2ac02ee8a33de8a15c69c2aa03b8438e5b47207a3",
            "file": "src/app/shared/modules/articleContentBlock/components/image-text copy/type001/display/imageTextType001.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-image-text-type-001",
            "styleUrls": [
                "./imageTextType001.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./imageTextType001.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "ArticleBlockInterface",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-image-text-type-001',\r\n  templateUrl: './imageTextType001.component.html',\r\n  styleUrls: ['./imageTextType001.component.sass'],\r\n})\r\nexport class ImageTextType001Component implements OnInit, OnDestroy {\r\n  @Input('content') content!: ArticleBlockInterface\r\n  baseMedia: string\r\n  constructor() {\r\n    this.baseMedia = environment.baseMedia\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./imageTextType001.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div class=\"grid grid-cols-1 gap-4 text-center\">\r\n  <div class=\"rounded shadow-sm\">\r\n    <img\r\n      [src]=\"baseMedia + content.imageOne\"\r\n      alt=\"\"\r\n      class=\"w-full mb-2 rounded shadow-sm\"\r\n    />\r\n    <p>{{ content.body }}</p>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ImageTextType001Component",
            "id": "component-ImageTextType001Component-69856c7503802e4bed4700ba4b9f8ca594c079640b404c3f1c8ea777504797ff191434c6e4fe22e77568bdf2ac02ee8a33de8a15c69c2aa03b8438e5b47207a3-1",
            "file": "src/app/shared/modules/articleContentBlock/components/image-text/type001/display/imageTextType001.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-image-text-type-001",
            "styleUrls": [
                "./imageTextType001.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./imageTextType001.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "ArticleBlockInterface",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-image-text-type-001',\r\n  templateUrl: './imageTextType001.component.html',\r\n  styleUrls: ['./imageTextType001.component.sass'],\r\n})\r\nexport class ImageTextType001Component implements OnInit, OnDestroy {\r\n  @Input('content') content!: ArticleBlockInterface\r\n  baseMedia: string\r\n  constructor() {\r\n    this.baseMedia = environment.baseMedia\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./imageTextType001.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ImageTextType001Component-1",
            "templateData": "<!DOCTYPE html>\r\n<div class=\"text-center\">\r\n  <div class=\"flex gap-8 rounded shadow-sm\">\r\n    <img\r\n      [src]=\"baseMedia + content.imageOne\"\r\n      alt=\"\"\r\n      class=\"w-1/2 mb-2 rounded shadow-sm\"\r\n    />\r\n    <p>{{ content.body }}</p>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ImageType001Component",
            "id": "component-ImageType001Component-3c62ad1a4a21a706fca505ce8aba8277015c5536b608b5c48f3745ab21e13a013b3d562cf8c5583679d3f89899a631238130cfaaed1abbe213ab3c00dbf921d0",
            "file": "src/app/shared/modules/articleContentBlock/components/images/type001/display/imageType001.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-image-type-001",
            "styleUrls": [
                "./imageType001.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./imageType001.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "ArticleBlockInterface",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-image-type-001',\r\n  templateUrl: './imageType001.component.html',\r\n  styleUrls: ['./imageType001.component.sass'],\r\n})\r\nexport class ImageType001Component implements OnInit, OnDestroy {\r\n  @Input('content') content!: ArticleBlockInterface\r\n  baseMedia: string\r\n  constructor() {\r\n    this.baseMedia = environment.baseMedia\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".max-width\r\n  max-width: 50%\r\n",
                    "styleUrl": "./imageType001.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div class=\"w-full py-4 my-4\">\r\n  <div class=\"flex gap-4\">\r\n    <img\r\n      [src]=\"baseMedia + content.imageOne\"\r\n      alt=\"\"\r\n      class=\"object-contain w-1/2 rounded\"\r\n    />\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-7a329a9dc4e2578fc52afd27e8ab435475ee07c8ada7e43f75e100763ded96d1b58456ad9a721b17b962ac9baaa51842c7b80e17ad044fc3609491caa4685355",
            "file": "src/app/pages/auth/components/login-component/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-login",
            "styleUrls": [
                "./login.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backendErrors$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<BackendErrorsInterface | null>",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "isSubmitting$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "hi",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { trigger, state, style, transition, animate } from '@angular/animations'\r\nimport { Component, OnDestroy, OnInit } from '@angular/core'\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\r\nimport { Store, select } from '@ngrx/store'\r\nimport { Observable } from 'rxjs'\r\nimport { BackendErrorsInterface } from 'src/app/shared/interfaces/backendError.interface'\r\nimport { LoginRequestInterface } from '../../interfaces/auth.login.request.interface'\r\nimport { loginAction } from '../../store/actions/auth.login.actions'\r\nimport {\r\n  isSubmittingSelector,\r\n  validationErrorsSelector,\r\n} from '../../store/selectors/auth.selectors'\r\n\r\n// import { loginAction } from 'src/app/pages/auth/store/actions/auth.login.actions'\r\n// import {\r\n//   isSubmittingSelector,\r\n//   validationErrorsSelector,\r\n// } from '../../store/selectors/auth.selectors'\r\n// import { LoginRequestInterface } from '../../interface/loginRequest.interface'\r\n\r\n@Component({\r\n  selector: 'dz-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.sass'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  form: FormGroup\r\n  isSubmitting$!: Observable<boolean>\r\n  backendErrors$!: Observable<BackendErrorsInterface | null>\r\n  constructor(private fb: FormBuilder, private store: Store) {\r\n    this.form = this.fb.group({\r\n      userObject: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    })\r\n    //this.isSubmitting$ = false\r\n  }\r\n  ngOnDestroy(): void {}\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.form)\r\n    this.initializeForm()\r\n    this.initializeValues()\r\n  }\r\n\r\n  initializeValues(): void {\r\n    this.isSubmitting$ = this.store.pipe(\r\n      select<any, boolean>(isSubmittingSelector),\r\n    )\r\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector))\r\n  }\r\n\r\n  initializeForm(): void {\r\n    this.form = this.fb.group({\r\n      userObject: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    })\r\n  }\r\n  hi(): void {\r\n    console.log('h')\r\n  }\r\n  onSubmit(): void {\r\n    console.log('h')\r\n    const payload: LoginRequestInterface = {\r\n      user: this.form.value,\r\n    }\r\n\r\n    this.store.dispatch(loginAction({ payload }))\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "input\r\n  @apply w-full bg-gray-200 rounded shadow-[0_1px_0_#b3b3b3] border-none focus:outline-none focus:ring-1 focus:ring-blue-600\r\n",
                    "styleUrl": "./login.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div\r\n  class=\"flex items-center justify-center min-h-[100vh] relative text-center overflow-hidden bg-[url('/assets/images/bg-img.jpg')] bg-cover\"\r\n>\r\n  <div\r\n    class=\"px-8 py-6 mx-4 mt-4 text-left bg-gray-100 rounded shadow-lg sm:w-[400px]\"\r\n  >\r\n    <div class=\"flex justify-center\">\r\n      <button\r\n        class=\"z-10 hidden rounded-full w-11 h-11 sm:block\"\r\n        [routerLink]=\"['/']\"\r\n      >\r\n        <mat-icon class=\"text-2xl font-bold text-center\">\r\n          arrow_backward\r\n        </mat-icon>\r\n      </button>\r\n      <img src=\"assets/images/dz3.png\" alt=\"\" class=\"\" />\r\n    </div>\r\n    <h3 class=\"text-2xl font-bold text-center\">Login to your account</h3>\r\n    <!-- <div *ngIf=\"\">\r\n      <p class=\"text-base font-bold text-center text-red-600\">\r\n        {{ backendErrors$ | async }}\r\n      </p>\r\n    </div> -->\r\n    <dz-backendErrors\r\n      *ngIf=\"backendErrors$ | async\"\r\n      [backendErrors]=\"backendErrors$ | async\"\r\n    ></dz-backendErrors>\r\n\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"mt-4\">\r\n        <div>\r\n          <label class=\"block\" for=\"email\">Email or Username</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            formControlName=\"userObject\"\r\n            class=\"\"\r\n          />\r\n          <span\r\n            class=\"text-xs tracking-wide text-red-600\"\r\n            *ngIf=\"\r\n              form.controls['userObject'].touched &&\r\n              form.controls['userObject'].invalid\r\n            \"\r\n          >\r\n            Required\r\n          </span>\r\n          <span\r\n            class=\"text-xs tracking-wide text-red-600\"\r\n            *ngIf=\"backendErrors$ | async\"\r\n          >\r\n            invalid login\r\n          </span>\r\n        </div>\r\n        <div class=\"mt-4\">\r\n          <label class=\"block\">Password</label>\r\n          <input type=\"password\" formControlName=\"password\" class=\"\" />\r\n          <span\r\n            class=\"text-xs tracking-wide text-red-600\"\r\n            *ngIf=\"\r\n              form.controls['password'].touched &&\r\n              form.controls['password'].invalid\r\n            \"\r\n          >\r\n            Required\r\n          </span>\r\n        </div>\r\n        <div class=\"flex items-baseline justify-between\">\r\n          <dz-spinner-001\r\n            *ngIf=\"isSubmitting$ | async\"\r\n            class=\"h-10 pt-5 mb-1 ml-5\"\r\n          ></dz-spinner-001>\r\n          <button\r\n            class=\"px-6 py-2 mt-4 text-white bg-blue-600 rounded-lg hover:bg-blue-900\"\r\n            *ngIf=\"!(isSubmitting$ | async)\"\r\n            [disabled]=\"isSubmitting$ | async\"\r\n          >\r\n            Login\r\n          </button>\r\n\r\n          <a\r\n            [routerLink]=\"['/register']\"\r\n            class=\"text-sm text-blue-600 hover:underline\"\r\n          >\r\n            Forgot password?\r\n          </a>\r\n        </div>\r\n        <a\r\n          [routerLink]=\"['/register']\"\r\n          class=\"text-sm text-blue-600 hover:underline\"\r\n        >\r\n          Need an account?\r\n        </a>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-1fc7c24c98b4f0b0f413d91f5a6126f11ad55647457f5a7f372b7f83fe8ecd6dbe67b5ca4b826ed20b9bfbc04d5606b15f82a203b1311f98b18bd28ec9f4fc7c",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"doLogout()\"\r\n      (onLogin)=\"doLogin()\"\r\n      (onCreateAccount)=\"doCreateAccount()\"\r\n    ></storybook-header>\r\n    <section>\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport default class PageComponent {\r\n  user: User | null = null;\r\n\r\n  doLogout() {\r\n    this.user = null;\r\n  }\r\n\r\n  doLogin() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n\r\n  doCreateAccount() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\nsection h2 {\r\n  font-weight: 900;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nsection p {\r\n  margin: 1em 0;\r\n}\r\n\r\nsection a {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\nsection ul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\nsection li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\nsection .tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\nsection .tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\nsection .tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\nsection .tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PaginationComponent",
            "id": "component-PaginationComponent-13910d1fdd616aed66b2b84e4fc687d6405fe6a0c0b48740f00f3404abb6e19e2c908a95f145a88fcc785e9639a62e51c5cfa8f77b17bc0471f55e949ed6ad39",
            "file": "src/app/shared/modules/pagination/filler/components/pagination/pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-pagination",
            "styleUrls": [
                "./pagination.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./pagination.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "limit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "totalCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "newPageNumber",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "pageArray",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<number>",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "pagesCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "start",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onNavigate",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\r\nimport { UtilsService } from 'src/app/shared/services/utils.service'\r\n\r\n@Component({\r\n  selector: 'dz-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.sass'],\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n  @Input('totalCount') totalCountProps!: number | null\r\n  @Input('currentPage') currentPageProps!: number\r\n  @Input('limit') limitProps!: number\r\n  @Output() newPageNumber = new EventEmitter<number>()\r\n  pagesCount: number\r\n  pageArray: Array<number>\r\n  start: number\r\n  constructor(private utils: UtilsService) {\r\n    this.pageArray = []\r\n    if (this.totalCountProps !== null) {\r\n      this.pagesCount = Math.ceil(this.totalCountProps / this.limitProps)\r\n    } else {\r\n      this.pagesCount = 0\r\n    }\r\n    this.start = 0\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.totalCountProps !== null)\r\n      this.pageArray = this.utils.range(\r\n        1,\r\n        Math.ceil(this.totalCountProps / this.limitProps),\r\n      )\r\n    if (this.currentPageProps < 3 || this.currentPageProps == 3) {\r\n      this.start = 0\r\n    }\r\n    if (\r\n      this.currentPageProps > 3 &&\r\n      this.currentPageProps! < this.pageArray.length - 3\r\n    ) {\r\n      this.start = this.currentPageProps - 4\r\n    }\r\n    if (this.currentPageProps >= this.pageArray.length - 3) {\r\n      this.start = this.pageArray.length - 7\r\n    }\r\n  }\r\n  onNavigate(value: number): void {\r\n    this.newPageNumber.emit(value)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".currentPage\r\n  @apply z-10 bg-indigo-50 border-indigo-500 text-indigo-600 relative inline-flex items-center px-4 py-2 border text-sm font-medium\r\n.pageList\r\n  @apply bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium\r\n",
                    "styleUrl": "./pagination.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "utils",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "utils",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n  <div class=\"w-full h-9 rounded-md bg-red-500 flex hidden\">\r\n    <button (click)=\"onNavigate(1)\">home</button>\r\n    <div\r\n      class=\"border-x-[1px] border-black px-2\"\r\n      *ngFor=\"let a of pageArray | slice: start:start + 7\"\r\n      [ngStyle]=\"{\r\n        'background-color': a == currentPageProps ? 'green' : ''\r\n      }\"\r\n      (click)=\"onNavigate(a)\"\r\n    >\r\n      {{ a }}\r\n    </div>\r\n    <button (click)=\"onNavigate(pageArray.length)\">end</button>\r\n  </div>\r\n</div>\r\n\r\n<div\r\n  class=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\"\r\n>\r\n  <div class=\"flex-1 flex justify-between sm:hidden\">\r\n    <a\r\n      href=\"#\"\r\n      class=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n      (click)=\"onNavigate(currentPageProps - 1)\"\r\n    >\r\n      Previous\r\n    </a>\r\n    <a\r\n      href=\"#\"\r\n      class=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n      (click)=\"onNavigate(currentPageProps + 1)\"\r\n    >\r\n      Next\r\n    </a>\r\n  </div>\r\n  <div class=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n    <div>\r\n      <p class=\"text-sm text-gray-700\">\r\n        Showing Page\r\n        <span class=\"font-medium\">{{ currentPageProps }}</span>\r\n        of\r\n        <span class=\"font-medium\">{{ pageArray.length }}</span>\r\n        pages\r\n      </p>\r\n    </div>\r\n    <div>\r\n      <nav\r\n        class=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\"\r\n        aria-label=\"Pagination\"\r\n      >\r\n        <a\r\n          (click)=\"onNavigate(currentPageProps - 1)\"\r\n          class=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n        >\r\n          <span class=\"sr-only\">Previous</span>\r\n          <!-- Heroicon name: solid/chevron-left -->\r\n          <svg\r\n            class=\"h-5 w-5\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <path\r\n              fill-rule=\"evenodd\"\r\n              d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\r\n              clip-rule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        </a>\r\n        <!-- Current: \"z-10 bg-indigo-50 border-indigo-500 text-indigo-600\", Default: \"bg-white border-gray-300 text-gray-500 hover:bg-gray-50\" -->\r\n        <div\r\n          class=\"bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium\"\r\n          *ngFor=\"let a of pageArray | slice: start:start + 7\"\r\n          [ngClass]=\"{ currentPage: a == currentPageProps }\"\r\n          aria-current=\"page\"\r\n        >\r\n          <a (click)=\"onNavigate(a)\">\r\n            {{ a }}\r\n          </a>\r\n        </div>\r\n\r\n        <a\r\n          (click)=\"onNavigate(+currentPageProps + 1)\"\r\n          class=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n        >\r\n          <span class=\"sr-only\">Next</span>\r\n          <!-- Heroicon name: solid/chevron-right -->\r\n          <svg\r\n            class=\"h-5 w-5\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <path\r\n              fill-rule=\"evenodd\"\r\n              d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n              clip-rule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        </a>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ProfileImageFormComponent",
            "id": "component-ProfileImageFormComponent-d62b8ea46ebeb333a13a4ca5789255d0306c0f586df2509174e8edf8107b0b06472ae187e75e884794124f8fd3c2edd2549728f4b9e4a148ff707c9b066ddcb7",
            "file": "src/app/shared/modules/imageUploader/components/profileImage/profile-image-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-profile-images-form",
            "styleUrls": [
                "./profile-image-form.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./profile-image-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "initialValues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "ArticleInputInterface",
                    "decorators": []
                },
                {
                    "name": "parentFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticleBlockInterface[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "imgResultAfterCompress",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "imgResultAfterResize",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "imgResultBeforeCompress",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "imgResultMultiple",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UploadResponse[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "imgResultUpload",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataUrl",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "compressFile",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDeleteImage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "uploadAnResize",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "uploadFile",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "uploadMultipleFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, Input, OnInit } from '@angular/core'\r\nimport { FormGroup, FormBuilder } from '@angular/forms'\r\nimport {\r\n  DataUrl,\r\n  UploadResponse,\r\n  NgxImageCompressService,\r\n} from 'ngx-image-compress'\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { ArticleInputInterface } from 'src/app/shared/interfaces/articleInput.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-profile-images-form',\r\n  templateUrl: './profile-image-form.component.html',\r\n  styleUrls: ['./profile-image-form.component.sass'],\r\n})\r\nexport class ProfileImageFormComponent implements OnInit, AfterViewInit {\r\n  @Input() parentFormGroup!: FormGroup\r\n  @Input('initialValues') initialValuesProps!: ArticleInputInterface\r\n\r\n  content!: ArticleBlockInterface[]\r\n  image: any\r\n  url: any\r\n\r\n  constructor(private imageCompress: NgxImageCompressService) {}\r\n  ngAfterViewInit(): void {}\r\n\r\n  ngOnInit() {\r\n    this.initValues()\r\n  }\r\n  initValues(): void {\r\n    this.url = environment.baseMedia + this.parentFormGroup.value.newImage\r\n  }\r\n  onDeleteImage(): void {\r\n    this.url = ''\r\n    this.parentFormGroup.value.image = this.url\r\n  }\r\n\r\n  imgResultBeforeCompress: DataUrl = ''\r\n  imgResultAfterCompress: DataUrl = ''\r\n  imgResultAfterResize: DataUrl = ''\r\n  imgResultUpload: DataUrl = ''\r\n  imgResultMultiple: UploadResponse[] = []\r\n\r\n  compressFile() {\r\n    console.log('here')\r\n    return this.imageCompress\r\n      .uploadFile()\r\n      .then(({ image, orientation }: UploadResponse) => {\r\n        console.warn('Size in bytes was:', this.imageCompress.byteCount(image))\r\n        this.imgResultBeforeCompress = image\r\n        this.imageCompress\r\n          .compressFile(image, orientation, 50, 50)\r\n          .then((result: DataUrl) => {\r\n            console.warn(\r\n              'Size in bytes is now:',\r\n              this.imageCompress.byteCount(result),\r\n            )\r\n            this.url = result\r\n\r\n            this.parentFormGroup.patchValue({ newImage: this.url })\r\n          })\r\n      })\r\n  }\r\n\r\n  uploadFile() {\r\n    return this.imageCompress\r\n      .uploadFile()\r\n      .then(({ image, orientation }: UploadResponse) => {\r\n        this.imgResultUpload = image\r\n      })\r\n  }\r\n\r\n  uploadMultipleFiles() {\r\n    return this.imageCompress\r\n      .uploadMultipleFiles()\r\n      .then((multipleOrientedFiles: UploadResponse[]) => {\r\n        this.imgResultMultiple = multipleOrientedFiles\r\n        console.warn(`${multipleOrientedFiles.length} files selected`)\r\n      })\r\n  }\r\n\r\n  uploadAnResize() {\r\n    return this.imageCompress\r\n      .uploadFile()\r\n      .then(({ image, orientation }: UploadResponse) => {\r\n        console.warn('Size in bytes was:', this.imageCompress.byteCount(image))\r\n        console.warn('Compressing and resizing to width 200px height 100px...')\r\n\r\n        this.imageCompress\r\n          .compressFile(image, orientation, 50, 50, 200, 100)\r\n          .then((result: DataUrl) => {\r\n            this.imgResultAfterResize = result\r\n            console.warn(\r\n              'Size in bytes is now:',\r\n              this.imageCompress.byteCount(result),\r\n            )\r\n          })\r\n      })\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./profile-image-form.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "imageCompress",
                        "type": "NgxImageCompressService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "imageCompress",
                        "type": "NgxImageCompressService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div [formGroup]=\"parentFormGroup\">\r\n  <div class=\"max-w-md mx-auto rounded-lg md:max-w-xl\">\r\n    <div class=\"md:flex\">\r\n      <div class=\"w-full p-3\">\r\n        <button (click)=\"compressFile()\" class=\"w-full h-full\">\r\n          <div *ngIf=\"url\" class=\"relative\">\r\n            <img [src]=\"url\" class=\"flex justify-center\" />\r\n            <button\r\n              *ngIf=\"url\"\r\n              (click)=\"onDeleteImage(); $event.stopPropagation()\"\r\n            >\r\n              <mat-icon\r\n                class=\"absolute z-20 text-xl hover:text-red-600 top-2 right-4 x\"\r\n              >\r\n                delete_forever\r\n              </mat-icon>\r\n            </button>\r\n          </div>\r\n\r\n          <div\r\n            *ngIf=\"!url\"\r\n            class=\"relative flex items-center justify-center h-48 bg-gray-100 border-2 border-blue-700 border-dashed border-dotted rounded-lg\"\r\n          >\r\n            <div class=\"\">\r\n              <div class=\"flex flex-col items-center\">\r\n                <i class=\"text-blue-700 fa fa-folder-open fa-4x\"></i>\r\n                <span class=\"block font-normal text-gray-400\"></span>\r\n              </div>\r\n            </div>\r\n\r\n            Upload and compress Image\r\n          </div>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-300e42a895d77a0aab6dc6444cdf1b93756df5ea805d2f0fa3379889a5be08daf38ce9d4d8da32da644eaeb660a29611a8a6e5c4b6a7f282e52690ce56769e15",
            "file": "src/app/pages/auth/components/registation-component/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-register",
            "styleUrls": [
                "./register.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backendErrors$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<BackendErrorsInterface | null>",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "isSubmitting$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms'\r\nimport { select, Store } from '@ngrx/store'\r\nimport { Observable } from 'rxjs'\r\nimport { BackendErrorsInterface } from 'src/app/shared/interfaces/backendError.interface'\r\nimport { AuthRegistrationRequestInterface } from '../../interfaces/auth.registration.request.interface'\r\nimport Validation from '../../services/auth.confirm-password.validator.service'\r\nimport { registerAction } from '../../store/actions/auth.register.actions'\r\nimport {\r\n  isSubmittingSelector,\r\n  validationErrorsSelector,\r\n} from '../../store/selectors/auth.selectors'\r\n\r\n@Component({\r\n  selector: 'dz-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.sass'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form: FormGroup\r\n  isSubmitting$!: Observable<boolean>\r\n  backendErrors$!: Observable<BackendErrorsInterface | null>\r\n  constructor(private fb: FormBuilder, private store: Store) {\r\n    this.form = this.fb.group(\r\n      {\r\n        userObject: [''],\r\n        password: ['', Validators.required],\r\n      },\r\n      {},\r\n    )\r\n  }\r\n  get f(): { [key: string]: AbstractControl } {\r\n    return this.form.controls\r\n  }\r\n  ngOnInit(): void {\r\n    this.initForm()\r\n    this.initValues()\r\n  }\r\n  initValues() {\r\n    this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector))\r\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector))\r\n  }\r\n  initForm(): void {\r\n    this.form = this.fb.group(\r\n      {\r\n        userName: ['', Validators.required],\r\n        email: ['', [Validators.required, Validators.email]],\r\n        password: [\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.minLength(8),\r\n            Validators.maxLength(128),\r\n          ],\r\n        ],\r\n        confirmPassword: ['', Validators.required],\r\n        firstName: [''],\r\n        lastName: [''],\r\n      },\r\n      {\r\n        validators: [Validation.match('password', 'confirmPassword')],\r\n      },\r\n    )\r\n  }\r\n  onSubmit(): void {\r\n    const payload: AuthRegistrationRequestInterface = {\r\n      user: this.form.value,\r\n    }\r\n    console.log(this.form)\r\n    this.store.dispatch(registerAction({ payload })) // request <-auth.types.actions; -> auth.register.actions;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "label\r\n  @apply mt-2\r\ninput:hover + label\r\n  color: green\r\n  @apply text-5xl\r\n#email:focus + label\r\n  background-color: green\r\n.focus\r\n  @apply text-blue-600\r\n#email\r\n  background-color: green\r\n\r\n",
                    "styleUrl": "./register.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "f": {
                    "name": "f",
                    "getSignature": {
                        "name": "f",
                        "type": "literal type",
                        "returnType": "literal type",
                        "line": 37
                    }
                }
            },
            "templateData": "<!DOCTYPE html>\r\n<!-- <div class=\"auth-page\">\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n        <h1 class=\"text-xs-center\">Sign Up</h1>\r\n        <p class=\"text-xs-center\">\r\n          <a [routerLink]=\"['/login']\">Have an account?</a>\r\n        </p> -->\r\n<!-- <dz-backend-errors\r\n          *ngIf=\"backendErrors$ | async\"\r\n          [backendErrors]=\"backendErrors$ | async\"\r\n        ></dz-backend-errors> -->\r\n<!--\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n          <fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Username\"\r\n                formControlName=\"userName\"\r\n              />\r\n            </fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Email\"\r\n                formControlName=\"email\"\r\n              />\r\n            </fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"First Name\"\r\n                formControlName=\"firstName\"\r\n              />\r\n            </fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Last Name optional\"\r\n                formControlName=\"lastName\"\r\n              />\r\n            </fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Password\"\r\n                formControlName=\"password\"\r\n              />\r\n            </fieldset>\r\n            <button\r\n              class=\"btn btn-lg btn-primary pull-xs-right\"\r\n              type=\"submit\"\r\n              [disabled]=\"isSubmitting$\"\r\n            >\r\n              Sign up\r\n            </button>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n<div\r\n  class=\"flex items-center justify-center min-h-[100vh] bg-gray-50 relative bg-[url('/assets/images/bg-img.jpg')] bg-cover\"\r\n>\r\n  <div\r\n    class=\"px-8 py-6 mx-4 mt-4 text-left bg-gray-100 shadow-lg sm:w-[500px] rounded\"\r\n  >\r\n    <div class=\"relative flex\">\r\n      <button\r\n        class=\"z-10 hidden rounded-full hover:shadow-lg hover:bg-gray-200 w-11 h-11 sm:block\"\r\n        [routerLink]=\"['/']\"\r\n      >\r\n        <mat-icon class=\"text-2xl font-bold text-center\">\r\n          arrow_backward\r\n        </mat-icon>\r\n      </button>\r\n      <img src=\"/assets/images/dz3.png\" alt=\"\" class=\"\" />\r\n    </div>\r\n    <div>\r\n      <p class=\"text-xl font-bold text-center align-middle\">\r\n        Join the fastest growing Blog!\r\n      </p>\r\n      <p class=\"text-2xl font-bold text-center align-middle\">Register Now!</p>\r\n    </div>\r\n    <form action=\"\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"mt-4\">\r\n        <div>\r\n          <div class=\"flex justify-between\">\r\n            <label class=\"block\" for=\"Name\">Username*</label>\r\n            <label\r\n              class=\"block pt-2 text-xs text-red-600\"\r\n              for=\"Name\"\r\n              *ngIf=\"!form.controls['userName'].valid && f['userName'].touched\"\r\n            >\r\n              Username Required*\r\n            </label>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username  required\"\r\n            formControlName=\"userName\"\r\n            ngModel\r\n            pattern=\"[a-zA-Z0-9]\"\r\n            [style.border-color]=\"\r\n              !form.controls['userName'].valid && f['userName'].touched\r\n                ? 'red'\r\n                : 'black'\r\n            \"\r\n            class=\"w-full bg-gray-200 rounded shadow-[0_1px_0_#b3b3b3] border-none focus:outline-none focus:ring-1 focus:ring-blue-600\"\r\n          />\r\n        </div>\r\n        <div class=\"gap-3 sm:flex\">\r\n          <div>\r\n            <label\r\n              class=\"block\"\r\n              for=\"Name\"\r\n              [style.color]=\"\r\n                !form.controls['firstName'].valid && f['firstName'].touched\r\n                  ? 'red'\r\n                  : 'black'\r\n              \"\r\n            >\r\n              First Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"First Name required\"\r\n              formControlName=\"firstName\"\r\n              [style.border-color]=\"\r\n                !form.controls['firstName'].valid && f['firstName'].touched\r\n                  ? 'red'\r\n                  : 'black'\r\n              \"\r\n              class=\"w-full bg-gray-200 rounded shadow-[0_1px_0_#b3b3b3] border-none focus:outline-none focus:ring-1 focus:ring-blue-600\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label class=\"block\" for=\"Name\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Last Name\"\r\n              formControlName=\"lastName\"\r\n              class=\"w-full bg-gray-200 rounded shadow-[0_1px_0_#b3b3b3] border-none focus:outline-none focus:ring-1 focus:ring-blue-600\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-4 focus:text-blue-300\">\r\n          <div class=\"flex justify-between\">\r\n            <label\r\n              class=\"block\"\r\n              for=\"email\"\r\n              [style.color]=\"\r\n                !f['email'].valid && f['email'].touched ? 'red' : 'black'\r\n              \"\r\n              appHighlight\r\n            >\r\n              Email*\r\n            </label>\r\n            <label\r\n              class=\"block pt-2 text-xs text-red-600\"\r\n              for=\"Name\"\r\n              *ngIf=\"!form.controls['email'].valid && f['email'].touched\"\r\n            >\r\n              Vaild Email Required*\r\n            </label>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            #email\r\n            placeholder=\"Email required\"\r\n            formControlName=\"email\"\r\n            [style.border-color]=\"\r\n              !form.controls['email'].valid && f['email'].touched\r\n                ? 'red'\r\n                : 'black'\r\n            \"\r\n            appHighlight\r\n            class=\"w-full bg-gray-200 rounded shadow-[0_1px_0_#b3b3b3] border-none focus:ring-0\"\r\n          />\r\n        </div>\r\n        <div class=\"mt-4\">\r\n          <label class=\"block\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password length must be 6-40\"\r\n            formControlName=\"password\"\r\n            [style.border-color]=\"\r\n              !form.controls['password'].valid && f['password'].touched\r\n                ? 'red'\r\n                : 'black'\r\n            \"\r\n            class=\"w-full bg-gray-200 rounded shadow-[0_1px_0_#b3b3b3] border-none focus:outline-none focus:ring-1 focus:ring-blue-600\"\r\n          />\r\n        </div>\r\n        <div class=\"mt-4\">\r\n          <label class=\"block\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password length must be 6-40\"\r\n            formControlName=\"confirmPassword\"\r\n            class=\"w-full bg-gray-200 rounded shadow-[0_1px_0_#b3b3b3] border-none focus:outline-none focus:ring-1 focus:ring-blue-600\"\r\n          />\r\n        </div>\r\n        <span\r\n          class=\"text-xs text-red-400\"\r\n          *ngIf=\"f['confirmPassword'].errors && f['confirmPassword'].touched\"\r\n        >\r\n          Password must be same!\r\n        </span>\r\n        <div class=\"flex\">\r\n          <button\r\n            type=\"submit\"\r\n            [disabled]=\"form.invalid\"\r\n            class=\"w-full px-6 py-2 mt-4 text-white bg-blue-600 rounded-lg hover:bg-blue-900\"\r\n          >\r\n            Create Account\r\n          </button>\r\n        </div>\r\n        <div class=\"mt-6 text-grey-dark\">\r\n          Already have an account?\r\n          <a class=\"text-blue-600 hover:underline\" [routerLink]=\"['/login']\">\r\n            Log in\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SideNav001Component",
            "id": "component-SideNav001Component-8841836164a1a07e2627739a3e616433509d78290c2f8f60a293e5c4a940bf48727e9d039fec0356a68d0004a78420440a41319fc11d602d1049df3e48968461",
            "file": "src/app/shared/modules/tests-nav/components/sideNav001/sideNav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-sidenav-001",
            "styleUrls": [
                "./sideNav.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./sideNav.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'dz-sidenav-001',\r\n  templateUrl: './sideNav.component.html',\r\n  styleUrls: ['./sideNav.component.sass'],\r\n})\r\nexport class SideNav001Component implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sideNav.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- This is an example component -->\r\n<div class=\"max-w-2xl mx-auto\">\r\n  <aside class=\"w-64\" aria-label=\"Sidebar\">\r\n    <div class=\"px-3 py-4 overflow-y-auto rounded bg-gray-50 dark:bg-gray-800\">\r\n      <ul class=\"space-y-2\">\r\n        <li>\r\n          <a\r\n            href=\"#\"\r\n            class=\"flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n          >\r\n            <svg\r\n              class=\"w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path d=\"M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z\"></path>\r\n              <path d=\"M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z\"></path>\r\n            </svg>\r\n            <span class=\"ml-3\">Dashboard</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <button\r\n            type=\"button\"\r\n            class=\"flex items-center w-full p-2 text-base font-normal text-gray-900 transition duration-75 rounded-lg group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700\"\r\n            aria-controls=\"dropdown-example\"\r\n            data-collapse-toggle=\"dropdown-example\"\r\n          >\r\n            <svg\r\n              class=\"flex-shrink-0 w-6 h-6 text-gray-500 transition duration-75 group-hover:text-gray-900 dark:text-gray-400 dark:group-hover:text-white\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                d=\"M10 2a4 4 0 00-4 4v1H5a1 1 0 00-.994.89l-1 9A1 1 0 004 18h12a1 1 0 00.994-1.11l-1-9A1 1 0 0015 7h-1V6a4 4 0 00-4-4zm2 5V6a2 2 0 10-4 0v1h4zm-6 3a1 1 0 112 0 1 1 0 01-2 0zm7-1a1 1 0 100 2 1 1 0 000-2z\"\r\n                clip-rule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n            <span\r\n              class=\"flex-1 ml-3 text-left whitespace-nowrap\"\r\n              sidebar-toggle-item\r\n            >\r\n              E-commerce\r\n            </span>\r\n            <svg\r\n              sidebar-toggle-item\r\n              class=\"w-6 h-6\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\r\n                clip-rule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n          </button>\r\n          <ul id=\"dropdown-example\" class=\"hidden py-2 space-y-2\">\r\n            <li>\r\n              <a\r\n                href=\"#\"\r\n                class=\"flex items-center w-full p-2 text-base font-normal text-gray-900 transition duration-75 rounded-lg group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700 pl-11\"\r\n              >\r\n                Products\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a\r\n                href=\"#\"\r\n                class=\"flex items-center w-full p-2 text-base font-normal text-gray-900 transition duration-75 rounded-lg group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700 pl-11\"\r\n              >\r\n                Billing\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a\r\n                href=\"#\"\r\n                class=\"flex items-center w-full p-2 text-base font-normal text-gray-900 transition duration-75 rounded-lg group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700 pl-11\"\r\n              >\r\n                Invoice\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href=\"#\"\r\n            class=\"flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n          >\r\n            <svg\r\n              class=\"flex-shrink-0 w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM11 13a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"\r\n              ></path>\r\n            </svg>\r\n            <span class=\"flex-1 ml-3 whitespace-nowrap\">Kanban</span>\r\n            <span\r\n              class=\"inline-flex items-center justify-center px-2 ml-3 text-sm font-medium text-gray-800 bg-gray-200 rounded-full dark:bg-gray-700 dark:text-gray-300\"\r\n            >\r\n              Pro\r\n            </span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href=\"#\"\r\n            class=\"flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n          >\r\n            <svg\r\n              class=\"flex-shrink-0 w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M8.707 7.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l2-2a1 1 0 00-1.414-1.414L11 7.586V3a1 1 0 10-2 0v4.586l-.293-.293z\"\r\n              ></path>\r\n              <path\r\n                d=\"M3 5a2 2 0 012-2h1a1 1 0 010 2H5v7h2l1 2h4l1-2h2V5h-1a1 1 0 110-2h1a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5z\"\r\n              ></path>\r\n            </svg>\r\n            <span class=\"flex-1 ml-3 whitespace-nowrap\">Inbox</span>\r\n            <span\r\n              class=\"inline-flex items-center justify-center w-3 h-3 p-3 ml-3 text-sm font-medium text-blue-600 bg-blue-200 rounded-full dark:bg-blue-900 dark:text-blue-200\"\r\n            >\r\n              3\r\n            </span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href=\"#\"\r\n            class=\"flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n          >\r\n            <svg\r\n              class=\"flex-shrink-0 w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\"\r\n                clip-rule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n            <span class=\"flex-1 ml-3 whitespace-nowrap\">Users</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href=\"#\"\r\n            class=\"flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n          >\r\n            <svg\r\n              class=\"flex-shrink-0 w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                d=\"M10 2a4 4 0 00-4 4v1H5a1 1 0 00-.994.89l-1 9A1 1 0 004 18h12a1 1 0 00.994-1.11l-1-9A1 1 0 0015 7h-1V6a4 4 0 00-4-4zm2 5V6a2 2 0 10-4 0v1h4zm-6 3a1 1 0 112 0 1 1 0 01-2 0zm7-1a1 1 0 100 2 1 1 0 000-2z\"\r\n                clip-rule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n            <span class=\"flex-1 ml-3 whitespace-nowrap\">Products</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href=\"#\"\r\n            class=\"flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n          >\r\n            <svg\r\n              class=\"flex-shrink-0 w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                d=\"M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z\"\r\n                clip-rule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n            <span class=\"flex-1 ml-3 whitespace-nowrap\">Sign In</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href=\"#\"\r\n            class=\"flex items-center p-2 text-base font-normal text-gray-900 rounded-lg dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n          >\r\n            <svg\r\n              class=\"flex-shrink-0 w-6 h-6 text-gray-500 transition duration-75 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-white\"\r\n              fill=\"currentColor\"\r\n              viewBox=\"0 0 20 20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                d=\"M5 4a3 3 0 00-3 3v6a3 3 0 003 3h10a3 3 0 003-3V7a3 3 0 00-3-3H5zm-1 9v-1h5v2H5a1 1 0 01-1-1zm7 1h4a1 1 0 001-1v-1h-5v2zm0-4h5V8h-5v2zM9 8H4v2h5V8z\"\r\n                clip-rule=\"evenodd\"\r\n              ></path>\r\n            </svg>\r\n            <span class=\"flex-1 ml-3 whitespace-nowrap\">Sign Up</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </aside>\r\n\r\n  <p class=\"mt-5\">\r\n    This sidebar component is part of a larger, open-source library of Tailwind\r\n    CSS components. Learn more by going to the official\r\n    <a\r\n      class=\"text-blue-600 hover:underline\"\r\n      href=\"https://flowbite.com/docs/getting-started/introduction/\"\r\n      target=\"_blank\"\r\n    >\r\n      Flowbite Documentation\r\n    </a>\r\n    .\r\n  </p>\r\n  <script src=\"https://unpkg.com/flowbite@1.3.4/dist/flowbite.js\"></script>\r\n</div>\r\n"
        },
        {
            "name": "SpinnerComponent001",
            "id": "component-SpinnerComponent001-fe3ef0829660036977a6d7d7e3113e0a8c1b131c10177438111c719d49f64c231d738431401fac636ba0275cba793037384fb8097a252b4838044be81c666754",
            "file": "src/app/shared/modules/spinners/components/spinnerType001/spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-spinner-001",
            "styleUrls": [
                "./spinner.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./spinner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'dz-spinner-001',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.sass'],\r\n})\r\nexport class SpinnerComponent001 {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".loader\r\n  border: 6px solid #f3f3f3 /* Light grey */\r\n  border-top: 6px solid black /* Blue */\r\n  // border-left: 8px solid #b42222 /* Blue */\r\n  // border-right:  12px solid #851e1e /* Blue */\r\n  // border-bottom:  4px solid #09f730 /* Blue */\r\n  border-radius: 50%\r\n  width: 40px\r\n  height: 40px\r\n  animation: spin 1.5s linear infinite\r\n  //margin-top: 20px\r\n\r\n\r\n@keyframes spin\r\n  0%\r\n    transform: rotate(0deg)\r\n  20%\r\n    transform: rotate(36deg)\r\n  40%\r\n    transform: rotate(72deg)\r\n  100%\r\n    transform: rotate(360deg)\r\n",
                    "styleUrl": "./spinner.component.sass"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"loader\"></div>\r\n"
        },
        {
            "name": "TagFeedComponent",
            "id": "component-TagFeedComponent-b165ab56e8510cc67903f091954ecb2566aec680e4e3e7e8e267a2929fb4410279025de5291b916c31129474295607a972edc2d07939484f3454f0bdd87fc3fe",
            "file": "src/app/pages/articleTagFeed/components/tagFeed/tagFeed.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-tag-feed",
            "styleUrls": [
                "./tagFeed.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tagFeed.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "tagName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "getApiUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpParams } from '@angular/common/http'\r\nimport { Component, OnInit } from '@angular/core'\r\nimport { ActivatedRoute, Router } from '@angular/router'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-tag-feed',\r\n  templateUrl: './tagFeed.component.html',\r\n  styleUrls: ['./tagFeed.component.scss'],\r\n})\r\nexport class TagFeedComponent implements OnInit {\r\n  tagName: string\r\n  apiUrl: string\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router) {\r\n    this.tagName = ''\r\n    this.apiUrl = ''\r\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\r\n      return false\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.tagName = this.route.snapshot.paramMap.get('slug') || ''\r\n    this.apiUrl = environment.tagFeedUrl //+ this.tagName\r\n  }\r\n  getApiUrl(): string {\r\n    return this.apiUrl\r\n  }\r\n}\r\n/*\r\n/articleList/?user=<id>/offset=0&limit=10\r\n/articleList/?tag=tag,tag,tag/offset=0&limit=10\r\n\r\n*/\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./tagFeed.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"w-full flex justify-center\">\r\n  <!-- <dz-banner></dz-banner> -->\r\n  <div class=\"w-11/12\">\r\n    <div class=\"\">\r\n      <div class=\"\">\r\n        <!-- <dz-feed-toggler [tagName]=\"tagName\"></dz-feed-toggler> -->\r\n\r\n        <dz-feed [apiUrl]=\"apiUrl\" [tagName]=\"tagName\"></dz-feed>\r\n      </div>\r\n      <div class=\"\">\r\n        <!-- <dz-popular-tags></dz-popular-tags> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "TagSelectorComponent",
            "id": "component-TagSelectorComponent-bf8f27debe423c3d5aa92f5aac82cc031634732269e14129fab7847870de7eb229153b7873255aac19f00ae5866091915e050e870f6c114f38332455c29f84a2",
            "file": "src/app/shared/modules/articleForms/components/tagSelector/tagSelector.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-tag-selector",
            "styleUrls": [
                "./tagSelector.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./tagSelector.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "old_tag_list_props",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected_tag_output",
                    "defaultValue": "new EventEmitter<string[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "available_tag_list",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "selected_tag_list",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "addTag",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeTag",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\r\nimport { Actions, ofType } from '@ngrx/effects'\r\nimport { Store } from '@ngrx/store'\r\nimport {\r\n  getTagAction,\r\n  getTagSuccessAction,\r\n} from '../store/actions/getTags.actions'\r\n\r\n@Component({\r\n  selector: 'dz-tag-selector',\r\n  templateUrl: './tagSelector.component.html',\r\n  styleUrls: ['./tagSelector.component.sass'],\r\n})\r\nexport class TagSelectorComponent implements OnInit {\r\n  @Output() selected_tag_output = new EventEmitter<string[]>()\r\n  @Input() old_tag_list_props: string[]\r\n  selected_tag_list: string[] = []\r\n  available_tag_list: string[]\r\n  constructor(private store: Store, private _actions$: Actions) {\r\n    this.available_tag_list = []\r\n    this.old_tag_list_props = []\r\n  }\r\n  ngOnInit() {\r\n    this.initValues()\r\n  }\r\n  initValues() {\r\n    this.store.dispatch(getTagAction())\r\n    this._actions$.pipe(ofType(getTagSuccessAction)).subscribe((data: any) => {\r\n      for (let i = 0; i < data.tags.length; i++)\r\n        this.available_tag_list.push(data.tags[i])\r\n      this.available_tag_list.sort()\r\n    })\r\n\r\n    if (this.old_tag_list_props[0] !== '') {\r\n      this.available_tag_list = this.available_tag_list.filter((val) => {\r\n        return !this.old_tag_list_props.includes(val)\r\n      })\r\n\r\n      console.log(this.selected_tag_list)\r\n      for (let i = 0; i < this.old_tag_list_props.length; i++)\r\n        this.selected_tag_list.push(this.old_tag_list_props[i])\r\n    }\r\n  }\r\n  addTag(value: string, index: number) {\r\n    this.selected_tag_list.push(value)\r\n    this.selected_tag_list.sort()\r\n    this.available_tag_list.splice(index, 1).sort()\r\n    this.selected_tag_output.emit(this.selected_tag_list)\r\n  }\r\n  removeTag(index: number, value: string) {\r\n    this.selected_tag_list.splice(index, 1).sort()\r\n    this.available_tag_list.push(value)\r\n    this.available_tag_list.sort()\r\n    this.selected_tag_output.emit(this.selected_tag_list)\r\n  }\r\n}\r\n/*\r\n      <dz-tag-selector\r\n        [old_tag_list_props]=\"old_tag_list_props\"\r\n        (selected_tag_output)=\"removeTag($event)\"\r\n      ></dz-tag-selector>\r\n*/\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./tagSelector.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Selected Tag List</h1>\r\n<div\r\n  class=\"flex flex-wrap items-end space-x-2 justify-right\"\r\n  *ngIf=\"selected_tag_list\"\r\n>\r\n  <p *ngIf=\"selected_tag_list.length < 1\">Please select a tag</p>\r\n  <span\r\n    *ngFor=\"let item of selected_tag_list; let i = index\"\r\n    class=\"flex text-sm font-semibold text-gray-500 transition duration-300 bg-green-200 rounded-full cursor-pointer align-right active:bg-gray-300 ease w-max\"\r\n    (click)=\"removeTag(i, item)\"\r\n  >\r\n    <span class=\"flex items-center px-3 py-2\">\r\n      {{ item }}\r\n    </span>\r\n    <button class=\"bg-transparent hover focus:outline-none\">\r\n      <svg\r\n        aria-hidden=\"true\"\r\n        focusable=\"false\"\r\n        data-prefix=\"fas\"\r\n        data-icon=\"times\"\r\n        class=\"w-3 mr-4\"\r\n        role=\"img\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 352 512\"\r\n      >\r\n        <path\r\n          fill=\"currentColor\"\r\n          d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"\r\n        ></path>\r\n      </svg>\r\n    </button>\r\n  </span>\r\n</div>\r\n<!--  -->\r\n<h1>Available Tag List</h1>\r\n<p *ngIf=\"available_tag_list.length < 1\">Yes all the tags</p>\r\n<div\r\n  class=\"flex flex-wrap items-end p-3 space-x-2 border-0 rounded justify-right bg-slate-200\"\r\n  *ngIf=\"available_tag_list\"\r\n>\r\n  <span\r\n    *ngFor=\"let item of available_tag_list; let i = index\"\r\n    class=\"flex text-sm font-semibold text-gray-500 transition duration-300 bg-gray-200 rounded-full cursor-pointer align-right active:bg-gray-300 ease w-max\"\r\n    (click)=\"addTag(item, i)\"\r\n  >\r\n    <span class=\"flex items-center px-3 py-2\">\r\n      {{ item }}\r\n    </span>\r\n    <button class=\"bg-transparent hover focus:outline-none\">\r\n      <!-- <svg\r\n        aria-hidden=\"true\"\r\n        focusable=\"false\"\r\n        data-prefix=\"fas\"\r\n        data-icon=\"times\"\r\n        class=\"w-3 mr-4\"\r\n        role=\"img\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 352 512\"\r\n      >\r\n        <path\r\n          fill=\"currentColor\"\r\n          d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"\r\n        ></path>\r\n      </svg> -->\r\n    </button>\r\n  </span>\r\n</div>\r\n"
        },
        {
            "name": "TestNavComponent",
            "id": "component-TestNavComponent-4e018fe21333196e4baff099a2532c94fe7b375a26482d8c84071c36ad607f9afe362f8bd5a08a80280ce9b116dd38244aeaada202b4ffbf31c0787f8da17a74",
            "file": "src/app/shared/modules/header/tests-nav/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-test-nav",
            "styleUrls": [
                "./header.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authhidden",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "baseMedia",
                    "defaultValue": "'http://104.254.15.78:8000/'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrentUserInterface | null",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "currentUser$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CurrentUserInterface | null>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "hidden",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isAdmin$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean | null>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "isAnonymous$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean | null>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "isLoggedIn$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean | null>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "mainTags",
                    "defaultValue": "['Coding', 'News', 'Tech']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "tag",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tag",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClickedOutside",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLoginOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { ActivatedRoute, Router } from '@angular/router'\r\nimport { select, Store } from '@ngrx/store'\r\nimport { Observable, tap } from 'rxjs'\r\nimport {\r\n  currentUserSelector,\r\n  isAdminSelector,\r\n  isAnonymousSelector,\r\n  isLoggedInSelector,\r\n} from 'src/app/pages/auth/store/selectors/auth.selectors'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\n\r\n@Component({\r\n  selector: 'dz-test-nav',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.sass'],\r\n})\r\nexport class TestNavComponent implements OnInit {\r\n  isLoggedIn$!: Observable<boolean | null>\r\n  isAnonymous$!: Observable<boolean | null>\r\n  currentUser$!: Observable<CurrentUserInterface | null>\r\n  isAdmin$!: Observable<boolean | null>\r\n  hidden: boolean = true\r\n  authhidden: boolean = true\r\n  currentUser: CurrentUserInterface | null\r\n  mainTags: string[] = ['Coding', 'News', 'Tech']\r\n  baseMedia: string = 'http://104.254.15.78:8000/'\r\n  constructor(\r\n    private store: Store,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n  ) {\r\n    this.currentUser = null\r\n    this.hidden = true\r\n    this.authhidden = true\r\n  }\r\n  ngOnInit(): void {\r\n    this.initializeListeners()\r\n    this.initializeValues()\r\n  }\r\n  initializeValues() {\r\n    this.isLoggedIn$ = this.store.pipe(select(isLoggedInSelector))\r\n    this.isAnonymous$ = this.store.pipe(select(isAnonymousSelector))\r\n    this.isAdmin$ = this.store.pipe(select(isAdminSelector))\r\n    this.currentUser$ = this.store.pipe(\r\n      select(currentUserSelector),\r\n      tap((user) => {\r\n        this.currentUser = user\r\n      }),\r\n    )\r\n  }\r\n  initializeListeners(): void {}\r\n  onLoginOpen(): void {\r\n    this.authhidden = false\r\n  }\r\n  onOpen(): void {\r\n    this.hidden = false\r\n  }\r\n  onClickedOutside(e: Event) {\r\n    this.hidden = true\r\n    this.authhidden = true\r\n  }\r\n  onClick(tag: string): void {\r\n    this.router.navigate(['feed', 'tag', tag])\r\n    console.log(this.router.url)\r\n    console.log(tag)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./header.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!DOCTYPE html>\r\n<!-- <div class=\"z-50 w-full bg-yellow-500 h-9\" *ngIf=\"true\">\r\n  <ul class=\"flex gap-3\">\r\n    <li>\r\n      <a\r\n        [routerLink]=\"['/']\"\r\n        class=\"nav-link\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        home\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a\r\n        [routerLink]=\"['/login']\"\r\n        class=\"nav-link\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        login\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a\r\n        [routerLink]=\"['/register']\"\r\n        class=\"nav-link\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        register\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a\r\n        [routerLink]=\"['/emailvalidation']\"\r\n        class=\"nav-link\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        emailValidation\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a\r\n        [routerLink]=\"['/article/1']\"\r\n        class=\"nav-link\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        article 1\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a\r\n        [routerLink]=\"['/article/1/edit']\"\r\n        class=\"nav-link\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        article 1 edit\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a\r\n        [routerLink]=\"['/article/new']\"\r\n        class=\"nav-link\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        new article\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a\r\n        [routerLink]=\"['/profileupdate']\"\r\n        class=\"nav-link\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      >\r\n        profileupdate\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</div> -->\r\n\r\n<nav\r\n  class=\"sticky top-0 z-50 flex flex-wrap items-center justify-between w-full p-6 bg-white border-0 shadow-md\"\r\n>\r\n  <div\r\n    class=\"flex items-center gap-2 mr-6 text-black flex-no-shrink\"\r\n    [routerLink]=\"['/']\"\r\n    routerLinkActive=\"active\"\r\n    [routerLinkActiveOptions]=\"{ exact: true }\"\r\n  >\r\n    <img src=\"/assets/images/dzonics1 (1).svg\" alt=\"\" class=\"w-14 h-14\" />\r\n    <a class=\"text-xl font-semibold tracking-tight upercase\">\r\n      Dezonic Blog\r\n    </a>\r\n  </div>\r\n  <!-- <div class=\"block lg:hidden\">\r\n    <button\r\n      class=\"flex items-center px-3 py-2 border rounded text-teal-lighter border-teal-light hover:text-black hover:border-white\"\r\n    >\r\n      fsdfgsdfg\r\n    </button>\r\n  </div> -->\r\n  <div class=\"flex-grow block w-full md:flex md:items-center md:w-auto\">\r\n    <div class=\"flex text-sm text-black md:flex-grow\">\r\n      <div *ngFor=\"let tag of mainTags\">\r\n        <a\r\n          class=\"block mt-4 mr-4 md:inline-block md:mt-0 text-teal-lighter hover:text-black\"\r\n          (click)=\"onClick(tag)\"\r\n        >\r\n          {{ tag }}\r\n        </a>\r\n      </div>\r\n\r\n      <!-- <a\r\n        [routerLink]=\"['feed', 'tag', 'news']\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"\"\r\n        class=\"block mt-4 mr-4 lg:inline-block lg:mt-0 text-teal-lighter hover:text-black\"\r\n      >\r\n        News\r\n      </a>\r\n      <a\r\n        [routerLink]=\"['feed', 'tag', 'coding']\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"\"\r\n        class=\"block mt-4 mr-4 lg:inline-block lg:mt-0 text-teal-lighter hover:text-black\"\r\n      >\r\n        Coding\r\n      </a>\r\n      <a\r\n        [routerLink]=\"['feed', 'tag', 'tech']\"\r\n        class=\"nav-link\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"\"\r\n        class=\"block mt-4 mr-4 lg:inline-block lg:mt-0 text-teal-lighter hover:text-black\"\r\n      >\r\n        Tech\r\n      </a> -->\r\n      <a\r\n        *ngIf=\"isAdmin$ | async\"\r\n        [routerLink]=\"['/article/new']\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{ exact: true }\"\r\n        class=\"block mt-4 lg:inline-block lg:mt-0 text-teal-lighter hover:text-black\"\r\n      >\r\n        Create Article\r\n      </a>\r\n    </div>\r\n    <div class=\"flex px-1\">\r\n      <!-- [routerLink]=\"['/login']\" [routerLinkActiveOptions]=\"{ exact: true }\"  -->\r\n\r\n      <div>\r\n        <a\r\n          *ngIf=\"isAnonymous$ | async\"\r\n          [routerLink]=\"['/register']\"\r\n          routerLinkActive=\"active\"\r\n          [routerLinkActiveOptions]=\"{ exact: true }\"\r\n          class=\"inline-flex items-center justify-center px-4 py-2 ml-8 text-base font-medium text-black bg-indigo-600 border border-transparent rounded-md shadow-sm whitespace-nowrap hover:bg-indigo-700\"\r\n        >\r\n          Sign up\r\n        </a>\r\n      </div>\r\n      <div>\r\n        <a\r\n          *ngIf=\"isAnonymous$ | async\"\r\n          [routerLink]=\"['/login']\"\r\n          routerLinkActive=\"active\"\r\n          [routerLinkActiveOptions]=\"{ exact: true }\"\r\n          class=\"inline-flex items-center justify-center px-4 py-2 ml-8 text-base font-medium text-black bg-indigo-600 border border-transparent rounded-md shadow-sm whitespace-nowrap hover:bg-indigo-700\"\r\n        >\r\n          Login\r\n        </a>\r\n      </div>\r\n      <!-- <div\r\n        *ngIf=\"isAnonymous$ | async\"\r\n        (clickOutside)=\"onClickedOutside($event)\"\r\n      >\r\n        <a\r\n          (click)=\"onLoginOpen()\"\r\n          class=\"inline-flex items-center justify-center px-4 py-2 ml-8 text-base font-medium text-black bg-indigo-600 border border-transparent rounded-md shadow-sm whitespace-nowrap hover:bg-indigo-700\"\r\n        >\r\n          Sign in\r\n        </a>\r\n        <div *ngIf=\"!authhidden\" class=\"relative z-50\">\r\n          <dz-login></dz-login>\r\n        </div>\r\n      </div> -->\r\n      <!-- dz-login -->\r\n\r\n      <!--  -->\r\n      <div\r\n        class=\"flex\"\r\n        *ngIf=\"isLoggedIn$ | async\"\r\n        (clickOutside)=\"onClickedOutside($event)\"\r\n      >\r\n        <!-- (currentUser$ | async).currentUser.image -->\r\n        <img\r\n          *ngIf=\"currentUser$ | async\"\r\n          [src]=\"baseMedia + (currentUser$ | async)?.currentUser?.image\"\r\n          alt=\"user-img\"\r\n          class=\"overflow-hidden bg-blue-500 rounded-full h-14 w-14\"\r\n          (click)=\"onOpen()\"\r\n        />\r\n        <div *ngIf=\"!hidden\" class=\"relative\">\r\n          <app-custom-dropdown></app-custom-dropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n<!-- This example requires Tailwind CSS v2.0+ -->\r\n"
        },
        {
            "name": "TextImageType001Component",
            "id": "component-TextImageType001Component-96ebfd5501a3d9bcfadcb8860764384f186a4ee3112eafdce7a8519162dea2c7299ec30f4598c6c30941a5ffc574caecab3dc1ca0ba73c311640633a8fc8905d",
            "file": "src/app/shared/modules/articleContentBlock/components/text-image/type001/display/textImageType001.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-text-image-type-001",
            "styleUrls": [
                "./textImageType001.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./textImageType001.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "ArticleBlockInterface",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-text-image-type-001',\r\n  templateUrl: './textImageType001.component.html',\r\n  styleUrls: ['./textImageType001.component.sass'],\r\n})\r\nexport class TextImageType001Component implements OnInit, OnDestroy {\r\n  @Input('content') content!: ArticleBlockInterface\r\n  baseMedia: string\r\n  constructor() {\r\n    this.baseMedia = environment.baseMedia\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./textImageType001.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div class=\"grid grid-cols-1 gap-4 text-center\">\r\n  <div class=\"rounded shadow-sm\">\r\n    <img\r\n      [src]=\"baseMedia + content.imageOne\"\r\n      alt=\"\"\r\n      class=\"w-full mb-2 rounded shadow-sm\"\r\n    />\r\n    <p>{{ content.body }}</p>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "TitleFormType001Component",
            "id": "component-TitleFormType001Component-9080f56ebceffd4d7279921860df30df90fd49710b15a87efc82e12cf201a52500f791fff319eab860d3fd1d0fb2e128bc6da90b2384b83b918e3e540c0aee53",
            "file": "src/app/shared/modules/articleContentBlock/components/titles/type001/form/titleFormType001.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-title-form-type-001",
            "styleUrls": [
                "./TitleFormType001.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./TitleFormType001.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "parentFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "edit",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\r\nimport { FormGroup } from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'dz-title-form-type-001',\r\n  templateUrl: './TitleFormType001.component.html',\r\n  styleUrls: ['./TitleFormType001.component.sass'],\r\n})\r\nexport class TitleFormType001Component implements OnInit {\r\n  @Input() parentFormGroup!: FormGroup\r\n  edit: boolean = true\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n  onEdit() {\r\n    this.edit = !this.edit\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./TitleFormType001.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [formGroup]=\"parentFormGroup\" class=\"w-full\">\r\n  <label for=\"name\" class=\"block\">\r\n    Title\r\n  </label>\r\n  <div id=\"\" class=\"bg-white border rounded\">\r\n    <fieldset class=\"form-group\">\r\n      <input\r\n        *ngIf=\"!parentFormGroup.value.customObject\"\r\n        type=\"text\"\r\n        class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n        placeholder=\"seation title\"\r\n        formControlName=\"title\"\r\n      />\r\n    </fieldset>\r\n  </div>\r\n</div>\r\n\r\n<!--\r\n\r\n<div [formGroup]=\"parentFormGroup\" class=\"\">\r\n  <label for=\"name\" class=\"block\">\r\n    Title\r\n  </label>\r\n  <div id=\"quill\" class=\"bg-white border rounded\">\r\n    <fieldset class=\"form-group\">\r\n      <input\r\n        *ngIf=\"!parentFormGroup.value.customObject\"\r\n        type=\"text\"\r\n        class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n        placeholder=\"seation title\"\r\n        formControlName=\"title\"\r\n      />\r\n    </fieldset>\r\n  </div>\r\n\r\n  <div class=\"mt-5\">\r\n    <div class=\"flex justify-center w-full h-auto rounded\">\r\n      <dz-image-form\r\n        [parentFormGroup]=\"parentFormGroup\"\r\n        class=\"rounded\"\r\n      ></dz-image-form>\r\n    </div>\r\n    <div class=\"rounded-lg shadow-xl\">\r\n      <div class=\"mb-6\">\r\n        <label class=\"block my-2 text-sm\">\r\n          Description\r\n        </label>\r\n        <fieldset class=\"bg-white border rounded\">\r\n          <textarea\r\n            *ngIf=\"!parentFormGroup.value.custom\"\r\n            type=\"text\"\r\n            class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md h-44 focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n            placeholder=\"Description\"\r\n            formControlName=\"body\"\r\n          ></textarea>\r\n        </fieldset>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n"
        },
        {
            "name": "TitleType001Component",
            "id": "component-TitleType001Component-ce2256384a6353aff5f6625faba6986bc554e272968cee582f653c8358d66b1d71124983aaa25bcc773bec8c3201e8fec0a398f0a4747062d39ba58b4885ac2a",
            "file": "src/app/shared/modules/articleContentBlock/components/titles/type001/display/titleType001.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-title-type-001",
            "styleUrls": [
                "./titleType001.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./titleType001.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "ArticleBlockInterface",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "baseMedia",
                    "defaultValue": "environment.baseMedia",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteArticle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { environment } from 'src/environments/environment'\r\n\r\n@Component({\r\n  selector: 'dz-title-type-001',\r\n  templateUrl: './titleType001.component.html',\r\n  styleUrls: ['./titleType001.component.sass'],\r\n})\r\nexport class TitleType001Component implements OnInit, OnDestroy {\r\n  @Input('content') content!: ArticleBlockInterface\r\n  baseMedia = environment.baseMedia\r\n  constructor() {}\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n    this.fetchData()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {}\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  deleteArticle(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".title\r\n  @apply w-full pb-4 font-sans text-4xl font-semibold tracking-wide\r\n",
                    "styleUrl": "./titleType001.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n\r\n<div class=\"title\">\r\n  <h1>\r\n    {{ content.title }}\r\n  </h1>\r\n</div>\r\n"
        },
        {
            "name": "UpdateBioComponent",
            "id": "component-UpdateBioComponent-b466623e2aa87618af5ae2e55848e738b988e739867eb70aecc99a23e06f7497db42bfe4b0e5e8d1a9f34ef3e13393ce5eca97ca61f96d75c8d4aa3555119431",
            "file": "src/app/pages/auth/components/updateProfileInfo/components/updateBio/updateBio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-bio-form",
            "styleUrls": [
                "./updateBio.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./updateBio.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrentUserInterface",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "currentUser$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CurrentUserInterface | null>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\nimport { FormBuilder, FormGroup } from '@angular/forms'\r\nimport { select, Store } from '@ngrx/store'\r\nimport { Observable, filter, tap } from 'rxjs'\r\nimport { AuthUpdateInterface } from 'src/app/pages/auth/interfaces/authUpdate.interface'\r\nimport { updateCurrentUserAction } from 'src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions'\r\nimport { currentUserSelector } from 'src/app/pages/auth/store/selectors/auth.selectors'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\n\r\n@Component({\r\n  selector: 'dz-bio-form',\r\n  templateUrl: './updateBio.component.html',\r\n  styleUrls: ['./updateBio.component.sass'],\r\n})\r\nexport class UpdateBioComponent implements OnInit, OnDestroy {\r\n  form!: FormGroup\r\n  currentUser$!: Observable<CurrentUserInterface | null>\r\n  currentUser!: CurrentUserInterface\r\n  constructor(private store: Store, private fb: FormBuilder) {}\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {\r\n    this.form = this.fb.group({\r\n      newBio: '',\r\n    })\r\n    this.store\r\n      .select(currentUserSelector)\r\n      .pipe(filter((x) => x != null))\r\n      .subscribe((data) => {\r\n        console.log(data)\r\n        if (data) {\r\n          this.currentUser = data\r\n          this.fetchData()\r\n        }\r\n      })\r\n  }\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {\r\n    if (this.currentUser)\r\n      this.form = this.fb.group({\r\n        newBio: this.currentUser.currentUser.bio,\r\n      })\r\n    console.log(this.form)\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const currentUserInput: AuthUpdateInterface = {\r\n      user: {\r\n        password: undefined,\r\n        email: undefined,\r\n        bio: this.form.value,\r\n        image: undefined,\r\n        userName: undefined,\r\n        firstName: undefined,\r\n        lastName: undefined,\r\n      },\r\n    }\r\n    this.store.dispatch(updateCurrentUserAction({ currentUserInput }))\r\n    console.log(currentUserInput)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./updateBio.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div *ngIf=\"currentUser\">\r\n  <form [formGroup]=\"form\" class=\"mb-2 text-xl text-slate-300 text-bold\">\r\n    <fieldset>\r\n      <div class=\"mb-6\">\r\n        <label class=\"block\"></label>\r\n        <fieldset class=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n            placeholder=\"title\"\r\n            formControlName=\"newBio\"\r\n          />\r\n        </fieldset>\r\n      </div>\r\n      <button (click)=\"onSubmit()\">bio</button>\r\n    </fieldset>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "UpdateEmailComponent",
            "id": "component-UpdateEmailComponent-139006c1d9dd081384a2d1091307a230152ae44da09552708b68b49ac96959680802c9f7588f0c82361fd84c12b2a1b4e6f5f35a332ac8250aa1338d675cbe7d",
            "file": "src/app/pages/auth/components/updateProfileInfo/components/updateEmail/updateEmail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-email-form",
            "styleUrls": [
                "./updateEmail.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./updateEmail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrentUserInterface",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "currentUser$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CurrentUserInterface>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "edit",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmitEmailUserName",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\nimport { FormBuilder, FormGroup } from '@angular/forms'\r\nimport { select, Store } from '@ngrx/store'\r\nimport { Observable, filter, tap } from 'rxjs'\r\nimport { AuthUpdateInterface } from 'src/app/pages/auth/interfaces/authUpdate.interface'\r\nimport { updateCurrentUserAction } from 'src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions'\r\nimport { currentUserSelector } from 'src/app/pages/auth/store/selectors/auth.selectors'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\n\r\n@Component({\r\n  selector: 'dz-email-form',\r\n  templateUrl: './updateEmail.component.html',\r\n  styleUrls: ['./updateEmail.component.sass'],\r\n})\r\nexport class UpdateEmailComponent implements OnInit, OnDestroy {\r\n  form!: FormGroup\r\n  currentUser$!: Observable<CurrentUserInterface>\r\n  currentUser!: CurrentUserInterface\r\n  edit: boolean = false\r\n  constructor(private store: Store, private fb: FormBuilder) {}\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {\r\n    this.form = this.fb.group({\r\n      newEmail: '',\r\n    })\r\n    this.store\r\n      .select(currentUserSelector)\r\n      .pipe(filter((x) => x != null))\r\n      .subscribe((data) => {\r\n        console.log(data)\r\n        if (data) {\r\n          this.currentUser = data\r\n          this.fetchData()\r\n        }\r\n      })\r\n  }\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {\r\n    if (this.currentUser)\r\n      this.form = this.fb.group({\r\n        newEmail: this.currentUser.currentUser.email,\r\n      })\r\n    console.log(this.form)\r\n  }\r\n\r\n  onSubmitEmailUserName(): void {\r\n    let a = { user: { password: this.form.value } }\r\n    console.log(a)\r\n    const currentUserInput: AuthUpdateInterface = {\r\n      user: {\r\n        password: undefined,\r\n        email: this.form.value,\r\n        bio: undefined,\r\n        image: undefined,\r\n        userName: undefined,\r\n        firstName: undefined,\r\n        lastName: undefined,\r\n      },\r\n    }\r\n    this.store.dispatch(updateCurrentUserAction({ currentUserInput }))\r\n    console.log(currentUserInput)\r\n  }\r\n  onEdit(): void {\r\n    this.edit = !this.edit\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./updateEmail.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div *ngIf=\"currentUser\">\r\n  <form [formGroup]=\"form\" class=\"mb-2 text-xl text-slate-300 text-bold\">\r\n    <fieldset class=\"flex\">\r\n      <div class=\"mb-6\">\r\n        <label class=\"block\" *ngIf=\"!edit\">\r\n          {{ currentUser.currentUser.email }}\r\n        </label>\r\n        <fieldset class=\"form-group\" *ngIf=\"edit\">\r\n          <input\r\n            type=\"text\"\r\n            class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n            placeholder=\"title\"\r\n            formControlName=\"newEmail\"\r\n          />\r\n        </fieldset>\r\n      </div>\r\n      <button (click)=\"onEdit()\">\r\n        <p *ngIf=\"edit\">cancel</p>\r\n        <p *ngIf=\"!edit\">edit</p>\r\n      </button>\r\n      <button (click)=\"onSubmitEmailUserName()\" *ngIf=\"edit\">update</button>\r\n    </fieldset>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "UpdateFirstNameComponent",
            "id": "component-UpdateFirstNameComponent-7a625da72990e92299cd1cbf3dfca8c05639879b2058782e9737061104770e50952ca8733f613de2879ae5680bd257966703c7ea2294a399504741d236495355",
            "file": "src/app/pages/auth/components/updateProfileInfo/components/updateFirstName/updateFirstName.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-name-first-form",
            "styleUrls": [
                "./updateFirstName.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./updateFirstName.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrentUserInterface",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "currentUser$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CurrentUserInterface | null>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "edit",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\nimport { FormBuilder, FormGroup } from '@angular/forms'\r\nimport { select, Store } from '@ngrx/store'\r\nimport { Observable, filter, tap } from 'rxjs'\r\nimport { AuthUpdateInterface } from 'src/app/pages/auth/interfaces/authUpdate.interface'\r\nimport { updateCurrentUserAction } from 'src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions'\r\nimport { currentUserSelector } from 'src/app/pages/auth/store/selectors/auth.selectors'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\n\r\n@Component({\r\n  selector: 'dz-name-first-form',\r\n  templateUrl: './updateFirstName.component.html',\r\n  styleUrls: ['./updateFirstName.component.sass'],\r\n})\r\nexport class UpdateFirstNameComponent implements OnInit, OnDestroy {\r\n  form!: FormGroup\r\n\r\n  currentUser$!: Observable<CurrentUserInterface | null>\r\n  currentUser!: CurrentUserInterface\r\n  edit: boolean = false\r\n  //destroyed$ = new Subject<boolean>()\r\n  error: string | undefined\r\n  constructor(\r\n    private store: Store,\r\n    private fb: FormBuilder, //updates$: Actions,\r\n  ) {\r\n    this.error = undefined\r\n    // updates$\r\n    //   .pipe(ofType(updateCurrentUserSuccessAction), takeUntil(this.destroyed$))\r\n    //   .subscribe(() => {\r\n    //     this.edit = !this.edit\r\n    //   })\r\n    // updates$\r\n    //   .pipe(ofType(updateCurrentUserFailureAction), takeUntil(this.destroyed$))\r\n    //   .subscribe((error) => {\r\n    //     //this.error = error.errors.errors\r\n    //   })\r\n  }\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n  }\r\n\r\n  initializeValues(): void {\r\n    this.form = this.fb.group({\r\n      newFirstName: '',\r\n    })\r\n    console.log('*******************************', this.form)\r\n    this.store\r\n      .select(currentUserSelector)\r\n      .pipe(filter((x) => x != null))\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.currentUser = data\r\n          this.fetchData()\r\n        }\r\n      })\r\n  }\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {\r\n    // if (this.currentUser)\r\n    //   this.form = this.fb.group({\r\n    //     newFirstName: this.currentUser.currentUser.userName,\r\n    //     newLastName: this.currentUser.currentUser.userName,\r\n    //   })\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const currentUserInput: AuthUpdateInterface = {\r\n      user: {\r\n        password: undefined,\r\n        email: undefined,\r\n        bio: undefined,\r\n        image: undefined,\r\n        userName: undefined,\r\n        firstName: this.form.value,\r\n        lastName: undefined,\r\n      },\r\n    }\r\n    this.store.dispatch(updateCurrentUserAction({ currentUserInput }))\r\n  }\r\n  onEdit(): void {\r\n    this.error = undefined\r\n    if (this.currentUser)\r\n      this.form = this.fb.group({\r\n        newFirstName: this.currentUser.currentUser.firstName,\r\n      })\r\n    this.edit = !this.edit\r\n  }\r\n  ngOnDestroy(): void {\r\n    // this.destroyed$.next(true)\r\n    // this.destroyed$.complete()\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./updateFirstName.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div *ngIf=\"currentUser\">\r\n  <form [formGroup]=\"form\" class=\"mb-2 text-xl text-slate-300 text-bold\">\r\n    <fieldset class=\"flex\">\r\n      <div class=\"mb-6\">\r\n        <label *ngIf=\"error\" class=\"text-red-600\">{{ error }}</label>\r\n        <label class=\"block\" *ngIf=\"!edit\">\r\n          {{ currentUser.currentUser.firstName }}\r\n        </label>\r\n        <fieldset class=\"form-group\" *ngIf=\"edit\">\r\n          <input\r\n            type=\"text\"\r\n            class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n            placeholder=\"title\"\r\n            formControlName=\"newFirstName\"\r\n          />\r\n        </fieldset>\r\n      </div>\r\n      <button (click)=\"onEdit()\">\r\n        <p *ngIf=\"edit\">cancel</p>\r\n        <p *ngIf=\"!edit\">edit</p>\r\n      </button>\r\n      <button (click)=\"onSubmit()\" *ngIf=\"edit\">update</button>\r\n    </fieldset>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "UpdateImageComponent",
            "id": "component-UpdateImageComponent-f861c2b424fba6ab33f11048fb92b203aa932bafb048513a607c4454098eabd6db8a56acf1bca387c13540dc51ae22934e2027265d80f6ab830ea7e1ca1b40c1",
            "file": "src/app/pages/auth/components/updateProfileInfo/components/updateImage/updateImage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-profile-image-form",
            "styleUrls": [
                "./updateImage.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./updateImage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrentUserInterface | null",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "currentUser$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CurrentUserInterface | null>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\nimport { FormBuilder, FormGroup } from '@angular/forms'\r\nimport { select, Store } from '@ngrx/store'\r\nimport { Observable, filter, tap } from 'rxjs'\r\nimport { AuthUpdateInterface } from 'src/app/pages/auth/interfaces/authUpdate.interface'\r\nimport { updateCurrentUserAction } from 'src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions'\r\nimport { currentUserSelector } from 'src/app/pages/auth/store/selectors/auth.selectors'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\n\r\n@Component({\r\n  selector: 'dz-profile-image-form',\r\n  templateUrl: './updateImage.component.html',\r\n  styleUrls: ['./updateImage.component.sass'],\r\n})\r\nexport class UpdateImageComponent implements OnInit, OnDestroy {\r\n  form!: FormGroup\r\n  currentUser$!: Observable<CurrentUserInterface | null>\r\n  currentUser: CurrentUserInterface | null\r\n  constructor(private store: Store, private fb: FormBuilder) {\r\n    this.currentUser = null\r\n  }\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {\r\n    this.form = this.fb.group({\r\n      newImage: '',\r\n    })\r\n    this.store\r\n      .select(currentUserSelector)\r\n      .pipe(filter((x) => x != null))\r\n      .subscribe((data) => {\r\n        console.log('here', data)\r\n        this.currentUser = data\r\n        this.fetchData()\r\n      })\r\n  }\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {\r\n    if (this.currentUser)\r\n      this.form = this.fb.group({\r\n        newImage: this.currentUser.currentUser.image,\r\n      })\r\n    console.log(this.form)\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.form\r\n    const currentUserInput: AuthUpdateInterface = {\r\n      user: {\r\n        password: undefined,\r\n        email: undefined,\r\n        bio: undefined,\r\n        image: this.form.value,\r\n        userName: undefined,\r\n        firstName: undefined,\r\n        lastName: undefined,\r\n      },\r\n    }\r\n    this.store.dispatch(updateCurrentUserAction({ currentUserInput }))\r\n    console.log(currentUserInput)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./updateImage.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div *ngIf=\"currentUser\">\r\n  <form [formGroup]=\"form\" class=\"mb-2 text-xl text-slate-300 text-bold\">\r\n    <fieldset>\r\n      <div class=\"mb-6\">\r\n        <label class=\"block\"></label>\r\n        <dz-profile-images-form\r\n          *ngIf=\"currentUser\"\r\n          [parentFormGroup]=\"form\"\r\n          class=\"\"\r\n        ></dz-profile-images-form>\r\n      </div>\r\n      <button (click)=\"onSubmit()\">image</button>\r\n    </fieldset>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "UpdateLastNameComponent",
            "id": "component-UpdateLastNameComponent-affbe2c6021509e459dd99ba63c189befae916a7a7c3af6cd73327038150d13ee6eb9fc0a00e50cbc88732000c84b5ae5d09a520b1548bcddbd85d544cae8e35",
            "file": "src/app/pages/auth/components/updateProfileInfo/components/updateLastName/updateLastName.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-name-last-form",
            "styleUrls": [
                "./updateLastName.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./updateLastName.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrentUserInterface",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "currentUser$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CurrentUserInterface | null>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "edit",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\nimport { FormBuilder, FormGroup } from '@angular/forms'\r\nimport { select, Store } from '@ngrx/store'\r\nimport { Observable, filter, tap } from 'rxjs'\r\nimport { AuthUpdateInterface } from 'src/app/pages/auth/interfaces/authUpdate.interface'\r\nimport { updateCurrentUserAction } from 'src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions'\r\nimport { currentUserSelector } from 'src/app/pages/auth/store/selectors/auth.selectors'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\n\r\n@Component({\r\n  selector: 'dz-name-last-form',\r\n  templateUrl: './updateLastName.component.html',\r\n  styleUrls: ['./updateLastName.component.sass'],\r\n})\r\nexport class UpdateLastNameComponent implements OnInit, OnDestroy {\r\n  form!: FormGroup\r\n\r\n  currentUser$!: Observable<CurrentUserInterface | null>\r\n  currentUser!: CurrentUserInterface\r\n  edit: boolean = false\r\n  //destroyed$ = new Subject<boolean>()\r\n  error: string | undefined\r\n  constructor(\r\n    private store: Store,\r\n    private fb: FormBuilder, //updates$: Actions,\r\n  ) {\r\n    this.error = undefined\r\n    // updates$\r\n    //   .pipe(ofType(updateCurrentUserSuccessAction), takeUntil(this.destroyed$))\r\n    //   .subscribe(() => {\r\n    //     this.edit = !this.edit\r\n    //   })\r\n    // updates$\r\n    //   .pipe(ofType(updateCurrentUserFailureAction), takeUntil(this.destroyed$))\r\n    //   .subscribe((error) => {\r\n    //     //this.error = error.errors.errors\r\n    //   })\r\n  }\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n  }\r\n\r\n  initializeValues(): void {\r\n    this.form = this.fb.group({\r\n      newLastName: '',\r\n    })\r\n    console.log('*******************************', this.form)\r\n    this.store\r\n      .select(currentUserSelector)\r\n      .pipe(filter((x) => x != null))\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.currentUser = data\r\n          this.fetchData()\r\n        }\r\n      })\r\n  }\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {\r\n    // if (this.currentUser)\r\n    //   this.form = this.fb.group({\r\n    //     newFirstName: this.currentUser.currentUser.userName,\r\n    //     newLastName: this.currentUser.currentUser.userName,\r\n    //   })\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const currentUserInput: AuthUpdateInterface = {\r\n      user: {\r\n        password: undefined,\r\n        email: undefined,\r\n        bio: undefined,\r\n        image: undefined,\r\n        userName: undefined,\r\n        firstName: undefined,\r\n        lastName: this.form.value,\r\n      },\r\n    }\r\n    this.store.dispatch(updateCurrentUserAction({ currentUserInput }))\r\n  }\r\n  onEdit(): void {\r\n    this.error = undefined\r\n    if (this.currentUser)\r\n      this.form = this.fb.group({\r\n        newLastName: this.currentUser.currentUser.lastName,\r\n      })\r\n    this.edit = !this.edit\r\n  }\r\n  ngOnDestroy(): void {\r\n    // this.destroyed$.next(true)\r\n    // this.destroyed$.complete()\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./updateLastName.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div *ngIf=\"currentUser\">\r\n  <form [formGroup]=\"form\" class=\"mb-2 text-xl text-slate-300 text-bold\">\r\n    <fieldset class=\"flex\">\r\n      <div class=\"mb-6\">\r\n        <label *ngIf=\"error\" class=\"text-red-600\">{{ error }}</label>\r\n        <label class=\"block\" *ngIf=\"!edit\">\r\n          {{ currentUser.currentUser.lastName }}\r\n        </label>\r\n        <fieldset class=\"form-group\" *ngIf=\"edit\">\r\n          <input\r\n            type=\"text\"\r\n            class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n            placeholder=\"title\"\r\n            formControlName=\"newLastName\"\r\n          />\r\n        </fieldset>\r\n      </div>\r\n      <button (click)=\"onEdit()\">\r\n        <p *ngIf=\"edit\">cancel</p>\r\n        <p *ngIf=\"!edit\">edit</p>\r\n      </button>\r\n      <button (click)=\"onSubmit()\" *ngIf=\"edit\">update</button>\r\n    </fieldset>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "UpdatePasswordComponent",
            "id": "component-UpdatePasswordComponent-540bf173872db51432ee0d421f90a348f19b930e8368da9d9ac0b88bbef19afdd50a9ae94737188ffcb7d50d8633f9cca02de79cca4bea2c285389ae2ca6743c",
            "file": "src/app/pages/auth/components/updateProfileInfo/components/updatePassword/updatePassword.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-password-form",
            "styleUrls": [
                "./updatePassword.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./updatePassword.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrentUserInterface | null",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "currentUser$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CurrentUserInterface | null>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmitpassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy } from '@angular/core'\r\nimport { FormBuilder, FormGroup } from '@angular/forms'\r\nimport { Store } from '@ngrx/store'\r\nimport { Observable } from 'rxjs'\r\nimport { AuthUpdateInterface } from 'src/app/pages/auth/interfaces/authUpdate.interface'\r\n\r\nimport {\r\n  updateCurrentUserAction,\r\n  //updatePasswordAction,\r\n} from 'src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions'\r\n\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\n\r\n@Component({\r\n  selector: 'dz-password-form',\r\n  templateUrl: './updatePassword.component.html',\r\n  styleUrls: ['./updatePassword.component.sass'],\r\n})\r\nexport class UpdatePasswordComponent implements OnInit, OnDestroy {\r\n  form!: FormGroup\r\n  currentUser$!: Observable<CurrentUserInterface | null>\r\n  currentUser: CurrentUserInterface | null\r\n  constructor(private store: Store, private fb: FormBuilder) {\r\n    this.currentUser = null\r\n  }\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  initializeValues(): void {\r\n    this.form = this.fb.group({\r\n      newPassword: '',\r\n      confirmPassword: '',\r\n      oldPassword: '',\r\n    })\r\n  }\r\n\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {}\r\n\r\n  onSubmitpassword(): void {\r\n    const currentUserInput: AuthUpdateInterface = {\r\n      user: {\r\n        password: this.form.value,\r\n        email: undefined,\r\n        bio: undefined,\r\n        image: undefined,\r\n        userName: undefined,\r\n        firstName: undefined,\r\n        lastName: undefined,\r\n      },\r\n    }\r\n    this.store.dispatch(updateCurrentUserAction({ currentUserInput }))\r\n    console.log(currentUserInput)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./updatePassword.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!DOCTYPE html>\r\n<div *ngIf=\"currentUser\">\r\n  <form [formGroup]=\"form\" class=\"mb-2 text-xl text-slate-300 text-bold\">\r\n    <fieldset>\r\n      <div class=\"mb-6\">\r\n        <label class=\"block\"></label>\r\n        <fieldset class=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n            placeholder=\"newPassword\"\r\n            formControlName=\"newPassword\"\r\n          />\r\n        </fieldset>\r\n      </div>\r\n      <div class=\"mb-6\">\r\n        <label class=\"block\">\r\n          Description\r\n        </label>\r\n        <fieldset class=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n            placeholder=\"confirmPassword\"\r\n            formControlName=\"confirmPassword\"\r\n          ></textarea>\r\n        </fieldset>\r\n      </div>\r\n      <div class=\"mb-6\">\r\n        <label class=\"block\">\r\n          Description\r\n        </label>\r\n        <fieldset class=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n            placeholder=\"oldPassword\"\r\n            formControlName=\"oldPassword\"\r\n          ></textarea>\r\n        </fieldset>\r\n      </div>\r\n      <button (click)=\"onSubmitpassword()\">update username/email</button>\r\n    </fieldset>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "UpdateProfileComponent",
            "id": "component-UpdateProfileComponent-164332cbb8926cfbf21c0df9762551b0bfdedc541965562daf85dfdc9ae64830093e50f4b9e9d63ab09bc5ab3a1241676a96166d3233746a262f839e7d340bad",
            "file": "src/app/pages/auth/components/updateProfileInfo/updateProfile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-updateProfile",
            "styleUrls": [
                "./updateProfile.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./updateProfile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\r\nimport { FormBuilder } from '@angular/forms'\r\nimport { Router } from '@angular/router'\r\nimport { Store } from '@ngrx/store'\r\n\r\n@Component({\r\n  selector: 'dz-updateProfile',\r\n  templateUrl: './updateProfile.component.html',\r\n  styleUrls: ['./updateProfile.component.sass'],\r\n})\r\nexport class UpdateProfileComponent implements OnInit {\r\n  constructor() {}\r\n  ngOnDestroy(): void {}\r\n\r\n  ngOnInit(): void {\r\n    this.initializeListeners()\r\n    this.initializeValues()\r\n  }\r\n  initializeValues(): void {}\r\n  initializeForm(): void {}\r\n  initializeListeners(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./updateProfile.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n  <dz-email-form></dz-email-form>\r\n  <dz-username-form></dz-username-form>\r\n  <dz-bio-form></dz-bio-form>\r\n  <dz-password-form></dz-password-form>\r\n  <dz-name-first-form></dz-name-first-form>\r\n  <dz-name-last-form></dz-name-last-form>\r\n  <dz-profile-image-form></dz-profile-image-form>\r\n</div>\r\n"
        },
        {
            "name": "UpdateUsernameComponent",
            "id": "component-UpdateUsernameComponent-237ec5abf3a2df8a6b7086a48c83346b46df7faaa089518f4a4dfa683025ab58917fed17d649bd3c8e4f5b8c717ea8a3422168d5ea047a7b5a77d4e2b9098aff",
            "file": "src/app/pages/auth/components/updateProfileInfo/components/updateUsername/updateUsername.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-username-form",
            "styleUrls": [
                "./updateUsername.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./updateUsername.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrentUserInterface",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "currentUser$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CurrentUserInterface | null>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "edit",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core'\r\nimport { FormBuilder, FormGroup } from '@angular/forms'\r\nimport { Actions, ofType } from '@ngrx/effects'\r\nimport { select, Store } from '@ngrx/store'\r\nimport { Observable, filter, tap, Subject, takeUntil } from 'rxjs'\r\nimport { AuthUpdateInterface } from 'src/app/pages/auth/interfaces/authUpdate.interface'\r\nimport {\r\n  updateCurrentUserAction,\r\n  updateCurrentUserFailureAction,\r\n  updateCurrentUserSuccessAction,\r\n} from 'src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions'\r\nimport { currentUserSelector } from 'src/app/pages/auth/store/selectors/auth.selectors'\r\n\r\nimport { ArticleBlockInterface } from 'src/app/shared/interfaces/articleBlock.interface'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\n\r\n@Component({\r\n  selector: 'dz-username-form',\r\n  templateUrl: './updateUsername.component.html',\r\n  styleUrls: ['./updateUsername.component.sass'],\r\n})\r\nexport class UpdateUsernameComponent implements OnInit, OnDestroy {\r\n  form!: FormGroup\r\n\r\n  currentUser$!: Observable<CurrentUserInterface | null>\r\n  currentUser!: CurrentUserInterface\r\n  edit: boolean = false\r\n  destroyed$ = new Subject<boolean>()\r\n  error: string | undefined\r\n  constructor(\r\n    private store: Store,\r\n    private fb: FormBuilder,\r\n    updates$: Actions,\r\n  ) {\r\n    this.error = undefined\r\n    updates$\r\n      .pipe(ofType(updateCurrentUserSuccessAction), takeUntil(this.destroyed$))\r\n      .subscribe(() => {\r\n        this.edit = !this.edit\r\n      })\r\n    updates$\r\n      .pipe(ofType(updateCurrentUserFailureAction), takeUntil(this.destroyed$))\r\n      .subscribe((error) => {\r\n        //this.error = error.errors.errors\r\n      })\r\n  }\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n  }\r\n\r\n  initializeValues(): void {\r\n    this.form = this.fb.group({\r\n      newUserName: '',\r\n    })\r\n    this.store\r\n      .select(currentUserSelector)\r\n      .pipe(filter((x) => x != null))\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.currentUser = data\r\n          this.fetchData()\r\n        }\r\n      })\r\n  }\r\n  initializeListeners(): void {}\r\n\r\n  fetchData(): void {\r\n    if (this.currentUser)\r\n      this.form = this.fb.group({\r\n        newUserName: this.currentUser.currentUser.userName,\r\n      })\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const currentUserInput: AuthUpdateInterface = {\r\n      user: {\r\n        password: undefined,\r\n        email: undefined,\r\n        bio: undefined,\r\n        image: undefined,\r\n        userName: this.form.value,\r\n        firstName: undefined,\r\n        lastName: undefined,\r\n      },\r\n    }\r\n    this.store.dispatch(updateCurrentUserAction({ currentUserInput }))\r\n  }\r\n  onEdit(): void {\r\n    this.error = undefined\r\n    if (this.currentUser)\r\n      this.form = this.fb.group({\r\n        newUserName: this.currentUser.currentUser.userName,\r\n      })\r\n    this.edit = !this.edit\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next(true)\r\n    this.destroyed$.complete()\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./updateUsername.component.sass"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "updates$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "updates$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!-- <!DOCTYPE html>\r\n<div>\r\n  <form\r\n    [formGroup]=\"updateUserNameform\"\r\n    class=\"mb-2 text-xl text-slate-300 text-bold\"\r\n  >\r\n    <fieldset>\r\n      <div class=\"mb-6\">\r\n        <label class=\"block\">\r\n          username\r\n        </label>\r\n        <fieldset class=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n            placeholder=\"username\"\r\n            formControlName=\"newUserName\"\r\n          ></textarea>\r\n        </fieldset>\r\n      </div>\r\n      <button (click)=\"onSubmitEmailUserName()\">update username</button>\r\n    </fieldset>\r\n  </form>\r\n</div> -->\r\n<!DOCTYPE html>\r\n<div *ngIf=\"currentUser\">\r\n  <form [formGroup]=\"form\" class=\"mb-2 text-xl text-slate-300 text-bold\">\r\n    <fieldset class=\"flex\">\r\n      <div class=\"mb-6\">\r\n        <label *ngIf=\"error\" class=\"text-red-600\">{{ error }}</label>\r\n        <label class=\"block\" *ngIf=\"!edit\">\r\n          {{ currentUser.currentUser.userName }}\r\n        </label>\r\n        <fieldset class=\"form-group\" *ngIf=\"edit\">\r\n          <input\r\n            type=\"text\"\r\n            class=\"w-full px-3 py-2 placeholder-gray-300 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-indigo-100 focus:border-indigo-300\"\r\n            placeholder=\"title\"\r\n            formControlName=\"newUserName\"\r\n          />\r\n        </fieldset>\r\n      </div>\r\n      <button (click)=\"onEdit()\">\r\n        <p *ngIf=\"edit\">cancel</p>\r\n        <p *ngIf=\"!edit\">edit</p>\r\n      </button>\r\n      <button (click)=\"onSubmit()\" *ngIf=\"edit\">update</button>\r\n    </fieldset>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "UserProfileComponent",
            "id": "component-UserProfileComponent-8d1930140598e860df3a5b7931c89313eb8870e95f0831280eca97d5efe04139eb05393f376ec25ba3e04507c8700d5ad0f357f501920bebcd7016dccf5ccf5f",
            "file": "src/app/pages/userProfile/components/userProfile/userProfile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dz-user-profile",
            "styleUrls": [
                "./userProfile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./userProfile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "error$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | null>",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "isCurrentUserProfile$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "isLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "slug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "userProfile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserProfileInterface",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "userProfileSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchUserProfile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core'\r\n\r\nimport { Observable, Subscription, combineLatest } from 'rxjs'\r\nimport { Store, select } from '@ngrx/store'\r\nimport { getUserProfileAction } from '../../store/actions/getUserProfile.actions'\r\nimport { ActivatedRoute, Router, Params } from '@angular/router'\r\n\r\nimport { map, filter } from 'rxjs/operators'\r\nimport { UserProfileInterface } from '../../interfaces/userProfile.interface'\r\nimport {\r\n  errorSelector,\r\n  isLoadingSelector,\r\n  userProfileSelector,\r\n} from '../../store/selectors/userProfile.selectors'\r\nimport { currentUserSelector } from 'src/app/pages/auth/store/selectors/auth.selectors'\r\nimport { CurrentUserInterface } from 'src/app/shared/interfaces/currentUser.interface'\r\n\r\n@Component({\r\n  selector: 'dz-user-profile',\r\n  templateUrl: './userProfile.component.html',\r\n  styleUrls: ['./userProfile.component.scss'],\r\n})\r\nexport class UserProfileComponent implements OnInit, OnDestroy {\r\n  userProfile!: UserProfileInterface\r\n  isLoading$!: Observable<boolean>\r\n  error$!: Observable<string | null>\r\n  userProfileSubscription!: Subscription\r\n  slug: string\r\n  isCurrentUserProfile$!: Observable<boolean>\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n  ) {\r\n    this.slug = ''\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.userProfileSubscription.unsubscribe()\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeValues()\r\n    this.initializeListeners()\r\n  }\r\n  initializeValues(): void {\r\n    this.slug = this.route.snapshot.paramMap.get('user') || ''\r\n    console.log(this.slug)\r\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector))\r\n    this.error$ = this.store.pipe(select(errorSelector))\r\n    this.isCurrentUserProfile$ = combineLatest(\r\n      this.store.pipe(select(currentUserSelector), filter(Boolean)),\r\n      this.store.pipe(select(userProfileSelector), filter(Boolean)),\r\n    ).pipe(\r\n      map(\r\n        ([currentUser, userProfile]: [\r\n          CurrentUserInterface,\r\n          UserProfileInterface,\r\n        ]) => {\r\n          return currentUser.currentUser.userName === userProfile.username\r\n        },\r\n      ),\r\n    )\r\n  }\r\n\r\n  initializeListeners(): void {\r\n    this.userProfileSubscription = this.store\r\n      .pipe(select(userProfileSelector))\r\n      .subscribe((userProfile) => {\r\n        if ((this, userProfile)) this.userProfile = userProfile\r\n      })\r\n    console.log(this.slug)\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.slug = params['user']\r\n      this.fetchUserProfile()\r\n    })\r\n  }\r\n\r\n  fetchUserProfile(): void {\r\n    this.store.dispatch(getUserProfileAction({ slug: this.slug }))\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./userProfile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"profile-page\" *ngIf=\"userProfile\">\r\n  <div class=\"user-info\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-md-10 offset-md-1\">\r\n          <img class=\"user-img\" [src]=\"userProfile.image\" />\r\n          <div>\r\n            <h4>{{ userProfile.username }}</h4>\r\n            <input type=\"text\" />\r\n          </div>\r\n\r\n          <p>{{ userProfile.bio }}</p>\r\n          <div>\r\n            <a\r\n              *ngIf=\"isCurrentUserProfile$ | async\"\r\n              class=\"btn btn-sm btn-outline-secondary action-btn\"\r\n              [routerLink]=\"['/settings']\"\r\n            >\r\n              Edit Profile Settings\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-12 col-md-10 offset-md-1\">\r\n        <div class=\"articles-toggle\">\r\n          <!-- <ul class=\"nav nav-pills outline-active\">\r\n            <li class=\"nav-item\">\r\n               We need this hack because angular doesnt understand route change\r\n               https://github.com/angular/angular/issues/18469\r\n              <a\r\n                [routerLink]=\"['/profiles', userProfile.username]\"\r\n                class=\"nav-link\"\r\n                routerLinkActive=\"active\"\r\n                [routerLinkActiveOptions]=\"{\r\n                  exact: true\r\n                }\"\r\n              >\r\n                My Posts\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a\r\n                [routerLink]=\"['/profiles', userProfile.username, 'favorites']\"\r\n                class=\"nav-link\"\r\n                routerLinkActive=\"active\"\r\n                [routerLinkActiveOptions]=\"{\r\n                  exact: true\r\n                }\"\r\n              >\r\n                Favorites Posts\r\n              </a>\r\n            </li>\r\n          </ul> -->\r\n        </div>\r\n        <dz-favorited-feed></dz-favorited-feed>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-5eda499a2853e7cffce25f75c3754c8f40171b8dcc6b79010311051af71d112170a192412e2e95a1be5914f994330a09e86bab923b5e71415100c06844f1379e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\n\r\nimport { AppRoutingModule } from './app-routing.module'\r\nimport { AppComponent } from './app.component'\r\nimport { StoreModule } from '@ngrx/store'\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools'\r\nimport { environment } from '../environments/environment'\r\nimport { EffectsModule } from '@ngrx/effects'\r\nimport { StoreRouterConnectingModule } from '@ngrx/router-store'\r\n\r\nimport { AuthModule } from './pages/auth/auth.module'\r\nimport { PersistanceService } from './shared/services/persistance.service'\r\nimport {\r\n  HttpClientModule,\r\n  HttpClientXsrfModule,\r\n  HTTP_INTERCEPTORS,\r\n} from '@angular/common/http'\r\n\r\nimport { ArticleModule } from './pages/article/article.module'\r\nimport { CreateArticlesModule } from './pages/createArticle/createArticles.module'\r\nimport { AuthInterceptor } from './shared/services/auth.interceptor.service'\r\nimport { EditArticlesModule } from './pages/editArticle/editArticles.module'\r\nimport { GlobalFeedModule } from './pages/articleFeed/globalFeed.module'\r\nimport { ArticleTagFeedModule } from './pages/articleTagFeed/articleTagFeed.module'\r\nimport { UserProfileModule } from './pages/userProfile/userProfile.module'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport { MaterialModule } from './shared/modules/material/material.module'\r\nimport { TestNavComponentModule } from './shared/modules/header/tests-nav.module'\r\nimport { FooterComponentModule } from './shared/modules/footer/footer.module'\r\nimport { HighlightDirective } from './pages/auth/components/registation-component/focus.directive'\r\nimport { DateAgoPipe } from './shared/pipes/date-ago.pipe'\r\nimport { LimitPipe } from './shared/pipes/textLimit.pipe'\r\nimport { NavigationModule } from './shared/modules/tests-nav/navigation.module'\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    NavigationModule,\r\n    HttpClientModule,\r\n    HttpClientXsrfModule.withOptions({\r\n      cookieName: 'csrftoken',\r\n      headerName: 'X-CSRFTOKEN',\r\n    }),\r\n    StoreModule.forRoot({}, {}),\r\n    MaterialModule,\r\n    StoreDevtoolsModule.instrument({\r\n      maxAge: 25,\r\n      logOnly: environment.production,\r\n    }),\r\n\r\n    FooterComponentModule,\r\n    EffectsModule.forRoot([]),\r\n\r\n    StoreRouterConnectingModule.forRoot(),\r\n\r\n    AuthModule,\r\n    GlobalFeedModule,\r\n    UserProfileModule,\r\n    ArticleTagFeedModule,\r\n    CreateArticlesModule,\r\n    ArticleModule,\r\n    EditArticlesModule,\r\n\r\n    //remove afer testing\r\n    TestNavComponentModule,\r\n\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [\r\n    PersistanceService,\r\n\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthInterceptor"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "ArticleModule"
                        },
                        {
                            "name": "ArticleTagFeedModule"
                        },
                        {
                            "name": "AuthModule"
                        },
                        {
                            "name": "CreateArticlesModule"
                        },
                        {
                            "name": "EditArticlesModule"
                        },
                        {
                            "name": "GlobalFeedModule"
                        },
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "NavigationModule"
                        },
                        {
                            "name": "UserProfileModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-429e23013814e128ce8133c55cf2fb1b402ebc909f58142dfdbde017850fbf5423731443872126c608bb962bae745b4f6f813a83cc50d5c40e807065e3a187d9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { RouterModule, Routes } from '@angular/router'\r\n\r\nconst routes: Routes = [{ path: '**', redirectTo: '/' }]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ArticleContentBlockModule",
            "id": "module-ArticleContentBlockModule-495d8ef53f194458d019d49bde1cf01080641061377509be6ebe852140482956f05be8db9a48296a5376c18c240cdc15156a028e293508a041156610fe1688a7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/articleContentBlock/articleContentBlock.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\n\r\nimport { NgxImageCompressService } from 'ngx-image-compress'\r\n\r\n//import { ImageFormComponent } from './components/image-form/image-form.component'\r\nimport { TitleFormType001Component } from './components/titles/type001/form/titleFormType001.component'\r\nimport { FormImageType001Component } from './components/images/type001/form/formImageType001.component'\r\nimport { TitleType001Component } from './components/titles/type001/display/titleType001.component'\r\nimport { ImageType001Component } from './components/images/type001/display/imageType001.component'\r\nimport { MaterialModule } from '../material/material.module'\r\n\r\nimport { BlockTypeMenuComponent } from './components/block-type-menu/displayType001/blockTypeMenu.component'\r\n\r\nimport { BodyFormType001Component } from './components/bodys/type001/form/bodyFormType001.component'\r\nimport { BodyType001Component } from './components/bodys/type001/display/articleDisplayType005.component'\r\nimport { ImageImageType001Component } from './components/imageImage/type001/display/imageImageType001.component'\r\nimport { FormImageImageType001Component } from './components/imageImage/type001/form/formImageImageType001.component'\r\nimport { ImageTextType001Component } from './components/image-text/type001/display/imageTextType001.component'\r\nimport { FormImageTextType001Component } from './components/image-text/type001/form/formImageTextType001.component'\r\nimport { TextImageType001Component } from './components/text-image/type001/display/textImageType001.component'\r\nimport { FormTextImageType001Component } from './components/text-image/type001/form/formTextImageType001.component'\r\nimport { ImageUploaderModule } from '../imageUploader/imageUploader.module'\r\n@NgModule({\r\n  declarations: [\r\n    BlockTypeMenuComponent,\r\n    //ImageFormComponent,\r\n\r\n    TitleType001Component,\r\n    TitleFormType001Component,\r\n\r\n    ImageType001Component,\r\n    FormImageType001Component,\r\n\r\n    ImageImageType001Component,\r\n    FormImageImageType001Component,\r\n\r\n    BodyType001Component,\r\n    BodyFormType001Component,\r\n\r\n    ImageTextType001Component,\r\n    FormImageTextType001Component,\r\n\r\n    TextImageType001Component,\r\n    FormTextImageType001Component,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    ImageUploaderModule,\r\n  ],\r\n  exports: [\r\n    // ImageFormComponent,\r\n    BlockTypeMenuComponent,\r\n\r\n    TitleType001Component,\r\n    TitleFormType001Component,\r\n\r\n    ImageType001Component,\r\n    FormImageType001Component,\r\n\r\n    ImageImageType001Component,\r\n    FormImageImageType001Component,\r\n\r\n    BodyType001Component,\r\n    BodyFormType001Component,\r\n\r\n    ImageTextType001Component,\r\n    FormImageTextType001Component,\r\n\r\n    TextImageType001Component,\r\n    FormTextImageType001Component,\r\n  ],\r\n  providers: [NgxImageCompressService],\r\n})\r\nexport class ArticleContentBlockModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BlockTypeMenuComponent"
                        },
                        {
                            "name": "BodyFormType001Component"
                        },
                        {
                            "name": "BodyType001Component"
                        },
                        {
                            "name": "FormImageImageType001Component"
                        },
                        {
                            "name": "FormImageTextType001Component"
                        },
                        {
                            "name": "FormImageType001Component"
                        },
                        {
                            "name": "FormTextImageType001Component"
                        },
                        {
                            "name": "ImageImageType001Component"
                        },
                        {
                            "name": "ImageTextType001Component"
                        },
                        {
                            "name": "ImageType001Component"
                        },
                        {
                            "name": "TextImageType001Component"
                        },
                        {
                            "name": "TitleFormType001Component"
                        },
                        {
                            "name": "TitleType001Component"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ImageUploaderModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BlockTypeMenuComponent"
                        },
                        {
                            "name": "BodyFormType001Component"
                        },
                        {
                            "name": "BodyType001Component"
                        },
                        {
                            "name": "FormImageImageType001Component"
                        },
                        {
                            "name": "FormImageTextType001Component"
                        },
                        {
                            "name": "FormImageType001Component"
                        },
                        {
                            "name": "FormTextImageType001Component"
                        },
                        {
                            "name": "ImageImageType001Component"
                        },
                        {
                            "name": "ImageTextType001Component"
                        },
                        {
                            "name": "ImageType001Component"
                        },
                        {
                            "name": "TextImageType001Component"
                        },
                        {
                            "name": "TitleFormType001Component"
                        },
                        {
                            "name": "TitleType001Component"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ArticleFormsModule",
            "id": "module-ArticleFormsModule-1eb790702324f5f660b9ef40d1a0b84ae91122558d7efdfb33cc620d0c7f37793ae91895e4311d22c786952f83ca56aaa4c57c01ac9bc0e1115e2a10c08637aa",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/articleForms/articleForms.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\nimport { ArticleFormComponent } from './components/articleForms/article-form.component'\r\n\r\nimport { NgxImageCompressService } from 'ngx-image-compress'\r\nimport { ArticleContentBlockModule } from '../articleContentBlock/articleContentBlock.module'\r\nimport { MaterialModule } from '../material/material.module'\r\nimport { ArticlePreviewModule } from '../articlePreview/articleForms.module'\r\nimport { ArticleFormInfoComponent } from './components/articleFormInfo/articleFormInfo.component'\r\nimport { ArticleContentComponent } from './components/articleContent/articleContent.component'\r\nimport { ImageUploaderModule } from '../imageUploader/imageUploader.module'\r\nimport { TagSelectorComponent } from './components/tagSelector/tagSelector.component'\r\nimport { GetAvailableTagsService } from './services/tagSelector.service'\r\nimport { EffectsModule } from '@ngrx/effects'\r\nimport { GetTagEffect } from './components/store/effects/getTag.effects'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ArticleFormComponent,\r\n    ArticleFormInfoComponent,\r\n    ArticleContentComponent,\r\n    TagSelectorComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    ImageUploaderModule,\r\n    ArticleContentBlockModule,\r\n    MaterialModule,\r\n    ArticlePreviewModule,\r\n    EffectsModule.forFeature([GetTagEffect]),\r\n  ],\r\n  exports: [ArticleFormComponent],\r\n  providers: [NgxImageCompressService, GetAvailableTagsService],\r\n})\r\nexport class ArticleFormsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "GetAvailableTagsService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ArticleContentComponent"
                        },
                        {
                            "name": "ArticleFormComponent"
                        },
                        {
                            "name": "ArticleFormInfoComponent"
                        },
                        {
                            "name": "TagSelectorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ArticleContentBlockModule"
                        },
                        {
                            "name": "ArticlePreviewModule"
                        },
                        {
                            "name": "ImageUploaderModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ArticleFormComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ArticleModule",
            "id": "module-ArticleModule-92622ab949b6afd2b86a108170295024bc08ae6720bbd5a3f58c39be9132c3a605b8f7b65746a802907175cdf42faf968f6a448348c0f7d009bc6d3e0bf5ac0e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/article/article.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common'\r\nimport { NgModule } from '@angular/core'\r\nimport { RouterModule } from '@angular/router'\r\nimport { EffectsModule } from '@ngrx/effects'\r\nimport { StoreModule } from '@ngrx/store'\r\n\r\nimport { CommentModule } from 'src/app/shared/modules/articleComments/articleComment.module'\r\nimport { ArticleContentBlockModule } from 'src/app/shared/modules/articleContentBlock/articleContentBlock.module'\r\n\r\nimport { ArticleService } from 'src/app/shared/services/article.service'\r\nimport { ArticleComponent } from './components/article/article.component'\r\n\r\nimport { DeleteArticleService } from './services/article.service'\r\nimport { DeleteArticleEffect } from './store/effects/deleteArticle.effects'\r\nimport { FavoriteArticleEffect } from './store/effects/favorite.Article.effects'\r\nimport { GetArticleEffect } from './store/effects/getArticle.effects'\r\nimport { ArticleReducers } from './store/reducer/article.reducer'\r\n\r\nconst routes = [\r\n  {\r\n    path: 'article/:title',\r\n    component: ArticleComponent,\r\n  },\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    StoreModule.forFeature('article', ArticleReducers),\r\n    EffectsModule.forFeature([\r\n      GetArticleEffect,\r\n      DeleteArticleEffect,\r\n      FavoriteArticleEffect,\r\n    ]),\r\n    //\r\n    //   TagListModule,\r\n    //   LoadingModule,\r\n    //   ErrorMessageModule,\r\n    //   TagListModule,\r\n    ArticleContentBlockModule,\r\n    CommentModule,\r\n  ],\r\n  declarations: [ArticleComponent],\r\n  providers: [ArticleService, DeleteArticleService],\r\n})\r\nexport class ArticleModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "ArticleService"
                        },
                        {
                            "name": "DeleteArticleService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ArticleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ArticleContentBlockModule"
                        },
                        {
                            "name": "CommentModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ArticlePreviewModule",
            "id": "module-ArticlePreviewModule-0c350094ebde4c1d8692add65ffa35aaa8d51a81f0c5f02b0abbbe611542909f6f70f42d9ce8ffd1264c7cad9be345be7a987c6092244a7605d1048b1f08b9a7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/articlePreview/articleForms.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common'\r\nimport { NgModule } from '@angular/core'\r\nimport { RouterModule } from '@angular/router'\r\n\r\nimport { ArticleContentBlockModule } from 'src/app/shared/modules/articleContentBlock/articleContentBlock.module'\r\n\r\nimport { ArticlePreviewComponent } from './components/articlePreview/article.component'\r\n\r\nconst routes = [{ path: 'test', component: ArticlePreviewComponent }]\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n\r\n    //\r\n    //   TagListModule,\r\n    //   LoadingModule,\r\n    //   ErrorMessageModule,\r\n    //   TagListModule,\r\n    ArticleContentBlockModule,\r\n  ],\r\n  declarations: [ArticlePreviewComponent],\r\n  exports: [ArticlePreviewComponent],\r\n  providers: [],\r\n})\r\nexport class ArticlePreviewModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ArticlePreviewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ArticleContentBlockModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ArticlePreviewComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ArticleTagFeedModule",
            "id": "module-ArticleTagFeedModule-33ece823c3b357b2e423b23f96a366d2d85a6603363449bb4ee5db2b337a00cc84e78e796babd19eb2dd7b2d1db3699929ee7d3db6c1c7a7717721a568d2e970",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/articleTagFeed/articleTagFeed.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { TagFeedComponent } from './components/tagFeed/tagFeed.component'\r\nimport { RouterModule } from '@angular/router'\r\nimport { FeedModule } from 'src/app/shared/modules/feed/feed.module'\r\nconst routes = [\r\n  {\r\n    path: 'feed/tag/:slug',\r\n    component: TagFeedComponent,\r\n  },\r\n]\r\n@NgModule({\r\n  declarations: [TagFeedComponent],\r\n  imports: [CommonModule, RouterModule.forChild(routes), FeedModule],\r\n  exports: [],\r\n  providers: [],\r\n})\r\nexport class ArticleTagFeedModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TagFeedComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FeedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-998eef5c9e19c7d78681005a0648bfd448b75cd01f679aab0ae74c3d7f61d333ceb78a488be323f304e54024bd7e2ae24d1b73371c9e334f9ffe2568bbfc6d44",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { LoginComponent } from './components/login-component/login.component'\r\nimport { RegisterComponent } from './components/registation-component/register.component'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { RouterModule, Routes } from '@angular/router'\r\nimport { EffectsModule } from '@ngrx/effects'\r\nimport { GetCurrentUserEffect } from './store/effects/auth.getCurrentUser.effects'\r\nimport { LoginEffect } from './store/effects/auth.login.effects'\r\nimport { LogoutEffect } from './store/effects/auth.logout.effects'\r\nimport { RegisterEffect } from './store/effects/auth.register.effects'\r\nimport { UpdateCurrentUserEffect } from './store/effects/auth.updateCurrentUser.effects'\r\nimport { StoreModule } from '@ngrx/store'\r\nimport { authReducer } from './store/reducer/auth.reducer'\r\nimport { AuthService } from './services/auth.service'\r\nimport { EmailValidationComponent } from './components/emailValidation-component/emailValidation.component'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport { UpdateProfileComponent } from './components/updateProfileInfo/updateProfile.component'\r\nimport { UpdateUsernameComponent } from './components/updateProfileInfo/components/updateUsername/updateUsername.component'\r\nimport { UpdatePasswordComponent } from './components/updateProfileInfo/components/updatePassword/updatePassword.component'\r\nimport { UpdateEmailComponent } from './components/updateProfileInfo/components/updateEmail/updateEmail.component'\r\nimport { UpdateBioComponent } from './components/updateProfileInfo/components/updateBio/updateBio.component'\r\nimport { UpdateImageComponent } from './components/updateProfileInfo/components/updateImage/updateImage.component'\r\nimport { ArticleContentBlockModule } from 'src/app/shared/modules/articleContentBlock/articleContentBlock.module'\r\nimport { UpdateFirstNameComponent } from './components/updateProfileInfo/components/updateFirstName/updateFirstName.component'\r\nimport { UpdateLastNameComponent } from './components/updateProfileInfo/components/updateLastName/updateLastName.component'\r\nimport { ImageUploaderModule } from 'src/app/shared/modules/imageUploader/imageUploader.module'\r\nimport { SpinnerModule } from 'src/app/shared/modules/spinners/spiners.module'\r\nimport { MaterialModule } from 'src/app/shared/modules/material/material.module'\r\nimport { BackendErrorMessagesModule } from 'src/app/shared/modules/backendErrorMessages/components/backendErrorMessages.module'\r\nimport { HighlightDirective } from './components/registation-component/focus.directive'\r\n\r\n//import { UpdateCurrentUserEffect2 } from './store/effects/auth.updateEmailUsername.effects'\r\nconst routes: Routes = [\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent,\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'emailvalidation',\r\n    component: EmailValidationComponent,\r\n  },\r\n  {\r\n    path: 'profileupdate',\r\n    component: UpdateProfileComponent,\r\n  },\r\n]\r\n@NgModule({\r\n  declarations: [\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    EmailValidationComponent,\r\n    UpdateProfileComponent,\r\n    UpdateUsernameComponent,\r\n    UpdatePasswordComponent,\r\n    UpdateEmailComponent,\r\n    UpdateBioComponent,\r\n    UpdateImageComponent,\r\n    UpdateFirstNameComponent,\r\n    UpdateLastNameComponent,\r\n    HighlightDirective,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ArticleContentBlockModule,\r\n    RouterModule.forChild(routes),\r\n    StoreModule.forFeature('auth', authReducer),\r\n    EffectsModule.forFeature([\r\n      RegisterEffect,\r\n      LoginEffect,\r\n      GetCurrentUserEffect,\r\n      UpdateCurrentUserEffect,\r\n      LogoutEffect,\r\n\r\n      UpdateCurrentUserEffect,\r\n    ]),\r\n    BackendErrorMessagesModule,\r\n    MaterialModule,\r\n    SpinnerModule,\r\n    ImageUploaderModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  exports: [LoginComponent],\r\n  providers: [AuthService],\r\n})\r\nexport class AuthModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "EmailValidationComponent"
                        },
                        {
                            "name": "HighlightDirective"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RegisterComponent"
                        },
                        {
                            "name": "UpdateBioComponent"
                        },
                        {
                            "name": "UpdateEmailComponent"
                        },
                        {
                            "name": "UpdateFirstNameComponent"
                        },
                        {
                            "name": "UpdateImageComponent"
                        },
                        {
                            "name": "UpdateLastNameComponent"
                        },
                        {
                            "name": "UpdatePasswordComponent"
                        },
                        {
                            "name": "UpdateProfileComponent"
                        },
                        {
                            "name": "UpdateUsernameComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ArticleContentBlockModule"
                        },
                        {
                            "name": "BackendErrorMessagesModule"
                        },
                        {
                            "name": "ImageUploaderModule"
                        },
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "SpinnerModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BackendErrorMessagesModule",
            "id": "module-BackendErrorMessagesModule-5b1cea587f851f1a43fd4e7b6661f58b1ef1abb2047218ec58874c8512cced15596ac8ce8f45c35c732f4303a0dfb720e4990d61f2ffa0c34b33d563711d7d60",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/backendErrorMessages/components/backendErrorMessages.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { BackendErrorMessagesComponent } from './backendErrorMessages/backendErrorMessages.component'\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BackendErrorMessagesComponent],\n  exports: [BackendErrorMessagesComponent],\n})\nexport class BackendErrorMessagesModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BackendErrorMessagesComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BackendErrorMessagesComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CardsModule",
            "id": "module-CardsModule-2df573b92650a355b4896b475408b81017bef79f50e9364ac34f5101fa3b80051fa9438609843d95e7bb6c720a1da94ba7d1e3955c4051770e139bb4b5015639",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/Cards/cards.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common'\r\nimport { NgModule } from '@angular/core'\r\nimport { RouterModule } from '@angular/router'\r\nimport { MaterialModule } from '../material/material.module'\r\nimport { LimitPipe } from '../../pipes/textLimit.pipe'\r\nimport { CardType001Component } from './components/cardType001/card.component'\r\nimport { CardType002Component } from './components/cardType002/card.component'\r\nimport { CardType003Component } from './components/cardType003/card.component'\r\nimport { CardType004Component } from './components/cardType004/card.component'\r\nimport { CardType005Component } from './components/cardType005/card.component'\r\nimport { CardType006Component } from './components/cardType006/card.component'\r\nimport { PipeModule } from '../../pipes/pipes.module'\r\nimport { CardType007Component } from './components/cardType007/card.component'\r\nimport { CardType008Component } from './components/cardType008/card.component'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CardType001Component,\r\n    CardType002Component,\r\n    CardType003Component,\r\n    CardType004Component,\r\n    CardType005Component,\r\n    CardType006Component,\r\n    CardType007Component,\r\n    CardType008Component,\r\n  ],\r\n  imports: [CommonModule, RouterModule, MaterialModule, PipeModule],\r\n  exports: [\r\n    CardType001Component,\r\n    CardType002Component,\r\n    CardType003Component,\r\n    CardType004Component,\r\n    CardType005Component,\r\n    CardType006Component,\r\n    CardType007Component,\r\n    CardType008Component,\r\n  ],\r\n})\r\nexport class CardsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardType001Component"
                        },
                        {
                            "name": "CardType002Component"
                        },
                        {
                            "name": "CardType003Component"
                        },
                        {
                            "name": "CardType004Component"
                        },
                        {
                            "name": "CardType005Component"
                        },
                        {
                            "name": "CardType006Component"
                        },
                        {
                            "name": "CardType007Component"
                        },
                        {
                            "name": "CardType008Component"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardType001Component"
                        },
                        {
                            "name": "CardType002Component"
                        },
                        {
                            "name": "CardType003Component"
                        },
                        {
                            "name": "CardType004Component"
                        },
                        {
                            "name": "CardType005Component"
                        },
                        {
                            "name": "CardType006Component"
                        },
                        {
                            "name": "CardType007Component"
                        },
                        {
                            "name": "CardType008Component"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CommentModule",
            "id": "module-CommentModule-eb54d19c8e033dfb4eb40a0e99c70661264d2e810df72893f960692f4cd6a7777d67520ac748230b7351f1fca48881bee8510a434351f923204bfca59c304e75",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/articleComments/articleComment.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common'\r\nimport { NgModule } from '@angular/core'\r\n\r\nimport { RouterModule } from '@angular/router'\r\nimport { EffectsModule } from '@ngrx/effects'\r\nimport { StoreModule } from '@ngrx/store'\r\nimport { FeedComponent } from '../feed/components/feed/feed.component'\r\nimport { FeedService } from '../feed/services/feed.service'\r\nimport { GetFeedEffect } from '../feed/store/effects/getFeed.effects'\r\nimport { CommentMainComponent } from './components/commentMain/commentMain.component'\r\nimport { CommentFormComponent } from './components/commentForm/form/commentForm.component'\r\nimport { CommentService } from './services/comment.service'\r\nimport { GetCommentEffect } from './store/effects/getComment.effects'\r\nimport { reducers } from './store/reducer/comment.reducer'\r\nimport { CommentComponent } from './components/comment/comment.component'\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\nimport { PostCommentEffect } from './store/effects/postComment.effects'\r\nimport { UpdateCommentEffect } from './store/effects/updateComment.effects'\r\nimport { DeleteCommentEffect } from './store/effects/deleteComment.effects'\r\nimport { DateAgoPipe } from '../../pipes/date-ago.pipe'\r\nimport { PipeModule } from '../../pipes/pipes.module'\r\n\r\n// import { AddToFavoriteModule } from '../addToFavorites/addToFavorites.module'\r\n// import { ErrorMessageModule } from '../errorMessage/errorMessage.module'\r\n// import { LoadingModule } from '../loading/loading.module'\r\n// import { PaginationModule } from '../pagination/pagination.module'\r\n// import { TagListModule } from '../tagList/tag.module'\r\n\r\n@NgModule({\r\n  declarations: [CommentMainComponent, CommentFormComponent, CommentComponent],\r\n  imports: [\r\n    CommonModule,\r\n    EffectsModule.forFeature([\r\n      GetCommentEffect,\r\n      PostCommentEffect,\r\n      UpdateCommentEffect,\r\n      DeleteCommentEffect,\r\n    ]),\r\n    StoreModule.forFeature('comment', reducers),\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    PipeModule,\r\n    // ErrorMessageModule,\r\n    // LoadingModule,\r\n\r\n    // TagListModule,\r\n    // AddToFavoriteModule,\r\n  ],\r\n  exports: [CommentMainComponent],\r\n  providers: [CommentService],\r\n})\r\nexport class CommentModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "CommentService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CommentComponent"
                        },
                        {
                            "name": "CommentFormComponent"
                        },
                        {
                            "name": "CommentMainComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CommentMainComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CreateArticlesModule",
            "id": "module-CreateArticlesModule-eb1ace3b284fdcb27813553b9d316175e6349dd7b54bb7f4aae2d570cd336c8da113494c63a9a5afa1652b40cf248721f2f0a68828cc5aae904bcea52abd69ef",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/createArticle/createArticles.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { RouterModule } from '@angular/router'\r\nimport { CreateArticleComponent } from './components/createArticle/createArticle.component'\r\nimport { ArticleFormsModule } from 'src/app/shared/modules/articleForms/articleForms.module'\r\nimport { createArticleReducers } from './store/reducer/createArticle.reducer'\r\nimport { StoreModule } from '@ngrx/store'\r\nimport { CreateArticleService } from './services/createArticle.service'\r\nimport { EffectsModule } from '@ngrx/effects'\r\nimport { CreateArticleEffect } from './store/effects/createArticle.effects'\r\nconst routes = [\r\n  {\r\n    path: 'article/new',\r\n    component: CreateArticleComponent,\r\n  },\r\n]\r\n@NgModule({\r\n  declarations: [CreateArticleComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    StoreModule.forFeature('createActicle', createArticleReducers),\r\n    EffectsModule.forFeature([CreateArticleEffect]),\r\n    ArticleFormsModule,\r\n  ],\r\n  exports: [],\r\n  providers: [CreateArticleService],\r\n})\r\nexport class CreateArticlesModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "CreateArticleService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CreateArticleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ArticleFormsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EditArticlesModule",
            "id": "module-EditArticlesModule-991592f07c88295f7f8c7956c06350f4709ba061bef9f2530d10bf3534fb64654ae5529c1358f6633f60d582f865d06d13a4ac0db48fc7561dcf5a07e78e71f3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/editArticle/editArticles.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { RouterModule } from '@angular/router'\r\n\r\nimport { ArticleFormsModule } from 'src/app/shared/modules/articleForms/articleForms.module'\r\n\r\nimport { StoreModule } from '@ngrx/store'\r\n\r\nimport { EffectsModule } from '@ngrx/effects'\r\nimport { EditArticleComponent } from './components/editArticle/editArticle.component'\r\nimport { EditArticleReducer } from './store/reducer/editArticle.reducer'\r\nimport { UpdateArticleEffect } from './store/effects/editArticle.effects'\r\nimport { EditArticleService } from './services/updateArticle.service'\r\n\r\nimport { ArticleService as SharedArticleService } from 'src/app/shared/services/article.service'\r\n\r\nimport { GetArticleEffect } from './store/effects/getArticle.effects'\r\n\r\nconst routes = [\r\n  {\r\n    path: 'article/:title/edit',\r\n    component: EditArticleComponent,\r\n  },\r\n]\r\n@NgModule({\r\n  declarations: [EditArticleComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    StoreModule.forFeature('editActicle', EditArticleReducer),\r\n    EffectsModule.forFeature([UpdateArticleEffect, GetArticleEffect]),\r\n    ArticleFormsModule,\r\n\r\n    //LoadingModule,\r\n  ],\r\n  exports: [],\r\n  providers: [EditArticleService, SharedArticleService],\r\n})\r\nexport class EditArticlesModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "EditArticleService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "EditArticleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ArticleFormsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FeedModule",
            "id": "module-FeedModule-d93f80158f67c80f5a12d367d2a58ec7ea70d8f851ff5a458fc68fa337d82081f674a01e731ca81ab84d2fc7cb2b1ad9b05f1c2d44a2956167c5d23a98001e75",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/feed/feed.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common'\r\nimport { NgModule } from '@angular/core'\r\n\r\nimport { RouterModule } from '@angular/router'\r\nimport { EffectsModule } from '@ngrx/effects'\r\nimport { StoreModule } from '@ngrx/store'\r\nimport { CardsModule } from '../Cards/cards.module'\r\nimport { PaginationModule } from '../pagination/pagination.module'\r\n\r\nimport { FeedComponent } from './components/feed/feed.component'\r\n\r\nimport { FeedService } from './services/feed.service'\r\nimport { GetFeedEffect } from './store/effects/getFeed.effects'\r\nimport { feedReducer } from './store/reducer/feed.reducer'\r\n\r\n@NgModule({\r\n  declarations: [FeedComponent],\r\n  imports: [\r\n    CommonModule,\r\n    EffectsModule.forFeature([GetFeedEffect]),\r\n    StoreModule.forFeature('feed', feedReducer),\r\n    RouterModule,\r\n    PaginationModule,\r\n    CardsModule,\r\n  ],\r\n  exports: [FeedComponent],\r\n  providers: [FeedService],\r\n})\r\nexport class FeedModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "FeedService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FeedComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CardsModule"
                        },
                        {
                            "name": "PaginationModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FeedComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FooterComponentModule",
            "id": "module-FooterComponentModule-a2e69dd57c63233edbac3609c41d4633b9c5af7d567d4113efee81542da7bbe2f2334641525eb62be603199e3c250ed7c43650124618f01a95ce862bf73c8683",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/footer/footer.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common'\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { NgModule } from '@angular/core'\r\nimport { RouterModule } from '@angular/router'\r\n//import { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\r\nimport { MaterialModule } from '../material/material.module'\r\nimport { FooterComponent } from './components/footer-Main/footer.component'\r\n\r\n@NgModule({\r\n  declarations: [FooterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    HttpClientModule,\r\n    MaterialModule,\r\n    // FontAwesomeModule,\r\n  ],\r\n  exports: [FooterComponent],\r\n  providers: [],\r\n})\r\nexport class FooterComponentModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FooterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FooterComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "GlobalFeedModule",
            "id": "module-GlobalFeedModule-2a01d67b2975d2beda54c123b71de53fcd47dba24142c5baa55abfcc10b4e20787e276acd4f488daafbb3856a629fd562b3c7323c5ce67730adbba0efd85b887",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/articleFeed/globalFeed.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common'\r\nimport { NgModule } from '@angular/core'\r\nimport { RouterModule } from '@angular/router'\r\n\r\nimport { FeedModule } from 'src/app/shared/modules/feed/feed.module'\r\n\r\nimport { GlobalFeedComponent } from './components/globalFeed/globalFeed.component'\r\n\r\nconst routes = [{ path: '', component: GlobalFeedComponent }]\r\n@NgModule({\r\n  declarations: [GlobalFeedComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FeedModule,\r\n    // BannerModule,\r\n    // PopularTagsModule,\r\n    // FeedTogglerModule,\r\n  ],\r\n  exports: [],\r\n  providers: [],\r\n})\r\nexport class GlobalFeedModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "GlobalFeedComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FeedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "homeModule",
            "id": "module-homeModule-45d2ecf3132e7c96a939a49f9c8de16f3d2a69a5e6c65b03b56a0aaa5e879dc688880a7ee06fcf36c6cf3830734b2f622d845795f44351c155282d1b655c6db6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/home/home.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { HomeComponent } from './components/home/home.component'\r\n\r\nconst route = [{ path: '', component: HomeComponent }]\r\n@NgModule({\r\n  declarations: [HomeComponent],\r\n  imports: [CommonModule],\r\n  exports: [],\r\n  providers: [],\r\n})\r\nexport class homeModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ImageUploaderModule",
            "id": "module-ImageUploaderModule-a3ab2106a80948756342b85fcbfed4aa69bed8e89d7f424c5695065854ed3e111a8ebdd81b3b64424cb4753a191ee85725187da0626e5baf9923192aa298295b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/imageUploader/imageUploader.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common'\r\nimport { NgModule } from '@angular/core'\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\nimport { NgxImageCompressService } from 'ngx-image-compress'\r\nimport { MaterialModule } from '../material/material.module'\r\nimport { ArticleImageFormComponent } from './components/articleImage/article-image-form.component'\r\nimport { ContentImageFormComponent } from './components/contentImage/content-image-form.component'\r\nimport { ProfileImageFormComponent } from './components/profileImage/profile-image-form.component'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ArticleImageFormComponent,\r\n    ProfileImageFormComponent,\r\n    ContentImageFormComponent,\r\n  ],\r\n  imports: [CommonModule, ReactiveFormsModule, MaterialModule],\r\n  exports: [\r\n    ArticleImageFormComponent,\r\n    ProfileImageFormComponent,\r\n    ContentImageFormComponent,\r\n  ],\r\n  providers: [NgxImageCompressService],\r\n})\r\nexport class ImageUploaderModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ArticleImageFormComponent"
                        },
                        {
                            "name": "ContentImageFormComponent"
                        },
                        {
                            "name": "ProfileImageFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ArticleImageFormComponent"
                        },
                        {
                            "name": "ContentImageFormComponent"
                        },
                        {
                            "name": "ProfileImageFormComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-a547cb6177605f0cd3d773108e348fb9257872268d6b1ea2aeaabfa9c3e8f5d96e8822c483f10c82241d91ad7b297738b1cab323801a08b062a04fa31fe9d253",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/material/material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { MatIconModule } from '@angular/material/icon'\r\n\r\nconst materialModules = [MatIconModule]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule, ...materialModules],\r\n  exports: [...materialModules],\r\n})\r\nexport class MaterialModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NavigationModule",
            "id": "module-NavigationModule-6340c1aed1b6a743eda0a04bad46510ac28ceb199edf698711d69970de0972c8b0718323bd1cd325cc47f9d60662ea9a6f3ff52caa52bbb542f301f59a4a66c9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/tests-nav/navigation.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { SideNav001Component } from './components/sideNav001/sideNav.component'\r\n\r\n@NgModule({\r\n  declarations: [SideNav001Component],\r\n  imports: [CommonModule],\r\n  exports: [],\r\n  providers: [SideNav001Component],\r\n})\r\nexport class NavigationModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SideNav001Component"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PaginationModule",
            "id": "module-PaginationModule-92ee3f5fa5162d246e231ba1e37b3e7066b0eabdbb145330f025e45447e9182c2756dfe4105f2d992da1fdc7cde28466563f5e379acc99a73651ef7f12bfac7e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/pagination/pagination.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common'\r\nimport { NgModule } from '@angular/core'\r\nimport { MatPaginatorModule } from '@angular/material/paginator'\r\nimport { RouterModule } from '@angular/router'\r\nimport { UtilsService } from '../../services/utils.service'\r\n\r\nimport { PaginationComponent } from './filler/components/pagination/pagination.component'\r\n\r\n@NgModule({\r\n  declarations: [PaginationComponent],\r\n  exports: [PaginationComponent],\r\n  imports: [CommonModule, RouterModule, MatPaginatorModule],\r\n  providers: [UtilsService],\r\n})\r\nexport class PaginationModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "UtilsService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PaginationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PaginationComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PipeModule",
            "id": "module-PipeModule-a41317b62cedfb95fff6b68dc4beec8dc49aff78b1244523db9155b8ff0c3175888ab45da80780aac4f5a47a62fed16e0043f94e4fea4e0196fb2c3840b1b991",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/pipes/pipes.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { DateAgoPipe } from './date-ago.pipe'\r\nimport { LimitPipe } from './textLimit.pipe'\r\n\r\n@NgModule({\r\n  declarations: [DateAgoPipe, LimitPipe],\r\n  imports: [CommonModule],\r\n  exports: [DateAgoPipe, LimitPipe],\r\n  providers: [],\r\n})\r\nexport class PipeModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DateAgoPipe"
                        },
                        {
                            "name": "LimitPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DateAgoPipe"
                        },
                        {
                            "name": "LimitPipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SettingsModule",
            "id": "module-SettingsModule-c4a454867cfbacf3807ea056b065ae480d1ca2c82fd74df7ae192c1e4a94dfde62ba7b49d09bd6ae2afc29f2bd6724b926d75d379e9e2eae7a0336e1ddb89302",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/settings/settings.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule],\r\n  exports: [],\r\n  providers: [],\r\n})\r\nexport class SettingsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SpinnerModule",
            "id": "module-SpinnerModule-4a13c109740f3f88fbfe8fc26b266197b2eb3b8ea6ee35ffc1cfe4081f187fbcaf10642c91b6c4871cc58ce0876ab239a4a3b76cc775a0151d7073221289465c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/spinners/spiners.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common'\r\nimport { NgModule } from '@angular/core'\r\nimport { SpinnerComponent001 } from './components/spinnerType001/spinner.component'\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [SpinnerComponent001],\r\n  exports: [SpinnerComponent001],\r\n})\r\nexport class SpinnerModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SpinnerComponent001"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SpinnerComponent001"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TestNavComponentModule",
            "id": "module-TestNavComponentModule-617a26db854071fadac7c01f8653a8e1a17b54415f047894f4bc060286e70a45cc4c6f2092cdcf61cf40cc48fa5d3b99675f6c3a0238caaf1e6497aa7d56a97a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/header/tests-nav.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common'\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { NgModule } from '@angular/core'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { RouterModule } from '@angular/router'\r\nimport { ClickOutsideModule } from 'ng-click-outside'\r\nimport { AuthModule } from 'src/app/pages/auth/auth.module'\r\nimport { CustomDropdownComponent } from './dropdownMenu/dropdownMenu.component'\r\nimport { TestNavComponent } from './tests-nav/header.component'\r\n\r\n@NgModule({\r\n  declarations: [TestNavComponent, CustomDropdownComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    ClickOutsideModule,\r\n    AuthModule,\r\n  ],\r\n  exports: [TestNavComponent],\r\n  providers: [],\r\n})\r\nexport class TestNavComponentModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CustomDropdownComponent"
                        },
                        {
                            "name": "TestNavComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TestNavComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UserProfileModule",
            "id": "module-UserProfileModule-43fd5f433ce6ccdfb42bc4fe327d26654837ebe8e6688faa0739f44c4f38926df463841b148c27f93ca6dd5aad9f59b3f37b379753d2cd6cf35998c46e2cac21",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/userProfile/userProfile.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { RouterModule } from '@angular/router'\r\n\r\nimport { UserProfileService } from './services/userProfile.service'\r\nimport { EffectsModule } from '@ngrx/effects'\r\n\r\nimport { StoreModule } from '@ngrx/store'\r\n\r\nimport { GetUserProfileEffect } from './store/effects/getUserProfile.effects'\r\nimport { FeedModule } from 'src/app/shared/modules/feed/feed.module'\r\nimport { UserProfileComponent } from './components/userProfile/userProfile.component'\r\nimport { FavoritedComponent } from './components/favoritedFeed/favoritedFeed.component'\r\nimport { reducers } from './store/reducer/userProfile.reducer'\r\n\r\nconst routes = [\r\n  {\r\n    path: 'profile/:user',\r\n    component: UserProfileComponent,\r\n  },\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    EffectsModule.forFeature([GetUserProfileEffect]),\r\n    StoreModule.forFeature('userProfile', reducers),\r\n    FeedModule,\r\n  ],\r\n  declarations: [UserProfileComponent, FavoritedComponent],\r\n  providers: [UserProfileService],\r\n})\r\nexport class UserProfileModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "UserProfileService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FavoritedComponent"
                        },
                        {
                            "name": "UserProfileComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FeedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "adapter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/store/reducer/feed.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EntityAdapter<ArticlesInterface>",
                "defaultValue": "createEntityAdapter<\r\n  ArticlesInterface\r\n>()"
            },
            {
                "name": "articleCountSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  feedFeatureSelector,\r\n  (feedState) => feedState.articleCount,\r\n)"
            },
            {
                "name": "articleFeatureSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/selectors/articles.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<\r\n  ArticleStateInterface\r\n>('article')"
            },
            {
                "name": "articleReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/reducer/article.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n  on(\r\n    getArticleAction,\r\n    (state): ArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    getArticleSuccessAction,\r\n    (state, action): ArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.article,\r\n    }),\r\n  ),\r\n  on(\r\n    getArticleFailureAction,\r\n    (state): ArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  on(\r\n    favoriteArticleAction,\r\n    (state): ArticleStateInterface => ({\r\n      ...state,\r\n      isFavoriting: true,\r\n    }),\r\n  ),\r\n  on(\r\n    favoriteArticleSuccessAction,\r\n    (state, action): ArticleStateInterface => ({\r\n      ...state,\r\n      data: action.article,\r\n      isFavoriting: false,\r\n    }),\r\n  ),\r\n\r\n  on(\r\n    favoriteArticleFailureAction,\r\n    (state): ArticleStateInterface => ({\r\n      ...state,\r\n      isFavoriting: false,\r\n    }),\r\n  ),\r\n  on(routerNavigationAction, (): ArticleStateInterface => initialState),\r\n)"
            },
            {
                "name": "articleSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/selectors/articles.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  articleFeatureSelector,\r\n  (articleState: ArticleStateInterface) => articleState.data,\r\n)"
            },
            {
                "name": "articleSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  editArticleFeatureSelector,\r\n  (editArticleState: EditArticleStateInterface) => editArticleState.article,\r\n)"
            },
            {
                "name": "authFeatureSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<AuthStateInterface>(\r\n  'auth',\r\n)"
            },
            {
                "name": "authReducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/reducer/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initalState,\r\n  on(\r\n    authRegAction.registerAction, //<-auth.register.actions'\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: true,\r\n      validationErrors: null,\r\n    }),\r\n  ),\r\n  on(\r\n    authRegAction.registerSuccessAction,\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n\r\n      //auth.register.actions.ts\r\n    }),\r\n  ),\r\n  on(\r\n    authRegAction.registerFailureAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      validationErrors: action.errors, //<-auth.register.actions.ts\r\n    }),\r\n  ),\r\n  on(\r\n    loginAction,\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: true,\r\n      validationErrors: null,\r\n    }),\r\n  ),\r\n  on(\r\n    loginSuccessAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      isLoggedIn: true,\r\n      isSubmitting: false,\r\n      currentUser: action.currentUser,\r\n      isOwner: action.currentUser.currentUser.owner,\r\n      isAdmin: action.currentUser.currentUser.admin,\r\n    }),\r\n  ),\r\n  on(\r\n    loginFailureAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      validationErrors: action.errors,\r\n    }),\r\n  ),\r\n  on(\r\n    getCurrentUserAction,\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    getCurrentUserSuccessAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      isLoggedIn: true,\r\n      isLoading: false,\r\n\r\n      currentUser: action.currentUser,\r\n    }),\r\n  ),\r\n  on(\r\n    getCurrentUserFailureAction,\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      isLoggedIn: false,\r\n      currentUser: null,\r\n    }),\r\n  ),\r\n  on(\r\n    updateCurrentUserSuccessAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      currentUser: action.currentUser,\r\n    }),\r\n  ),\r\n  on(\r\n    updateCurrentUserSuccessAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      currentUser: action.currentUser,\r\n    }),\r\n  ),\r\n  on(\r\n    updateCurrentUserFailureAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      //currentUser: action.currentUser,\r\n    }),\r\n  ),\r\n  on(\r\n    logoutSuccessAction,\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      ...initalState,\r\n      isLoggedIn: false,\r\n    }),\r\n  ),\r\n)"
            },
            {
                "name": "commentFeatureSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/selectors/comment.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<\r\n  CommentStateInterface\r\n>('comment')"
            },
            {
                "name": "CommentReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/reducer/comment.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n  on(\r\n    getCommentAction,\r\n    (state): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    getCommentSuccesAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.comment,\r\n    }),\r\n  ),\r\n  on(\r\n    getCommentFailureAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  //********************************************* */\r\n  on(\r\n    updateCommentAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    updateCommentSuccessAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      data: action.comment,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  on(\r\n    updateCommentFailureAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  //********************************************* */\r\n\r\n  on(\r\n    postCommentAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    postCommentSuccessAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      data: action.comment,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  on(\r\n    postCommentFailureAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  on(\r\n    deleteCommentAction,\r\n    (state): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    deleteCommentSuccesAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.comment,\r\n    }),\r\n  ),\r\n  on(\r\n    deleteCommentFailureAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  on(routerNavigationAction, (): CommentStateInterface => initialState),\r\n)"
            },
            {
                "name": "commentSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/selectors/comment.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  commentFeatureSelector,\r\n  (commentState: CommentStateInterface) => commentState.data,\r\n)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "createArticleAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/createArticle/store/actions/createArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.CREATE_ARTICLE,\r\n  props<{ articleInput: ArticleInputInterface }>(),\r\n)"
            },
            {
                "name": "createArticleFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/createArticle/store/actions/createArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.CREATE_ARTICLE_FAILURE,\r\n  //props<{ errors: BackendErrorsInterface }>(),\r\n)"
            },
            {
                "name": "createArticleFeatureSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/createArticle/store/selectors/createArticle.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<\r\n  AppStateInterface,\r\n  CreateArticleStateInterface\r\n>('createActicle')"
            },
            {
                "name": "createArticleReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/createArticle/store/reducer/createArticle.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n  on(\r\n    articleAction.createArticleAction,\r\n    (state): CreateArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: true,\r\n    }),\r\n  ),\r\n  on(\r\n    articleAction.createArticleSuccessAction,\r\n    (state): CreateArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n    }),\r\n  ),\r\n  on(\r\n    articleAction.createArticleFailureAction,\r\n    (state, action): CreateArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      //validationErrors: action.errors,\r\n    }),\r\n  ),\r\n)"
            },
            {
                "name": "createArticleSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/createArticle/store/actions/createArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.CREATE_ARTICLE_SUCCESS,\r\n  props<{ article: ArticlesInterface }>(),\r\n)"
            },
            {
                "name": "currentUserSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.currentUser,\r\n)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleContentBlock/components/bodys/type001/display/stories/articleBodyType001.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/display/stories/imageImageType.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleContentBlock/components/image-text/type001/display/stories/imageTextType001.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "deleteArticleAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/actions/deleteArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.DELETE_ARTICLE,\r\n  props<{ title: string }>(),\r\n)"
            },
            {
                "name": "deleteArticleFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/actions/deleteArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.DELETE_ARTICLE_FAILURE,\r\n)"
            },
            {
                "name": "deleteArticleSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/actions/deleteArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.DELETE_ARTICLE_SUCCESS,\r\n)"
            },
            {
                "name": "deleteCommentAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/actions/deleteComment.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.DELETE_COMMENT,\r\n  props<{ url: string }>(),\r\n)"
            },
            {
                "name": "deleteCommentFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/actions/deleteComment.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.DELETE_COMMENT_FAILURE,\r\n)"
            },
            {
                "name": "deleteCommentSuccesAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/actions/deleteComment.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.DELETE_COMMENT_SUCCESS,\r\n  props<{ comment: CommentInterface }>(),\r\n)"
            },
            {
                "name": "editArticleFeatureSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<\r\n  EditArticleStateInterface\r\n>('editActicle')"
            },
            {
                "name": "EditArticleReducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/editArticle/store/reducer/editArticle.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n  on(\r\n    updateArticleAction.updateArticleAction,\r\n    (state): EditArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: true,\r\n    }),\r\n  ),\r\n  on(\r\n    updateArticleAction.updateArticleSuccessAction,\r\n    (state): EditArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n    }),\r\n  ),\r\n  on(\r\n    updateArticleAction.updateArticleFailureAction,\r\n    (state, action): EditArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      validationErrors: action.errors,\r\n    }),\r\n  ),\r\n  on(\r\n    getArticleAction.getArticleAction,\r\n    (state): EditArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    getArticleAction.getArticleSuccessAction,\r\n    (state, action): EditArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      article: action.article,\r\n    }),\r\n  ),\r\n  on(\r\n    getArticleAction.getArticleFailureAction,\r\n    (state): EditArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  on(\r\n    updateArticleAction.saveArticleAction,\r\n    (state, action): EditArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      article: action.article,\r\n    }),\r\n  ),\r\n  //on(routerNavigationAction, (): EditArticleStateInterface => initialState),\r\n)"
            },
            {
                "name": "emailValFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.login.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.EMAIL_VALIDATION_FAILURE,\r\n)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  baseUrl: 'http://104.254.15.78:8000/api',\r\n\r\n  //comments: . location article componet ts\r\n  commentsUrl: `article/\"this.id\"/commentFeed/`, //todo: not implemented\r\n  globalFeedUrl: '/article/listArticle/',\r\n\r\n  //articleTagFeed.component.ts\r\n  tagFeedUrl: '/listArticle/tags/?tags=', //todo: not implemented\r\n\r\n  //auth: src\\app\\pages\\auth\\services\\auth.service.ts\r\n  authLoginApiUrl: '/usermanagement/login/',\r\n  authRegisterApiUrl: '/usermanagement/register/',\r\n  authAutoLoginApiUrl: '/usermanagement/autoLogin/',\r\n  authLogoutApiUrl: '/usermanagement/logout/',\r\n\r\n  //create article: src\\app\\pages\\createArticle\\services\\createArticle.service.ts\r\n  createArticleApiUrl: `\"environment.baseUrl\"/article/`, //todo: not implemented\r\n  //edit article: src\\app\\pages\\editArticle\\services.ts\r\n  editArticleAprUrl: `\"environment.baseUrl\"/article/edit/\"id\"/`, //todo: not implemented\r\n\r\n  //TODO: create\r\n  //userProfile:\r\n  authProfileApiUrl: '/usermanagement/profileUpdate/',\r\n  favoritedFeedApiUrl: `/articleList/favorite/\"user.id\"`,\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  baseUrl: 'http://104.254.15.78:8000/api',\r\n  baseMedia: 'http://104.254.15.78:8000/',\r\n\r\n  contentTypes: {\r\n    title: 'title',\r\n    image: 'image',\r\n    body: 'body',\r\n    imageImage: 'image-image',\r\n    imageBody: 'image-body',\r\n    bodyImage: 'body-image',\r\n    textText: 'text-text',\r\n  },\r\n\r\n  //comments: src\\app\\pages\\article\\components\\article\\article.component.ts\r\n  getCommentsApiUrl: `article/commentFeed/`, // (+ '${article.id}')\r\n\r\n  //globelFeed: src\\app\\pages\\articleFeed\\components\\globalFeed\\globalFeed.component.ts\r\n  globalFeedUrl: '/listArticle/',\r\n\r\n  //articleTagFeed.component.ts\r\n  tagFeedUrl: '/listArticle/', // (+ '${tagName}')\r\n\r\n  //auth: src\\app\\pages\\auth\\services\\auth.service.ts\r\n  authLoginApiUrl: '/usermanagement/login/',\r\n  authRegisterApiUrl: '/usermanagement/register/',\r\n  authAutoLoginApiUrl: '/usermanagement/autoLogin/',\r\n  authLogoutApiUrl: '/usermanagement/logout/',\r\n\r\n  //create article: src\\app\\pages\\createArticle\\services\\createArticle.service.ts\r\n  createArticleApiUrl: `/article/`,\r\n\r\n  //get article src\\app\\shared\\services\\article.service.ts\r\n  getArticleApiUrl: `/article/`, //(+ '${article.id}/')?chapter=3\r\n  favoriteApiUrl: `/article/favorite/`, //todo: not implemented (+ '${article.id}/'),\r\n\r\n  //edit article: src\\app\\pages\\editArticle\\services.ts\r\n  editArticleApiUrl: `/article/edit/`, // (+ '${article.id}/')\r\n\r\n  //delete article: src\\app\\pages\\deleteArticle\\services.ts\r\n  deleteArticleApiUrl: `/article/edit/`, //(+ '${article.id}/')\r\n\r\n  //comments src\\app\\shared\\modules\\articleComments\\services\\comment.service.ts\r\n  editCommentApiUrl: `/article/edit/comment/`, //todo: not implemented (+ '${comment.id}/')\r\n  DeleteCommentApiUrl: `/article/edit/comment/`, //todo: not implemented (+ '${comment.id}/')\r\n  postCommentApiUrl: `/article/comment/`, //todo: not implemented (+ '${article.id}/')\r\n\r\n  //TODO: create\r\n\r\n  favoritedFeedApiUrl: `/listArticle/favorite/`, //todo: not implemented (+ '${user.id}/'),\r\n  //userProfile:\r\n  authProfileApiUrl: '/usermanagement/profileUpdate/', //todo: not implemented\r\n\r\n  profileApiUrl: `/usermanagement/profile/`, //todo: not implemented (+ '${user.id}/'),\r\n}"
            },
            {
                "name": "errorSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/selectors/articles.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  articleFeatureSelector,\r\n  (articleState: ArticleStateInterface) => articleState.error,\r\n)"
            },
            {
                "name": "errorSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/userProfile/store/selectors/userProfile.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  userProfileFeatureSelector,\r\n  (userProfileState: UserProfileStateInterface) => userProfileState.error,\r\n)"
            },
            {
                "name": "errorsSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/selectors/comment.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  commentFeatureSelector,\r\n  (commentState: CommentStateInterface) => commentState.error,\r\n)"
            },
            {
                "name": "errorsSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  feedFeatureSelector,\r\n  (feedState) => feedState.error,\r\n)"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/components/article/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  article: {\r\n    id: 5,\r\n    content: [\r\n      {\r\n        title: '4 Strategies for Combatting Decision Fatigue',\r\n        body: null,\r\n        type: 'title',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 0,\r\n      },\r\n      {\r\n        title: null,\r\n        body: null,\r\n        type: 'image',\r\n        imageOne: 'media/articles/2022/03/07/Content_TW3sM57.jpeg',\r\n        imageTwo: null,\r\n        customObject: false,\r\n        position: 1,\r\n      },\r\n      {\r\n        title: null,\r\n        body:\r\n          'Science proves it: decision fatigue is a real thing. By the end of your workday, your emotional and intellectual horsepower is depleted. When leaders invest precious energy in low-impact decisions, everyone pays a price. Hoarding decisions undervalues employees. It also keeps you from making bigger decisions that really matter. You can’t escape decision-making, but you can separate the high-leverage decisions from the rest.\\n\\nThere are certain kinds of decisions that only you can make. That’s true for everyone in your organization. When you activate people to lead within their sphere of influence, you get the best result across your entire business. To maximize the return on daily decision-making, follow these four simple strategies.',\r\n        type: 'body',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 2,\r\n      },\r\n      {\r\n        title: '1. NEVER MAKE THE SAME DECISION TWICE',\r\n        body: null,\r\n        type: 'title',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 3,\r\n      },\r\n      {\r\n        title: null,\r\n        body:\r\n          'Many decisions are recurring choices. When you’re determining which vendors to use or what schedule to follow, simply make the decision once. Then automate it or document it. When you are asked about vacation approvals, parental leave, or compensation changes, documented policies can save immense amounts of brainpower. Here’s an example. A few years ago, I decided to no longer do one-on-one consulting. Now, when the request comes in, my executive assistant knows to decline on my behalf. I benefit from this strategy every day.',\r\n        type: 'body',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 4,\r\n      },\r\n      {\r\n        title: '2. LET OTHERS CHOOSE FOR YOU',\r\n        body: null,\r\n        type: 'title',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 5,\r\n      },\r\n      {\r\n        title: null,\r\n        body:\r\n          'Many leaders fall into the trap of micro-managing. This not only zaps your mental energy but also negatively impacts your employees. It’s tempting to overthink non-essential choices. Instead, ask yourself, Can someone else answer this for me? Holding onto trivial decisions is costly and foolish. Hire talented people and let them lead with excellence.',\r\n        type: 'body',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 6,\r\n      },\r\n      {\r\n        title: '3. USE A DEFINED PROCESS FOR MAKING TOUGH DECISIONS',\r\n        body: null,\r\n        type: 'title',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 7,\r\n      },\r\n      {\r\n        title: null,\r\n        body:\r\n          'Build a process that considers all variables. Years ago, I started using a recommendation briefing form. When someone on my team has an idea for our business, they write up a one-sheet summary of the recommendation. This sheet includes background information, rationale, resources needed, and the projected financial impact. Instead of pitching an idea and leaving me to do the profitability analysis, my team knows to do their own leg work. At this point, my job is simply choosing yes or no. No follow-up meetings are needed for the deliberation process.',\r\n        type: 'body',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 8,\r\n      },\r\n      {\r\n        title: '4. TAKE CARE OF YOURSELF',\r\n        body: null,\r\n        type: 'title',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 9,\r\n      },\r\n      {\r\n        title: null,\r\n        body:\r\n          'Your thinking is manipulated by biochemical reactions in your body. In fact, there’s a direct correlation between inadequate sleep and poor decision-making. To make the best decisions, you must be in a good place. This includes getting proper rest, regular exercise, and adequate nutrition. Take time to rejuvenate so you can lead your company well.\\n\\nWhen you add these four simple strategies, you’ll gain the confidence to make fewer, faster, and better decisions. Which strategy will you start implementing this week?',\r\n        type: 'body',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 10,\r\n      },\r\n    ],\r\n    author: {\r\n      authorId: 5,\r\n      username: 'asdf',\r\n      profileImg: 'media/Profile/default.jpeg',\r\n    },\r\n    articleTitle: '4 Strategies for Combatting Decision Fatigue',\r\n    articleImage: 'media/articles/2022/03/07/article_yM3EjTM.jpeg',\r\n    articleDescription: '4 Strategies for Combatting Decision Fatigue',\r\n    creationDate: '2022-03-03T20:22:03.849905Z',\r\n    tags: [],\r\n  },\r\n}"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/components/login-component/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/components/registation-component/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/components/feed/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "example_data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/spinners/components/spinnerType001/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "favoriteArticleAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/actions/favoriteArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.FAVORITE_ARTICLE,\r\n  props<{ myArticle: ArticlesInterface }>(),\r\n)"
            },
            {
                "name": "favoriteArticleFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/actions/favoriteArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.FAVORITE_ARTICLE_FAILURE,\r\n)"
            },
            {
                "name": "favoriteArticleSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/actions/favoriteArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.FAVORITE_ARTICLE_SUCCESS,\r\n  props<{ article: ArticlesInterface }>(),\r\n)"
            },
            {
                "name": "feedFeatureSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<State>('feed')"
            },
            {
                "name": "feedReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/store/reducer/feed.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n  on(feedActions.getFeedSuccesAction, (state, action) => {\r\n    state = Object.assign({\r\n      ...state,\r\n      isLoading: false,\r\n      articleCount: action.articleCount,\r\n      error: null,\r\n    })\r\n    return adapter.addMany(action.feed, state)\r\n  }),\r\n  on(feedActions.getFeedAction, (state) => {\r\n    //state = Object.assign({ ...state, isLoading: true, error: null}),\r\n    return adapter.removeAll({ ...state, isLoading: true, error: null })\r\n  }),\r\n  on(feedActions.getFeedFailureAction, (state, action) =>\r\n    Object.assign({ ...state, isLoading: false, error: action.errorMessage }),\r\n  ),\r\n)"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/components/article/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/components/login-component/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/components/registation-component/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/components/feed/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/spinners/components/spinnerType001/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleContentBlock/components/bodys/type001/display/stories/articleBodyType001.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/display/stories/imageImageType.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleContentBlock/components/image-text/type001/display/stories/imageTextType001.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "getArticleAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/actions/getArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_ARTICLE,\r\n  props<{ title: string }>(),\r\n)"
            },
            {
                "name": "getArticleAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/editArticle/store/actions/getArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_ARTICLE,\r\n  props<{ title: string }>(),\r\n)"
            },
            {
                "name": "getArticleFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/actions/getArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_ARTICLE_FAILURE,\r\n)"
            },
            {
                "name": "getArticleFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/editArticle/store/actions/getArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_ARTICLE_FAILURE,\r\n)"
            },
            {
                "name": "getArticleSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/actions/getArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_ARTICLE_SUCCESS,\r\n  props<{ article: ArticlesInterface }>(),\r\n)"
            },
            {
                "name": "getArticleSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/editArticle/store/actions/getArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_ARTICLE_SUCCESS,\r\n  props<{ article: ArticlesInterface }>(),\r\n)"
            },
            {
                "name": "getCommentAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/actions/getComment.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_COMMENT,\r\n  props<{ url: string }>(),\r\n)"
            },
            {
                "name": "getCommentFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/actions/getComment.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_COMMENT_FAILURE,\r\n)"
            },
            {
                "name": "getCommentSuccesAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/actions/getComment.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_COMMENT_SUCCESS,\r\n  props<{ comment: CommentInterface }>(),\r\n)"
            },
            {
                "name": "getCurrentUserAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.getCurrentUser.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_CURRENT_USER, //<-auth.types.actions\r\n)"
            },
            {
                "name": "getCurrentUserFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.getCurrentUser.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_CURRENT_USER_FAILURE, //<-auth.types.actions\r\n)"
            },
            {
                "name": "getCurrentUserSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.getCurrentUser.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_CURRENT_USER_SUCCESS, //<-auth.types.actions\r\n  props<{ currentUser: CurrentUserInterface }>(),\r\n)"
            },
            {
                "name": "getFeedAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/store/actions/getFeed.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_FEED,\r\n  props<{ url: string }>(),\r\n)"
            },
            {
                "name": "getFeedFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/store/actions/getFeed.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_FEED_FAILURE,\r\n  props<{ errorMessage: string }>(),\r\n)"
            },
            {
                "name": "getFeedSuccesAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/store/actions/getFeed.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_FEED_SUCCESS,\r\n  props<{ feed: ArticlesInterface[]; articleCount: number }>(),\r\n)"
            },
            {
                "name": "getTagAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleForms/components/store/actions/getTags.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(ActionTypes.GET_TAGS)"
            },
            {
                "name": "getTagFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleForms/components/store/actions/getTags.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(ActionTypes.GET_TAGS_FAILURE)"
            },
            {
                "name": "getTagSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleForms/components/store/actions/getTags.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_TAGS_SUCCESS,\r\n  props<{ tags: any }>(), //todo\r\n)"
            },
            {
                "name": "getUserProfileAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/userProfile/store/actions/getUserProfile.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_USER_PROFILE,\r\n  props<{ slug: string }>(),\r\n)"
            },
            {
                "name": "getUserProfileFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/userProfile/store/actions/getUserProfile.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_USER_PROFILE_FAILURE,\r\n)"
            },
            {
                "name": "getUserProfileSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/userProfile/store/actions/getUserProfile.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.GET_USER_PROFILE_SUCCESS,\r\n  props<{ userProfile: UserProfileInterface }>(),\r\n)"
            },
            {
                "name": "initalState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/reducer/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AuthStateInterface",
                "defaultValue": "{\r\n  isSubmitting: false,\r\n  currentUser: null,\r\n  isLoggedIn: false,\r\n  validationErrors: null,\r\n  isLoading: false,\r\n  isOwner: null,\r\n  isAdmin: null,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/reducer/article.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ArticleStateInterface",
                "defaultValue": "{\r\n  data: null,\r\n  isLoading: false,\r\n  error: null,\r\n  isFavoriting: false,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/createArticle/store/reducer/createArticle.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CreateArticleStateInterface",
                "defaultValue": "{\r\n  isSubmitting: false,\r\n  validationErrors: null,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/editArticle/store/reducer/editArticle.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EditArticleStateInterface",
                "defaultValue": "{\r\n  isSubmitting: false,\r\n  validationErrors: null,\r\n  article: null,\r\n  isLoading: false,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/userProfile/store/reducer/userProfile.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "UserProfileStateInterface",
                "defaultValue": "{\r\n  data: null,\r\n  isLoading: false,\r\n  error: null,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/components/article/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/components/login-component/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/components/registation-component/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/reducer/comment.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CommentStateInterface",
                "defaultValue": "{\r\n  data: null,\r\n  isLoading: false,\r\n  error: null,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/store/reducer/feed.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "State",
                "defaultValue": "adapter.getInitialState({\r\n  // additional entity state properties\r\n  isLoading: false,\r\n  error: null,\r\n  articleCount: 0,\r\n})"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/components/feed/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/spinners/components/spinnerType001/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  state_key: example_data,\r\n}"
            },
            {
                "name": "isAdminSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.isAdmin,\r\n)"
            },
            {
                "name": "isAnonymousSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.isLoggedIn === false,\r\n)"
            },
            {
                "name": "isFavoritingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/selectors/articles.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  articleFeatureSelector,\r\n  (articleState: ArticleStateInterface) => articleState.isFavoriting,\r\n)"
            },
            {
                "name": "isLoadingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/store/selectors/articles.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  articleFeatureSelector,\r\n  (articleState: ArticleStateInterface) => articleState.isLoading,\r\n)"
            },
            {
                "name": "isLoadingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.isLoading,\r\n)"
            },
            {
                "name": "isLoadingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  editArticleFeatureSelector,\r\n  (editArticleState: EditArticleStateInterface) => editArticleState.isLoading,\r\n)"
            },
            {
                "name": "isLoadingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/userProfile/store/selectors/userProfile.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  userProfileFeatureSelector,\r\n  (userProfileState: UserProfileStateInterface) => userProfileState.isLoading,\r\n)"
            },
            {
                "name": "isLoadingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/selectors/comment.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  commentFeatureSelector,\r\n  (commentState: CommentStateInterface) => commentState.isLoading,\r\n)"
            },
            {
                "name": "isLoadingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  feedFeatureSelector,\r\n  (feedState) => feedState.isLoading,\r\n)"
            },
            {
                "name": "isLoggedInSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.isLoggedIn,\r\n)"
            },
            {
                "name": "isOwnerSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.isOwner,\r\n)"
            },
            {
                "name": "isSubmittingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.isSubmitting,\r\n)"
            },
            {
                "name": "isSubmittingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/createArticle/store/selectors/createArticle.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  createArticleFeatureSelector,\r\n  (createArticleState: CreateArticleStateInterface) =>\r\n    createArticleState.isSubmitting,\r\n)"
            },
            {
                "name": "isSubmittingSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  editArticleFeatureSelector,\r\n  (editArticleState: EditArticleStateInterface) =>\r\n    editArticleState.isSubmitting,\r\n)"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "loginAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.login.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  //-> auth.reducer.ts @@ auth.login.effects.ts\r\n  ActionTypes.LOGIN, //<-auth.types.actions\r\n  props<{ payload: LoginRequestInterface }>(),\r\n)"
            },
            {
                "name": "loginFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.login.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.LOGIN_FAILURE,\r\n  props<{ errors: BackendErrorsInterface }>(), //<-auth.types.actions\r\n)"
            },
            {
                "name": "loginSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.login.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.LOGIN_SUCCESS, //<-auth.types.actions\r\n  props<{ currentUser: CurrentUserInterface }>(),\r\n)"
            },
            {
                "name": "logoutAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.sync.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(ActionTypes.LOGOUT)"
            },
            {
                "name": "logoutFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.sync.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.LOGOUT_FAILURE_ACTION,\r\n)"
            },
            {
                "name": "logoutSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.sync.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.LOGOUT_SUCCESS_ACTION,\r\n)"
            },
            {
                "name": "materialModules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/material/material.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[MatIconModule]"
            },
            {
                "name": "NoStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/components/article/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/components/login-component/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/components/registation-component/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/components/feed/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OneImg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/display/stories/imageImageType.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "postCommentAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/actions/postComment.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.POST_COMMENT,\r\n  props<{ url: string; comment: CommentInterface }>(),\r\n)"
            },
            {
                "name": "postCommentFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/actions/postComment.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.POST_COMMENT_FAILURE,\r\n)"
            },
            {
                "name": "postCommentSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/actions/postComment.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.POST_COMMENT_SUCCESS,\r\n  props<{ comment: CommentInterface }>(),\r\n)"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "registerAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.register.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  //-> auth.reducer.ts @@ auth.register.effects.ts\r\n  ActionTypes.REGISTER, //<-auth.types.actions\r\n  props<{ payload: AuthRegistrationRequestInterface }>(),\r\n)"
            },
            {
                "name": "registerFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.register.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.REGISTER_FAILURE, //<-auth.types.actions\r\n  props<{ errors: BackendErrorsInterface }>(),\r\n)"
            },
            {
                "name": "registerSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.register.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.REGISTER_SUCCESS, //<-auth.types.actions\r\n)"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "route",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/home/home.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[{ path: '', component: HomeComponent }]"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/article.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    path: 'article/:title',\r\n    component: ArticleComponent,\r\n  },\r\n]"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/articleTagFeed/articleTagFeed.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    path: 'feed/tag/:slug',\r\n    component: TagFeedComponent,\r\n  },\r\n]"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/articleFeed/globalFeed.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[{ path: '', component: GlobalFeedComponent }]"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/createArticle/createArticles.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    path: 'article/new',\r\n    component: CreateArticleComponent,\r\n  },\r\n]"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/editArticle/editArticles.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    path: 'article/:title/edit',\r\n    component: EditArticleComponent,\r\n  },\r\n]"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/userProfile/userProfile.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    path: 'profile/:user',\r\n    component: UserProfileComponent,\r\n  },\r\n]"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articlePreview/articleForms.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[{ path: 'test', component: ArticlePreviewComponent }]"
            },
            {
                "name": "saveArticleAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/editArticle/store/actions/updateArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.SAVE_ARTICLE,\r\n  props<{ article: ArticlesInterface }>(),\r\n)"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "selectAllFeed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(feedFeatureSelector, selectAllFeeds)"
            },
            {
                "name": "selectAllFeeds",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "selectAll"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/article/components/article/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/components/login-component/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/components/registation-component/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/components/feed/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/spinners/components/spinnerType001/stories/article.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleContentBlock/components/bodys/type001/display/stories/articleBodyType001.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/display/stories/imageImageType.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleContentBlock/components/image-text/type001/display/stories/imageTextType001.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "updateArticleAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/editArticle/store/actions/updateArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_ARTICLE,\r\n  props<{ articleInput: ArticleInputInterface; title: string }>(),\r\n)"
            },
            {
                "name": "updateArticleFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/editArticle/store/actions/updateArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_ARTICLE_FAILURE,\r\n  props<{ errors: BackendErrorsInterface }>(),\r\n)"
            },
            {
                "name": "updateArticleSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/editArticle/store/actions/updateArticle.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_ARTICLE_SUCCESS,\r\n  props<{ article: ArticlesInterface }>(),\r\n)"
            },
            {
                "name": "updateCommentAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/actions/updateComment.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_COMMENT,\r\n  props<{ url: string; comment: CommentInterface }>(),\r\n)"
            },
            {
                "name": "updateCommentFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/actions/updateComment.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_COMMENT_FAILURE,\r\n)"
            },
            {
                "name": "updateCommentSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/articleComments/store/actions/updateComment.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_COMMENT_SUCCESS,\r\n  props<{ comment: CommentInterface }>(),\r\n)"
            },
            {
                "name": "updateCurrentUserAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  //-> auth.reducer.ts @@ auth.login.effects.ts\r\n  ActionTypes.UPDATE_CURRENT_USER, //<-auth.types.actions\r\n  props<{ currentUserInput: AuthUpdateInterface }>(),\r\n)"
            },
            {
                "name": "updateCurrentUserFailureAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_CURRENT_USER_FAILURE, //<-auth.types.actions\r\n  //props<{ errors: BackendErrorsInterface }>(),\r\n)"
            },
            {
                "name": "updateCurrentUserSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_CURRENT_USER_SUCCESS, //<-auth.types.actions\r\n  props<{ currentUser: CurrentUserInterface | null }>(),\r\n)"
            },
            {
                "name": "userProfileFeatureSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/userProfile/store/selectors/userProfile.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<\r\n  UserProfileStateInterface\r\n>('userProfile')"
            },
            {
                "name": "userProfileReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/userProfile/store/reducer/userProfile.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n  on(\r\n    getUserProfileAction,\r\n    (state): UserProfileStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    getUserProfileSuccessAction,\r\n    (state, action): UserProfileStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.userProfile,\r\n    }),\r\n  ),\r\n  on(\r\n    getUserProfileFailureAction,\r\n    (state): UserProfileStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n)"
            },
            {
                "name": "userProfileSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/userProfile/store/selectors/userProfile.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  userProfileFeatureSelector,\r\n  (userProfileState: UserProfileStateInterface) => userProfileState.data,\r\n)"
            },
            {
                "name": "validationErrorsSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.validationErrors,\r\n)"
            },
            {
                "name": "validationErrorsSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/createArticle/store/selectors/createArticle.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  createArticleFeatureSelector,\r\n  (createArticleState: CreateArticleStateInterface) =>\r\n    createArticleState.validationErrors,\r\n)"
            },
            {
                "name": "validationErrorsSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  editArticleFeatureSelector,\r\n  (editArticleState: EditArticleStateInterface) =>\r\n    editArticleState.validationErrors,\r\n)"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "adapter.getSelectors()"
            }
        ],
        "functions": [
            {
                "name": "ArticleReducers",
                "file": "src/app/pages/article/store/reducer/article.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "ArticleStateInterface",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "ArticleStateInterface",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "authReducer",
                "file": "src/app/pages/auth/store/reducer/auth.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "AuthStateInterface",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "AuthStateInterface",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createArticleReducers",
                "file": "src/app/pages/createArticle/store/reducer/createArticle.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "CreateArticleStateInterface",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "CreateArticleStateInterface",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "EditArticleReducer",
                "file": "src/app/pages/editArticle/store/reducer/editArticle.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "EditArticleStateInterface",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "EditArticleStateInterface",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "reducers",
                "file": "src/app/pages/userProfile/store/reducer/userProfile.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "UserProfileStateInterface",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "UserProfileStateInterface",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "reducers",
                "file": "src/app/shared/modules/articleComments/store/reducer/comment.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "CommentStateInterface",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "CommentStateInterface",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "ActionTypes",
                "childs": [
                    {
                        "name": "GET_ARTICLE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Article] Get article"
                    },
                    {
                        "name": "GET_ARTICLE_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Article] Get article success"
                    },
                    {
                        "name": "GET_ARTICLE_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Article] Get article failure"
                    },
                    {
                        "name": "DELETE_ARTICLE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Article] Delete article"
                    },
                    {
                        "name": "DELETE_ARTICLE_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Article] Delete article success"
                    },
                    {
                        "name": "DELETE_ARTICLE_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Article] Delete article failure"
                    },
                    {
                        "name": "FAVORITE_ARTICLE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Article] favorite Acticle toggle"
                    },
                    {
                        "name": "FAVORITE_ARTICLE_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Article] favorite Acticle toggle success"
                    },
                    {
                        "name": "FAVORITE_ARTICLE_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Article] favorite Acticle toggle failure"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/pages/article/store/actions/articles.types.actions.ts"
            },
            {
                "name": "ActionTypes",
                "childs": [
                    {
                        "name": "REGISTER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Registering"
                    },
                    {
                        "name": "REGISTER_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Register Success"
                    },
                    {
                        "name": "REGISTER_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Register Failure"
                    },
                    {
                        "name": "LOGIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Loginng"
                    },
                    {
                        "name": "LOGIN_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Login Success"
                    },
                    {
                        "name": "LOGIN_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Login Failure"
                    },
                    {
                        "name": "EMAIL_VALIDATION_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Email not validated"
                    },
                    {
                        "name": "GET_CURRENT_USER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Getting current user"
                    },
                    {
                        "name": "GET_CURRENT_USER_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Get current user Success"
                    },
                    {
                        "name": "GET_CURRENT_USER_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Get current user Failure"
                    },
                    {
                        "name": "UPDATE_CURRENT_USER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Updating current user"
                    },
                    {
                        "name": "UPDATE_CURRENT_USER_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Updating success"
                    },
                    {
                        "name": "UPDATE_CURRENT_USER_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Updating failure"
                    },
                    {
                        "name": "LOGOUT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Logout"
                    },
                    {
                        "name": "LOGOUT_SUCCESS_ACTION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Logout Success"
                    },
                    {
                        "name": "LOGOUT_FAILURE_ACTION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Auth] Logout failure"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/pages/auth/store/actions/auth.types.actions.ts"
            },
            {
                "name": "ActionTypes",
                "childs": [
                    {
                        "name": "CREATE_ARTICLE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Create article] Create Article"
                    },
                    {
                        "name": "CREATE_ARTICLE_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Create article] Creaate Article Success"
                    },
                    {
                        "name": "CREATE_ARTICLE_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Create article] Create Article Failed"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/pages/createArticle/store/actions/createArticle.types.actions.ts"
            },
            {
                "name": "ActionTypes",
                "childs": [
                    {
                        "name": "UPDATE_ARTICLE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Update article] Update Article"
                    },
                    {
                        "name": "UPDATE_ARTICLE_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Update article] Update Article Success"
                    },
                    {
                        "name": "UPDATE_ARTICLE_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Update article] Update Article Failed"
                    },
                    {
                        "name": "GET_ARTICLE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Update article] Get Article"
                    },
                    {
                        "name": "GET_ARTICLE_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Update article] Get Article Success"
                    },
                    {
                        "name": "GET_ARTICLE_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Update article] Get Article Failed"
                    },
                    {
                        "name": "SAVE_ARTICLE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Save article] Save Article"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/pages/editArticle/store/actions/updateArticle.types.actions.ts"
            },
            {
                "name": "ActionTypes",
                "childs": [
                    {
                        "name": "GET_USER_PROFILE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[User Profile] Get user profile"
                    },
                    {
                        "name": "GET_USER_PROFILE_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[User Profile] Get user profile success"
                    },
                    {
                        "name": "GET_USER_PROFILE_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[User Profile] Get user profile failure"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/pages/userProfile/store/actions/userProfile.types.actions.ts"
            },
            {
                "name": "ActionTypes",
                "childs": [
                    {
                        "name": "GET_COMMENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[COMMENT] getting COMMENT"
                    },
                    {
                        "name": "GET_COMMENT_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[COMMENT] getting COMMENT failed"
                    },
                    {
                        "name": "GET_COMMENT_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[COMMENT] getting COMMENT succeeded"
                    },
                    {
                        "name": "POST_COMMENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[COMMENT] post COMMENT"
                    },
                    {
                        "name": "POST_COMMENT_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[COMMENT] post COMMENT failed"
                    },
                    {
                        "name": "POST_COMMENT_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[COMMENT] post COMMENT succeeded"
                    },
                    {
                        "name": "DELETE_COMMENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[COMMENT] delete COMMENT"
                    },
                    {
                        "name": "DELETE_COMMENT_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[COMMENT] delete COMMENT failed"
                    },
                    {
                        "name": "DELETE_COMMENT_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[COMMENT] delete COMMENT succeeded"
                    },
                    {
                        "name": "UPDATE_COMMENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[COMMENT] update COMMENT"
                    },
                    {
                        "name": "UPDATE_COMMENT_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[COMMENT] update COMMENT failed"
                    },
                    {
                        "name": "UPDATE_COMMENT_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[COMMENT] update COMMENT succeeded"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/modules/articleComments/store/actions/comment.types.actions.ts"
            },
            {
                "name": "ActionTypes",
                "childs": [
                    {
                        "name": "GET_FEED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Feed] getting feed"
                    },
                    {
                        "name": "GET_FEED_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Feed] getting feed failed"
                    },
                    {
                        "name": "GET_FEED_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Feed] getting feed succeeded"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/modules/feed/store/actions/feed.types.actions.ts"
            },
            {
                "name": "ActionTypes",
                "childs": [
                    {
                        "name": "GET_TAGS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[tags] getting tags"
                    },
                    {
                        "name": "GET_TAGS_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[tags] getting tags failed"
                    },
                    {
                        "name": "GET_TAGS_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[tags] getting tags succeeded"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/modules/articleForms/components/store/actions/tags.types.actions.ts"
            }
        ],
        "groupedVariables": {
            "src/app/shared/modules/feed/store/reducer/feed.reducer.ts": [
                {
                    "name": "adapter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/store/reducer/feed.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EntityAdapter<ArticlesInterface>",
                    "defaultValue": "createEntityAdapter<\r\n  ArticlesInterface\r\n>()"
                },
                {
                    "name": "feedReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/store/reducer/feed.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n  on(feedActions.getFeedSuccesAction, (state, action) => {\r\n    state = Object.assign({\r\n      ...state,\r\n      isLoading: false,\r\n      articleCount: action.articleCount,\r\n      error: null,\r\n    })\r\n    return adapter.addMany(action.feed, state)\r\n  }),\r\n  on(feedActions.getFeedAction, (state) => {\r\n    //state = Object.assign({ ...state, isLoading: true, error: null}),\r\n    return adapter.removeAll({ ...state, isLoading: true, error: null })\r\n  }),\r\n  on(feedActions.getFeedFailureAction, (state, action) =>\r\n    Object.assign({ ...state, isLoading: false, error: action.errorMessage }),\r\n  ),\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/store/reducer/feed.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "defaultValue": "adapter.getInitialState({\r\n  // additional entity state properties\r\n  isLoading: false,\r\n  error: null,\r\n  articleCount: 0,\r\n})"
                }
            ],
            "src/app/shared/modules/feed/store/selectors/feed.selectors.ts": [
                {
                    "name": "articleCountSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  feedFeatureSelector,\r\n  (feedState) => feedState.articleCount,\r\n)"
                },
                {
                    "name": "errorsSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  feedFeatureSelector,\r\n  (feedState) => feedState.error,\r\n)"
                },
                {
                    "name": "feedFeatureSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<State>('feed')"
                },
                {
                    "name": "isLoadingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  feedFeatureSelector,\r\n  (feedState) => feedState.isLoading,\r\n)"
                },
                {
                    "name": "selectAllFeed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(feedFeatureSelector, selectAllFeeds)"
                },
                {
                    "name": "selectAllFeeds",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "selectAll"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "adapter.getSelectors()"
                }
            ],
            "src/app/pages/article/store/selectors/articles.selectors.ts": [
                {
                    "name": "articleFeatureSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/selectors/articles.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<\r\n  ArticleStateInterface\r\n>('article')"
                },
                {
                    "name": "articleSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/selectors/articles.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  articleFeatureSelector,\r\n  (articleState: ArticleStateInterface) => articleState.data,\r\n)"
                },
                {
                    "name": "errorSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/selectors/articles.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  articleFeatureSelector,\r\n  (articleState: ArticleStateInterface) => articleState.error,\r\n)"
                },
                {
                    "name": "isFavoritingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/selectors/articles.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  articleFeatureSelector,\r\n  (articleState: ArticleStateInterface) => articleState.isFavoriting,\r\n)"
                },
                {
                    "name": "isLoadingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/selectors/articles.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  articleFeatureSelector,\r\n  (articleState: ArticleStateInterface) => articleState.isLoading,\r\n)"
                }
            ],
            "src/app/pages/article/store/reducer/article.reducer.ts": [
                {
                    "name": "articleReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/reducer/article.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n  on(\r\n    getArticleAction,\r\n    (state): ArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    getArticleSuccessAction,\r\n    (state, action): ArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.article,\r\n    }),\r\n  ),\r\n  on(\r\n    getArticleFailureAction,\r\n    (state): ArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  on(\r\n    favoriteArticleAction,\r\n    (state): ArticleStateInterface => ({\r\n      ...state,\r\n      isFavoriting: true,\r\n    }),\r\n  ),\r\n  on(\r\n    favoriteArticleSuccessAction,\r\n    (state, action): ArticleStateInterface => ({\r\n      ...state,\r\n      data: action.article,\r\n      isFavoriting: false,\r\n    }),\r\n  ),\r\n\r\n  on(\r\n    favoriteArticleFailureAction,\r\n    (state): ArticleStateInterface => ({\r\n      ...state,\r\n      isFavoriting: false,\r\n    }),\r\n  ),\r\n  on(routerNavigationAction, (): ArticleStateInterface => initialState),\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/reducer/article.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArticleStateInterface",
                    "defaultValue": "{\r\n  data: null,\r\n  isLoading: false,\r\n  error: null,\r\n  isFavoriting: false,\r\n}"
                }
            ],
            "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts": [
                {
                    "name": "articleSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  editArticleFeatureSelector,\r\n  (editArticleState: EditArticleStateInterface) => editArticleState.article,\r\n)"
                },
                {
                    "name": "editArticleFeatureSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<\r\n  EditArticleStateInterface\r\n>('editActicle')"
                },
                {
                    "name": "isLoadingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  editArticleFeatureSelector,\r\n  (editArticleState: EditArticleStateInterface) => editArticleState.isLoading,\r\n)"
                },
                {
                    "name": "isSubmittingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  editArticleFeatureSelector,\r\n  (editArticleState: EditArticleStateInterface) =>\r\n    editArticleState.isSubmitting,\r\n)"
                },
                {
                    "name": "validationErrorsSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  editArticleFeatureSelector,\r\n  (editArticleState: EditArticleStateInterface) =>\r\n    editArticleState.validationErrors,\r\n)"
                }
            ],
            "src/app/pages/auth/store/selectors/auth.selectors.ts": [
                {
                    "name": "authFeatureSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<AuthStateInterface>(\r\n  'auth',\r\n)"
                },
                {
                    "name": "currentUserSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.currentUser,\r\n)"
                },
                {
                    "name": "isAdminSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.isAdmin,\r\n)"
                },
                {
                    "name": "isAnonymousSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.isLoggedIn === false,\r\n)"
                },
                {
                    "name": "isLoadingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.isLoading,\r\n)"
                },
                {
                    "name": "isLoggedInSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.isLoggedIn,\r\n)"
                },
                {
                    "name": "isOwnerSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.isOwner,\r\n)"
                },
                {
                    "name": "isSubmittingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.isSubmitting,\r\n)"
                },
                {
                    "name": "validationErrorsSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  authFeatureSelector,\r\n  (authState: AuthStateInterface) => authState.validationErrors,\r\n)"
                }
            ],
            "src/app/pages/auth/store/reducer/auth.reducer.ts": [
                {
                    "name": "authReducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/reducer/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initalState,\r\n  on(\r\n    authRegAction.registerAction, //<-auth.register.actions'\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: true,\r\n      validationErrors: null,\r\n    }),\r\n  ),\r\n  on(\r\n    authRegAction.registerSuccessAction,\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n\r\n      //auth.register.actions.ts\r\n    }),\r\n  ),\r\n  on(\r\n    authRegAction.registerFailureAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      validationErrors: action.errors, //<-auth.register.actions.ts\r\n    }),\r\n  ),\r\n  on(\r\n    loginAction,\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: true,\r\n      validationErrors: null,\r\n    }),\r\n  ),\r\n  on(\r\n    loginSuccessAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      isLoggedIn: true,\r\n      isSubmitting: false,\r\n      currentUser: action.currentUser,\r\n      isOwner: action.currentUser.currentUser.owner,\r\n      isAdmin: action.currentUser.currentUser.admin,\r\n    }),\r\n  ),\r\n  on(\r\n    loginFailureAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      validationErrors: action.errors,\r\n    }),\r\n  ),\r\n  on(\r\n    getCurrentUserAction,\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    getCurrentUserSuccessAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      isLoggedIn: true,\r\n      isLoading: false,\r\n\r\n      currentUser: action.currentUser,\r\n    }),\r\n  ),\r\n  on(\r\n    getCurrentUserFailureAction,\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      isLoggedIn: false,\r\n      currentUser: null,\r\n    }),\r\n  ),\r\n  on(\r\n    updateCurrentUserSuccessAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      currentUser: action.currentUser,\r\n    }),\r\n  ),\r\n  on(\r\n    updateCurrentUserSuccessAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      currentUser: action.currentUser,\r\n    }),\r\n  ),\r\n  on(\r\n    updateCurrentUserFailureAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      //currentUser: action.currentUser,\r\n    }),\r\n  ),\r\n  on(\r\n    logoutSuccessAction,\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      ...initalState,\r\n      isLoggedIn: false,\r\n    }),\r\n  ),\r\n)"
                },
                {
                    "name": "initalState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/reducer/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthStateInterface",
                    "defaultValue": "{\r\n  isSubmitting: false,\r\n  currentUser: null,\r\n  isLoggedIn: false,\r\n  validationErrors: null,\r\n  isLoading: false,\r\n  isOwner: null,\r\n  isAdmin: null,\r\n}"
                }
            ],
            "src/app/shared/modules/articleComments/store/selectors/comment.selectors.ts": [
                {
                    "name": "commentFeatureSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/selectors/comment.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<\r\n  CommentStateInterface\r\n>('comment')"
                },
                {
                    "name": "commentSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/selectors/comment.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  commentFeatureSelector,\r\n  (commentState: CommentStateInterface) => commentState.data,\r\n)"
                },
                {
                    "name": "errorsSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/selectors/comment.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  commentFeatureSelector,\r\n  (commentState: CommentStateInterface) => commentState.error,\r\n)"
                },
                {
                    "name": "isLoadingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/selectors/comment.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  commentFeatureSelector,\r\n  (commentState: CommentStateInterface) => commentState.isLoading,\r\n)"
                }
            ],
            "src/app/shared/modules/articleComments/store/reducer/comment.reducer.ts": [
                {
                    "name": "CommentReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/reducer/comment.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n  on(\r\n    getCommentAction,\r\n    (state): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    getCommentSuccesAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.comment,\r\n    }),\r\n  ),\r\n  on(\r\n    getCommentFailureAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  //********************************************* */\r\n  on(\r\n    updateCommentAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    updateCommentSuccessAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      data: action.comment,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  on(\r\n    updateCommentFailureAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  //********************************************* */\r\n\r\n  on(\r\n    postCommentAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    postCommentSuccessAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      data: action.comment,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  on(\r\n    postCommentFailureAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  on(\r\n    deleteCommentAction,\r\n    (state): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    deleteCommentSuccesAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.comment,\r\n    }),\r\n  ),\r\n  on(\r\n    deleteCommentFailureAction,\r\n    (state, action): CommentStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  on(routerNavigationAction, (): CommentStateInterface => initialState),\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/reducer/comment.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CommentStateInterface",
                    "defaultValue": "{\r\n  data: null,\r\n  isLoading: false,\r\n  error: null,\r\n}"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/pages/createArticle/store/actions/createArticle.actions.ts": [
                {
                    "name": "createArticleAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/createArticle/store/actions/createArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.CREATE_ARTICLE,\r\n  props<{ articleInput: ArticleInputInterface }>(),\r\n)"
                },
                {
                    "name": "createArticleFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/createArticle/store/actions/createArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.CREATE_ARTICLE_FAILURE,\r\n  //props<{ errors: BackendErrorsInterface }>(),\r\n)"
                },
                {
                    "name": "createArticleSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/createArticle/store/actions/createArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.CREATE_ARTICLE_SUCCESS,\r\n  props<{ article: ArticlesInterface }>(),\r\n)"
                }
            ],
            "src/app/pages/createArticle/store/selectors/createArticle.selectors.ts": [
                {
                    "name": "createArticleFeatureSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/createArticle/store/selectors/createArticle.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<\r\n  AppStateInterface,\r\n  CreateArticleStateInterface\r\n>('createActicle')"
                },
                {
                    "name": "isSubmittingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/createArticle/store/selectors/createArticle.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  createArticleFeatureSelector,\r\n  (createArticleState: CreateArticleStateInterface) =>\r\n    createArticleState.isSubmitting,\r\n)"
                },
                {
                    "name": "validationErrorsSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/createArticle/store/selectors/createArticle.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  createArticleFeatureSelector,\r\n  (createArticleState: CreateArticleStateInterface) =>\r\n    createArticleState.validationErrors,\r\n)"
                }
            ],
            "src/app/pages/createArticle/store/reducer/createArticle.reducer.ts": [
                {
                    "name": "createArticleReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/createArticle/store/reducer/createArticle.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n  on(\r\n    articleAction.createArticleAction,\r\n    (state): CreateArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: true,\r\n    }),\r\n  ),\r\n  on(\r\n    articleAction.createArticleSuccessAction,\r\n    (state): CreateArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n    }),\r\n  ),\r\n  on(\r\n    articleAction.createArticleFailureAction,\r\n    (state, action): CreateArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      //validationErrors: action.errors,\r\n    }),\r\n  ),\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/createArticle/store/reducer/createArticle.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CreateArticleStateInterface",
                    "defaultValue": "{\r\n  isSubmitting: false,\r\n  validationErrors: null,\r\n}"
                }
            ],
            "src/app/shared/modules/articleContentBlock/components/bodys/type001/display/stories/articleBodyType001.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleContentBlock/components/bodys/type001/display/stories/articleBodyType001.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleContentBlock/components/bodys/type001/display/stories/articleBodyType001.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleContentBlock/components/bodys/type001/display/stories/articleBodyType001.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/modules/articleContentBlock/components/imageImage/type001/display/stories/imageImageType.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/display/stories/imageImageType.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/display/stories/imageImageType.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OneImg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/display/stories/imageImageType.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/display/stories/imageImageType.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/modules/articleContentBlock/components/image-text/type001/display/stories/imageTextType001.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleContentBlock/components/image-text/type001/display/stories/imageTextType001.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleContentBlock/components/image-text/type001/display/stories/imageTextType001.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleContentBlock/components/image-text/type001/display/stories/imageTextType001.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/pages/article/store/actions/deleteArticle.actions.ts": [
                {
                    "name": "deleteArticleAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/actions/deleteArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.DELETE_ARTICLE,\r\n  props<{ title: string }>(),\r\n)"
                },
                {
                    "name": "deleteArticleFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/actions/deleteArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.DELETE_ARTICLE_FAILURE,\r\n)"
                },
                {
                    "name": "deleteArticleSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/actions/deleteArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.DELETE_ARTICLE_SUCCESS,\r\n)"
                }
            ],
            "src/app/shared/modules/articleComments/store/actions/deleteComment.actions.ts": [
                {
                    "name": "deleteCommentAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/actions/deleteComment.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.DELETE_COMMENT,\r\n  props<{ url: string }>(),\r\n)"
                },
                {
                    "name": "deleteCommentFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/actions/deleteComment.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.DELETE_COMMENT_FAILURE,\r\n)"
                },
                {
                    "name": "deleteCommentSuccesAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/actions/deleteComment.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.DELETE_COMMENT_SUCCESS,\r\n  props<{ comment: CommentInterface }>(),\r\n)"
                }
            ],
            "src/app/pages/editArticle/store/reducer/editArticle.reducer.ts": [
                {
                    "name": "EditArticleReducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/editArticle/store/reducer/editArticle.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n  on(\r\n    updateArticleAction.updateArticleAction,\r\n    (state): EditArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: true,\r\n    }),\r\n  ),\r\n  on(\r\n    updateArticleAction.updateArticleSuccessAction,\r\n    (state): EditArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n    }),\r\n  ),\r\n  on(\r\n    updateArticleAction.updateArticleFailureAction,\r\n    (state, action): EditArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      validationErrors: action.errors,\r\n    }),\r\n  ),\r\n  on(\r\n    getArticleAction.getArticleAction,\r\n    (state): EditArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    getArticleAction.getArticleSuccessAction,\r\n    (state, action): EditArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      article: action.article,\r\n    }),\r\n  ),\r\n  on(\r\n    getArticleAction.getArticleFailureAction,\r\n    (state): EditArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n  on(\r\n    updateArticleAction.saveArticleAction,\r\n    (state, action): EditArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      article: action.article,\r\n    }),\r\n  ),\r\n  //on(routerNavigationAction, (): EditArticleStateInterface => initialState),\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/editArticle/store/reducer/editArticle.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EditArticleStateInterface",
                    "defaultValue": "{\r\n  isSubmitting: false,\r\n  validationErrors: null,\r\n  article: null,\r\n  isLoading: false,\r\n}"
                }
            ],
            "src/app/pages/auth/store/actions/auth.login.actions.ts": [
                {
                    "name": "emailValFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.login.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.EMAIL_VALIDATION_FAILURE,\r\n)"
                },
                {
                    "name": "loginAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.login.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  //-> auth.reducer.ts @@ auth.login.effects.ts\r\n  ActionTypes.LOGIN, //<-auth.types.actions\r\n  props<{ payload: LoginRequestInterface }>(),\r\n)"
                },
                {
                    "name": "loginFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.login.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.LOGIN_FAILURE,\r\n  props<{ errors: BackendErrorsInterface }>(), //<-auth.types.actions\r\n)"
                },
                {
                    "name": "loginSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.login.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.LOGIN_SUCCESS, //<-auth.types.actions\r\n  props<{ currentUser: CurrentUserInterface }>(),\r\n)"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  baseUrl: 'http://104.254.15.78:8000/api',\r\n\r\n  //comments: . location article componet ts\r\n  commentsUrl: `article/\"this.id\"/commentFeed/`, //todo: not implemented\r\n  globalFeedUrl: '/article/listArticle/',\r\n\r\n  //articleTagFeed.component.ts\r\n  tagFeedUrl: '/listArticle/tags/?tags=', //todo: not implemented\r\n\r\n  //auth: src\\app\\pages\\auth\\services\\auth.service.ts\r\n  authLoginApiUrl: '/usermanagement/login/',\r\n  authRegisterApiUrl: '/usermanagement/register/',\r\n  authAutoLoginApiUrl: '/usermanagement/autoLogin/',\r\n  authLogoutApiUrl: '/usermanagement/logout/',\r\n\r\n  //create article: src\\app\\pages\\createArticle\\services\\createArticle.service.ts\r\n  createArticleApiUrl: `\"environment.baseUrl\"/article/`, //todo: not implemented\r\n  //edit article: src\\app\\pages\\editArticle\\services.ts\r\n  editArticleAprUrl: `\"environment.baseUrl\"/article/edit/\"id\"/`, //todo: not implemented\r\n\r\n  //TODO: create\r\n  //userProfile:\r\n  authProfileApiUrl: '/usermanagement/profileUpdate/',\r\n  favoritedFeedApiUrl: `/articleList/favorite/\"user.id\"`,\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  baseUrl: 'http://104.254.15.78:8000/api',\r\n  baseMedia: 'http://104.254.15.78:8000/',\r\n\r\n  contentTypes: {\r\n    title: 'title',\r\n    image: 'image',\r\n    body: 'body',\r\n    imageImage: 'image-image',\r\n    imageBody: 'image-body',\r\n    bodyImage: 'body-image',\r\n    textText: 'text-text',\r\n  },\r\n\r\n  //comments: src\\app\\pages\\article\\components\\article\\article.component.ts\r\n  getCommentsApiUrl: `article/commentFeed/`, // (+ '${article.id}')\r\n\r\n  //globelFeed: src\\app\\pages\\articleFeed\\components\\globalFeed\\globalFeed.component.ts\r\n  globalFeedUrl: '/listArticle/',\r\n\r\n  //articleTagFeed.component.ts\r\n  tagFeedUrl: '/listArticle/', // (+ '${tagName}')\r\n\r\n  //auth: src\\app\\pages\\auth\\services\\auth.service.ts\r\n  authLoginApiUrl: '/usermanagement/login/',\r\n  authRegisterApiUrl: '/usermanagement/register/',\r\n  authAutoLoginApiUrl: '/usermanagement/autoLogin/',\r\n  authLogoutApiUrl: '/usermanagement/logout/',\r\n\r\n  //create article: src\\app\\pages\\createArticle\\services\\createArticle.service.ts\r\n  createArticleApiUrl: `/article/`,\r\n\r\n  //get article src\\app\\shared\\services\\article.service.ts\r\n  getArticleApiUrl: `/article/`, //(+ '${article.id}/')?chapter=3\r\n  favoriteApiUrl: `/article/favorite/`, //todo: not implemented (+ '${article.id}/'),\r\n\r\n  //edit article: src\\app\\pages\\editArticle\\services.ts\r\n  editArticleApiUrl: `/article/edit/`, // (+ '${article.id}/')\r\n\r\n  //delete article: src\\app\\pages\\deleteArticle\\services.ts\r\n  deleteArticleApiUrl: `/article/edit/`, //(+ '${article.id}/')\r\n\r\n  //comments src\\app\\shared\\modules\\articleComments\\services\\comment.service.ts\r\n  editCommentApiUrl: `/article/edit/comment/`, //todo: not implemented (+ '${comment.id}/')\r\n  DeleteCommentApiUrl: `/article/edit/comment/`, //todo: not implemented (+ '${comment.id}/')\r\n  postCommentApiUrl: `/article/comment/`, //todo: not implemented (+ '${article.id}/')\r\n\r\n  //TODO: create\r\n\r\n  favoritedFeedApiUrl: `/listArticle/favorite/`, //todo: not implemented (+ '${user.id}/'),\r\n  //userProfile:\r\n  authProfileApiUrl: '/usermanagement/profileUpdate/', //todo: not implemented\r\n\r\n  profileApiUrl: `/usermanagement/profile/`, //todo: not implemented (+ '${user.id}/'),\r\n}"
                }
            ],
            "src/app/pages/userProfile/store/selectors/userProfile.selectors.ts": [
                {
                    "name": "errorSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/userProfile/store/selectors/userProfile.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  userProfileFeatureSelector,\r\n  (userProfileState: UserProfileStateInterface) => userProfileState.error,\r\n)"
                },
                {
                    "name": "isLoadingSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/userProfile/store/selectors/userProfile.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  userProfileFeatureSelector,\r\n  (userProfileState: UserProfileStateInterface) => userProfileState.isLoading,\r\n)"
                },
                {
                    "name": "userProfileFeatureSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/userProfile/store/selectors/userProfile.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<\r\n  UserProfileStateInterface\r\n>('userProfile')"
                },
                {
                    "name": "userProfileSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/userProfile/store/selectors/userProfile.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  userProfileFeatureSelector,\r\n  (userProfileState: UserProfileStateInterface) => userProfileState.data,\r\n)"
                }
            ],
            "src/app/pages/article/components/article/stories/article.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/components/article/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  article: {\r\n    id: 5,\r\n    content: [\r\n      {\r\n        title: '4 Strategies for Combatting Decision Fatigue',\r\n        body: null,\r\n        type: 'title',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 0,\r\n      },\r\n      {\r\n        title: null,\r\n        body: null,\r\n        type: 'image',\r\n        imageOne: 'media/articles/2022/03/07/Content_TW3sM57.jpeg',\r\n        imageTwo: null,\r\n        customObject: false,\r\n        position: 1,\r\n      },\r\n      {\r\n        title: null,\r\n        body:\r\n          'Science proves it: decision fatigue is a real thing. By the end of your workday, your emotional and intellectual horsepower is depleted. When leaders invest precious energy in low-impact decisions, everyone pays a price. Hoarding decisions undervalues employees. It also keeps you from making bigger decisions that really matter. You can’t escape decision-making, but you can separate the high-leverage decisions from the rest.\\n\\nThere are certain kinds of decisions that only you can make. That’s true for everyone in your organization. When you activate people to lead within their sphere of influence, you get the best result across your entire business. To maximize the return on daily decision-making, follow these four simple strategies.',\r\n        type: 'body',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 2,\r\n      },\r\n      {\r\n        title: '1. NEVER MAKE THE SAME DECISION TWICE',\r\n        body: null,\r\n        type: 'title',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 3,\r\n      },\r\n      {\r\n        title: null,\r\n        body:\r\n          'Many decisions are recurring choices. When you’re determining which vendors to use or what schedule to follow, simply make the decision once. Then automate it or document it. When you are asked about vacation approvals, parental leave, or compensation changes, documented policies can save immense amounts of brainpower. Here’s an example. A few years ago, I decided to no longer do one-on-one consulting. Now, when the request comes in, my executive assistant knows to decline on my behalf. I benefit from this strategy every day.',\r\n        type: 'body',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 4,\r\n      },\r\n      {\r\n        title: '2. LET OTHERS CHOOSE FOR YOU',\r\n        body: null,\r\n        type: 'title',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 5,\r\n      },\r\n      {\r\n        title: null,\r\n        body:\r\n          'Many leaders fall into the trap of micro-managing. This not only zaps your mental energy but also negatively impacts your employees. It’s tempting to overthink non-essential choices. Instead, ask yourself, Can someone else answer this for me? Holding onto trivial decisions is costly and foolish. Hire talented people and let them lead with excellence.',\r\n        type: 'body',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 6,\r\n      },\r\n      {\r\n        title: '3. USE A DEFINED PROCESS FOR MAKING TOUGH DECISIONS',\r\n        body: null,\r\n        type: 'title',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 7,\r\n      },\r\n      {\r\n        title: null,\r\n        body:\r\n          'Build a process that considers all variables. Years ago, I started using a recommendation briefing form. When someone on my team has an idea for our business, they write up a one-sheet summary of the recommendation. This sheet includes background information, rationale, resources needed, and the projected financial impact. Instead of pitching an idea and leaving me to do the profitability analysis, my team knows to do their own leg work. At this point, my job is simply choosing yes or no. No follow-up meetings are needed for the deliberation process.',\r\n        type: 'body',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 8,\r\n      },\r\n      {\r\n        title: '4. TAKE CARE OF YOURSELF',\r\n        body: null,\r\n        type: 'title',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 9,\r\n      },\r\n      {\r\n        title: null,\r\n        body:\r\n          'Your thinking is manipulated by biochemical reactions in your body. In fact, there’s a direct correlation between inadequate sleep and poor decision-making. To make the best decisions, you must be in a good place. This includes getting proper rest, regular exercise, and adequate nutrition. Take time to rejuvenate so you can lead your company well.\\n\\nWhen you add these four simple strategies, you’ll gain the confidence to make fewer, faster, and better decisions. Which strategy will you start implementing this week?',\r\n        type: 'body',\r\n        imageOne: null,\r\n        imageTwo: 'media/',\r\n        customObject: false,\r\n        position: 10,\r\n      },\r\n    ],\r\n    author: {\r\n      authorId: 5,\r\n      username: 'asdf',\r\n      profileImg: 'media/Profile/default.jpeg',\r\n    },\r\n    articleTitle: '4 Strategies for Combatting Decision Fatigue',\r\n    articleImage: 'media/articles/2022/03/07/article_yM3EjTM.jpeg',\r\n    articleDescription: '4 Strategies for Combatting Decision Fatigue',\r\n    creationDate: '2022-03-03T20:22:03.849905Z',\r\n    tags: [],\r\n  },\r\n}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/components/article/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/components/article/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "NoStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/components/article/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/components/article/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/pages/auth/components/login-component/stories/article.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/components/login-component/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/components/login-component/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/components/login-component/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "NoStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/components/login-component/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/components/login-component/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/pages/auth/components/registation-component/stories/article.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/components/registation-component/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/components/registation-component/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/components/registation-component/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "NoStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/components/registation-component/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/components/registation-component/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "NoStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "NoStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "NoStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "NoStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "NoStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "NoStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "NoStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "NoStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "NoStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "NoStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/modules/feed/components/feed/stories/article.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/components/feed/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/components/feed/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/components/feed/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "NoStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/components/feed/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/components/feed/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "NoStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/modules/spinners/components/spinnerType001/stories/article.stories.ts": [
                {
                    "name": "example_data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/spinners/components/spinnerType001/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/spinners/components/spinnerType001/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/spinners/components/spinnerType001/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  state_key: example_data,\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/spinners/components/spinnerType001/stories/article.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/pages/article/store/actions/favoriteArticle.actions.ts": [
                {
                    "name": "favoriteArticleAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/actions/favoriteArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.FAVORITE_ARTICLE,\r\n  props<{ myArticle: ArticlesInterface }>(),\r\n)"
                },
                {
                    "name": "favoriteArticleFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/actions/favoriteArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.FAVORITE_ARTICLE_FAILURE,\r\n)"
                },
                {
                    "name": "favoriteArticleSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/actions/favoriteArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.FAVORITE_ARTICLE_SUCCESS,\r\n  props<{ article: ArticlesInterface }>(),\r\n)"
                }
            ],
            "src/app/pages/article/store/actions/getArticle.actions.ts": [
                {
                    "name": "getArticleAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/actions/getArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_ARTICLE,\r\n  props<{ title: string }>(),\r\n)"
                },
                {
                    "name": "getArticleFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/actions/getArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_ARTICLE_FAILURE,\r\n)"
                },
                {
                    "name": "getArticleSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/store/actions/getArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_ARTICLE_SUCCESS,\r\n  props<{ article: ArticlesInterface }>(),\r\n)"
                }
            ],
            "src/app/pages/editArticle/store/actions/getArticle.actions.ts": [
                {
                    "name": "getArticleAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/editArticle/store/actions/getArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_ARTICLE,\r\n  props<{ title: string }>(),\r\n)"
                },
                {
                    "name": "getArticleFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/editArticle/store/actions/getArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_ARTICLE_FAILURE,\r\n)"
                },
                {
                    "name": "getArticleSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/editArticle/store/actions/getArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_ARTICLE_SUCCESS,\r\n  props<{ article: ArticlesInterface }>(),\r\n)"
                }
            ],
            "src/app/shared/modules/articleComments/store/actions/getComment.actions.ts": [
                {
                    "name": "getCommentAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/actions/getComment.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_COMMENT,\r\n  props<{ url: string }>(),\r\n)"
                },
                {
                    "name": "getCommentFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/actions/getComment.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_COMMENT_FAILURE,\r\n)"
                },
                {
                    "name": "getCommentSuccesAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/actions/getComment.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_COMMENT_SUCCESS,\r\n  props<{ comment: CommentInterface }>(),\r\n)"
                }
            ],
            "src/app/pages/auth/store/actions/auth.getCurrentUser.actions.ts": [
                {
                    "name": "getCurrentUserAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.getCurrentUser.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_CURRENT_USER, //<-auth.types.actions\r\n)"
                },
                {
                    "name": "getCurrentUserFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.getCurrentUser.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_CURRENT_USER_FAILURE, //<-auth.types.actions\r\n)"
                },
                {
                    "name": "getCurrentUserSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.getCurrentUser.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_CURRENT_USER_SUCCESS, //<-auth.types.actions\r\n  props<{ currentUser: CurrentUserInterface }>(),\r\n)"
                }
            ],
            "src/app/shared/modules/feed/store/actions/getFeed.actions.ts": [
                {
                    "name": "getFeedAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/store/actions/getFeed.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_FEED,\r\n  props<{ url: string }>(),\r\n)"
                },
                {
                    "name": "getFeedFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/store/actions/getFeed.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_FEED_FAILURE,\r\n  props<{ errorMessage: string }>(),\r\n)"
                },
                {
                    "name": "getFeedSuccesAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/feed/store/actions/getFeed.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_FEED_SUCCESS,\r\n  props<{ feed: ArticlesInterface[]; articleCount: number }>(),\r\n)"
                }
            ],
            "src/app/shared/modules/articleForms/components/store/actions/getTags.actions.ts": [
                {
                    "name": "getTagAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleForms/components/store/actions/getTags.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(ActionTypes.GET_TAGS)"
                },
                {
                    "name": "getTagFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleForms/components/store/actions/getTags.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(ActionTypes.GET_TAGS_FAILURE)"
                },
                {
                    "name": "getTagSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleForms/components/store/actions/getTags.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_TAGS_SUCCESS,\r\n  props<{ tags: any }>(), //todo\r\n)"
                }
            ],
            "src/app/pages/userProfile/store/actions/getUserProfile.actions.ts": [
                {
                    "name": "getUserProfileAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/userProfile/store/actions/getUserProfile.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_USER_PROFILE,\r\n  props<{ slug: string }>(),\r\n)"
                },
                {
                    "name": "getUserProfileFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/userProfile/store/actions/getUserProfile.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_USER_PROFILE_FAILURE,\r\n)"
                },
                {
                    "name": "getUserProfileSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/userProfile/store/actions/getUserProfile.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.GET_USER_PROFILE_SUCCESS,\r\n  props<{ userProfile: UserProfileInterface }>(),\r\n)"
                }
            ],
            "src/app/pages/userProfile/store/reducer/userProfile.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/userProfile/store/reducer/userProfile.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserProfileStateInterface",
                    "defaultValue": "{\r\n  data: null,\r\n  isLoading: false,\r\n  error: null,\r\n}"
                },
                {
                    "name": "userProfileReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/userProfile/store/reducer/userProfile.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n  on(\r\n    getUserProfileAction,\r\n    (state): UserProfileStateInterface => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    getUserProfileSuccessAction,\r\n    (state, action): UserProfileStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.userProfile,\r\n    }),\r\n  ),\r\n  on(\r\n    getUserProfileFailureAction,\r\n    (state): UserProfileStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n    }),\r\n  ),\r\n)"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/pages/auth/store/actions/auth.sync.actions.ts": [
                {
                    "name": "logoutAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.sync.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(ActionTypes.LOGOUT)"
                },
                {
                    "name": "logoutFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.sync.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.LOGOUT_FAILURE_ACTION,\r\n)"
                },
                {
                    "name": "logoutSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.sync.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.LOGOUT_SUCCESS_ACTION,\r\n)"
                }
            ],
            "src/app/shared/modules/material/material.module.ts": [
                {
                    "name": "materialModules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/material/material.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[MatIconModule]"
                }
            ],
            "src/app/shared/modules/articleComments/store/actions/postComment.actions.ts": [
                {
                    "name": "postCommentAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/actions/postComment.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.POST_COMMENT,\r\n  props<{ url: string; comment: CommentInterface }>(),\r\n)"
                },
                {
                    "name": "postCommentFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/actions/postComment.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.POST_COMMENT_FAILURE,\r\n)"
                },
                {
                    "name": "postCommentSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/actions/postComment.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.POST_COMMENT_SUCCESS,\r\n  props<{ comment: CommentInterface }>(),\r\n)"
                }
            ],
            "src/app/pages/auth/store/actions/auth.register.actions.ts": [
                {
                    "name": "registerAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.register.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  //-> auth.reducer.ts @@ auth.register.effects.ts\r\n  ActionTypes.REGISTER, //<-auth.types.actions\r\n  props<{ payload: AuthRegistrationRequestInterface }>(),\r\n)"
                },
                {
                    "name": "registerFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.register.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.REGISTER_FAILURE, //<-auth.types.actions\r\n  props<{ errors: BackendErrorsInterface }>(),\r\n)"
                },
                {
                    "name": "registerSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.register.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.REGISTER_SUCCESS, //<-auth.types.actions\r\n)"
                }
            ],
            "src/app/pages/home/home.module.ts": [
                {
                    "name": "route",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/home/home.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[{ path: '', component: HomeComponent }]"
                }
            ],
            "src/app/pages/article/article.module.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/article/article.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    path: 'article/:title',\r\n    component: ArticleComponent,\r\n  },\r\n]"
                }
            ],
            "src/app/pages/articleTagFeed/articleTagFeed.module.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/articleTagFeed/articleTagFeed.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    path: 'feed/tag/:slug',\r\n    component: TagFeedComponent,\r\n  },\r\n]"
                }
            ],
            "src/app/pages/articleFeed/globalFeed.module.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/articleFeed/globalFeed.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[{ path: '', component: GlobalFeedComponent }]"
                }
            ],
            "src/app/pages/createArticle/createArticles.module.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/createArticle/createArticles.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    path: 'article/new',\r\n    component: CreateArticleComponent,\r\n  },\r\n]"
                }
            ],
            "src/app/pages/editArticle/editArticles.module.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/editArticle/editArticles.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    path: 'article/:title/edit',\r\n    component: EditArticleComponent,\r\n  },\r\n]"
                }
            ],
            "src/app/pages/userProfile/userProfile.module.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/userProfile/userProfile.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    path: 'profile/:user',\r\n    component: UserProfileComponent,\r\n  },\r\n]"
                }
            ],
            "src/app/shared/modules/articlePreview/articleForms.module.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articlePreview/articleForms.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[{ path: 'test', component: ArticlePreviewComponent }]"
                }
            ],
            "src/app/pages/editArticle/store/actions/updateArticle.actions.ts": [
                {
                    "name": "saveArticleAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/editArticle/store/actions/updateArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.SAVE_ARTICLE,\r\n  props<{ article: ArticlesInterface }>(),\r\n)"
                },
                {
                    "name": "updateArticleAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/editArticle/store/actions/updateArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_ARTICLE,\r\n  props<{ articleInput: ArticleInputInterface; title: string }>(),\r\n)"
                },
                {
                    "name": "updateArticleFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/editArticle/store/actions/updateArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_ARTICLE_FAILURE,\r\n  props<{ errors: BackendErrorsInterface }>(),\r\n)"
                },
                {
                    "name": "updateArticleSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/editArticle/store/actions/updateArticle.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_ARTICLE_SUCCESS,\r\n  props<{ article: ArticlesInterface }>(),\r\n)"
                }
            ],
            "src/app/shared/modules/articleComments/store/actions/updateComment.actions.ts": [
                {
                    "name": "updateCommentAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/actions/updateComment.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_COMMENT,\r\n  props<{ url: string; comment: CommentInterface }>(),\r\n)"
                },
                {
                    "name": "updateCommentFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/actions/updateComment.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_COMMENT_FAILURE,\r\n)"
                },
                {
                    "name": "updateCommentSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modules/articleComments/store/actions/updateComment.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_COMMENT_SUCCESS,\r\n  props<{ comment: CommentInterface }>(),\r\n)"
                }
            ],
            "src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions.ts": [
                {
                    "name": "updateCurrentUserAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  //-> auth.reducer.ts @@ auth.login.effects.ts\r\n  ActionTypes.UPDATE_CURRENT_USER, //<-auth.types.actions\r\n  props<{ currentUserInput: AuthUpdateInterface }>(),\r\n)"
                },
                {
                    "name": "updateCurrentUserFailureAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_CURRENT_USER_FAILURE, //<-auth.types.actions\r\n  //props<{ errors: BackendErrorsInterface }>(),\r\n)"
                },
                {
                    "name": "updateCurrentUserSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  ActionTypes.UPDATE_CURRENT_USER_SUCCESS, //<-auth.types.actions\r\n  props<{ currentUser: CurrentUserInterface | null }>(),\r\n)"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/pages/article/store/reducer/article.reducer.ts": [
                {
                    "name": "ArticleReducers",
                    "file": "src/app/pages/article/store/reducer/article.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "ArticleStateInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "ArticleStateInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/auth/store/reducer/auth.reducer.ts": [
                {
                    "name": "authReducer",
                    "file": "src/app/pages/auth/store/reducer/auth.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "AuthStateInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "AuthStateInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/createArticle/store/reducer/createArticle.reducer.ts": [
                {
                    "name": "createArticleReducers",
                    "file": "src/app/pages/createArticle/store/reducer/createArticle.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "CreateArticleStateInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "CreateArticleStateInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/editArticle/store/reducer/editArticle.reducer.ts": [
                {
                    "name": "EditArticleReducer",
                    "file": "src/app/pages/editArticle/store/reducer/editArticle.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "EditArticleStateInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "EditArticleStateInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/pages/userProfile/store/reducer/userProfile.reducer.ts": [
                {
                    "name": "reducers",
                    "file": "src/app/pages/userProfile/store/reducer/userProfile.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "UserProfileStateInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "UserProfileStateInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/modules/articleComments/store/reducer/comment.reducer.ts": [
                {
                    "name": "reducers",
                    "file": "src/app/shared/modules/articleComments/store/reducer/comment.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "CommentStateInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "CommentStateInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/pages/article/store/actions/articles.types.actions.ts": [
                {
                    "name": "ActionTypes",
                    "childs": [
                        {
                            "name": "GET_ARTICLE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Article] Get article"
                        },
                        {
                            "name": "GET_ARTICLE_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Article] Get article success"
                        },
                        {
                            "name": "GET_ARTICLE_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Article] Get article failure"
                        },
                        {
                            "name": "DELETE_ARTICLE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Article] Delete article"
                        },
                        {
                            "name": "DELETE_ARTICLE_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Article] Delete article success"
                        },
                        {
                            "name": "DELETE_ARTICLE_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Article] Delete article failure"
                        },
                        {
                            "name": "FAVORITE_ARTICLE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Article] favorite Acticle toggle"
                        },
                        {
                            "name": "FAVORITE_ARTICLE_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Article] favorite Acticle toggle success"
                        },
                        {
                            "name": "FAVORITE_ARTICLE_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Article] favorite Acticle toggle failure"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/pages/article/store/actions/articles.types.actions.ts"
                }
            ],
            "src/app/pages/auth/store/actions/auth.types.actions.ts": [
                {
                    "name": "ActionTypes",
                    "childs": [
                        {
                            "name": "REGISTER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Registering"
                        },
                        {
                            "name": "REGISTER_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Register Success"
                        },
                        {
                            "name": "REGISTER_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Register Failure"
                        },
                        {
                            "name": "LOGIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Loginng"
                        },
                        {
                            "name": "LOGIN_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Login Success"
                        },
                        {
                            "name": "LOGIN_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Login Failure"
                        },
                        {
                            "name": "EMAIL_VALIDATION_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Email not validated"
                        },
                        {
                            "name": "GET_CURRENT_USER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Getting current user"
                        },
                        {
                            "name": "GET_CURRENT_USER_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Get current user Success"
                        },
                        {
                            "name": "GET_CURRENT_USER_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Get current user Failure"
                        },
                        {
                            "name": "UPDATE_CURRENT_USER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Updating current user"
                        },
                        {
                            "name": "UPDATE_CURRENT_USER_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Updating success"
                        },
                        {
                            "name": "UPDATE_CURRENT_USER_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Updating failure"
                        },
                        {
                            "name": "LOGOUT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Logout"
                        },
                        {
                            "name": "LOGOUT_SUCCESS_ACTION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Logout Success"
                        },
                        {
                            "name": "LOGOUT_FAILURE_ACTION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Auth] Logout failure"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/pages/auth/store/actions/auth.types.actions.ts"
                }
            ],
            "src/app/pages/createArticle/store/actions/createArticle.types.actions.ts": [
                {
                    "name": "ActionTypes",
                    "childs": [
                        {
                            "name": "CREATE_ARTICLE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Create article] Create Article"
                        },
                        {
                            "name": "CREATE_ARTICLE_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Create article] Creaate Article Success"
                        },
                        {
                            "name": "CREATE_ARTICLE_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Create article] Create Article Failed"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/pages/createArticle/store/actions/createArticle.types.actions.ts"
                }
            ],
            "src/app/pages/editArticle/store/actions/updateArticle.types.actions.ts": [
                {
                    "name": "ActionTypes",
                    "childs": [
                        {
                            "name": "UPDATE_ARTICLE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Update article] Update Article"
                        },
                        {
                            "name": "UPDATE_ARTICLE_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Update article] Update Article Success"
                        },
                        {
                            "name": "UPDATE_ARTICLE_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Update article] Update Article Failed"
                        },
                        {
                            "name": "GET_ARTICLE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Update article] Get Article"
                        },
                        {
                            "name": "GET_ARTICLE_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Update article] Get Article Success"
                        },
                        {
                            "name": "GET_ARTICLE_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Update article] Get Article Failed"
                        },
                        {
                            "name": "SAVE_ARTICLE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Save article] Save Article"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/pages/editArticle/store/actions/updateArticle.types.actions.ts"
                }
            ],
            "src/app/pages/userProfile/store/actions/userProfile.types.actions.ts": [
                {
                    "name": "ActionTypes",
                    "childs": [
                        {
                            "name": "GET_USER_PROFILE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[User Profile] Get user profile"
                        },
                        {
                            "name": "GET_USER_PROFILE_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[User Profile] Get user profile success"
                        },
                        {
                            "name": "GET_USER_PROFILE_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[User Profile] Get user profile failure"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/pages/userProfile/store/actions/userProfile.types.actions.ts"
                }
            ],
            "src/app/shared/modules/articleComments/store/actions/comment.types.actions.ts": [
                {
                    "name": "ActionTypes",
                    "childs": [
                        {
                            "name": "GET_COMMENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[COMMENT] getting COMMENT"
                        },
                        {
                            "name": "GET_COMMENT_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[COMMENT] getting COMMENT failed"
                        },
                        {
                            "name": "GET_COMMENT_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[COMMENT] getting COMMENT succeeded"
                        },
                        {
                            "name": "POST_COMMENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[COMMENT] post COMMENT"
                        },
                        {
                            "name": "POST_COMMENT_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[COMMENT] post COMMENT failed"
                        },
                        {
                            "name": "POST_COMMENT_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[COMMENT] post COMMENT succeeded"
                        },
                        {
                            "name": "DELETE_COMMENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[COMMENT] delete COMMENT"
                        },
                        {
                            "name": "DELETE_COMMENT_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[COMMENT] delete COMMENT failed"
                        },
                        {
                            "name": "DELETE_COMMENT_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[COMMENT] delete COMMENT succeeded"
                        },
                        {
                            "name": "UPDATE_COMMENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[COMMENT] update COMMENT"
                        },
                        {
                            "name": "UPDATE_COMMENT_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[COMMENT] update COMMENT failed"
                        },
                        {
                            "name": "UPDATE_COMMENT_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[COMMENT] update COMMENT succeeded"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/modules/articleComments/store/actions/comment.types.actions.ts"
                }
            ],
            "src/app/shared/modules/feed/store/actions/feed.types.actions.ts": [
                {
                    "name": "ActionTypes",
                    "childs": [
                        {
                            "name": "GET_FEED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Feed] getting feed"
                        },
                        {
                            "name": "GET_FEED_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Feed] getting feed failed"
                        },
                        {
                            "name": "GET_FEED_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Feed] getting feed succeeded"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/modules/feed/store/actions/feed.types.actions.ts"
                }
            ],
            "src/app/shared/modules/articleForms/components/store/actions/tags.types.actions.ts": [
                {
                    "name": "ActionTypes",
                    "childs": [
                        {
                            "name": "GET_TAGS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[tags] getting tags"
                        },
                        {
                            "name": "GET_TAGS_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[tags] getting tags failed"
                        },
                        {
                            "name": "GET_TAGS_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[tags] getting tags succeeded"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/modules/articleForms/components/store/actions/tags.types.actions.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "**",
                        "redirectTo": "/"
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/pages/auth/auth.module.ts",
                "module": "AuthModule",
                "children": [
                    {
                        "path": "register",
                        "component": "RegisterComponent"
                    },
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "emailvalidation",
                        "component": "EmailValidationComponent"
                    },
                    {
                        "path": "profileupdate",
                        "component": "UpdateProfileComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/article.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/components/article/article.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArticleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/components/article/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/components/article/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/components/article/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/components/article/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/components/article/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/services/article.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DeleteArticleService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/actions/deleteArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteArticleAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/actions/deleteArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteArticleFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/actions/deleteArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteArticleSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/actions/favoriteArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "favoriteArticleAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/actions/favoriteArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "favoriteArticleFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/actions/favoriteArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "favoriteArticleSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/actions/getArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getArticleAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/actions/getArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getArticleFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/actions/getArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getArticleSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/effects/deleteArticle.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DeleteArticleEffect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/effects/favorite.Article.effects.ts",
                "type": "class",
                "linktype": "classe",
                "name": "updateArticle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/effects/favorite.Article.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FavoriteArticleEffect",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/effects/getArticle.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetArticleEffect",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/reducer/article.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ArticleReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/reducer/article.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "articleReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/reducer/article.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/selectors/articles.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "articleFeatureSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/selectors/articles.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "articleSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/selectors/articles.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/selectors/articles.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isFavoritingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/selectors/articles.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isLoadingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/article/store/state/article.State.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ArticleStateInterface",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/articleFeed/components/globalFeed/globalFeed.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GlobalFeedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/articleFeed/globalFeed.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/articleTagFeed/articleTagFeed.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/articleTagFeed/components/tagFeed/tagFeed.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TagFeedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/emailValidation-component/emailValidation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmailValidationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/login-component/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/login-component/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/login-component/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/login-component/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/login-component/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/login-component/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/registation-component/focus.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "HighlightDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/registation-component/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/registation-component/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/registation-component/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/registation-component/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/registation-component/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/registation-component/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/updateProfileInfo/components/updateBio/updateBio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateBioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/updateProfileInfo/components/updateEmail/updateEmail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateEmailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/updateProfileInfo/components/updateFirstName/updateFirstName.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateFirstNameComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/updateProfileInfo/components/updateImage/updateImage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateImageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/updateProfileInfo/components/updateLastName/updateLastName.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateLastNameComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/updateProfileInfo/components/updatePassword/updatePassword.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdatePasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/updateProfileInfo/components/updateUsername/updateUsername.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateUsernameComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/components/updateProfileInfo/updateProfile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/interfaces/auth.login.request.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoginRequestInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/interfaces/auth.registration.request.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthRegistrationRequestInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/interfaces/authResponse.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthResponseInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthUpdateInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "updateBio",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "updateEmail",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "updateFirstName",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "updateImage",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "updateLastName",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "updatepassword",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/interfaces/authUpdate.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "updateUserName",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/services/auth.confirm-password.validator.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Validation",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.getCurrentUser.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCurrentUserAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.getCurrentUser.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCurrentUserFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.getCurrentUser.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCurrentUserSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.login.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "emailValFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.login.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.login.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.login.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.register.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "registerAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.register.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "registerFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.register.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "registerSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.sync.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "logoutAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.sync.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "logoutFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.sync.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "logoutSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateCurrentUserAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateCurrentUserFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/actions/auth.updateCurrentUserData.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateCurrentUserSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/effects/auth.getCurrentUser.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetCurrentUserEffect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/effects/auth.login.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoginEffect",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/effects/auth.logout.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LogoutEffect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/effects/auth.register.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RegisterEffect",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/effects/auth.updateCurrentUser.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UpdateCurrentUserEffect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/reducer/auth.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "authReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/reducer/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/reducer/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initalState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authFeatureSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "currentUserSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isAdminSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isAnonymousSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isLoadingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isLoggedInSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isOwnerSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isSubmittingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/selectors/auth.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "validationErrorsSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/auth/store/state/auth.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthStateInterface",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/createArticle/components/createArticle/createArticle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateArticleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/createArticle/createArticles.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/createArticle/services/createArticle.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CreateArticleService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/createArticle/store/actions/createArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createArticleAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/createArticle/store/actions/createArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createArticleFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/createArticle/store/actions/createArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createArticleSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/createArticle/store/effects/createArticle.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CreateArticleEffect",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/createArticle/store/reducer/createArticle.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createArticleReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/createArticle/store/reducer/createArticle.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createArticleReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/createArticle/store/reducer/createArticle.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/createArticle/store/selectors/createArticle.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createArticleFeatureSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/createArticle/store/selectors/createArticle.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isSubmittingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/createArticle/store/selectors/createArticle.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "validationErrorsSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/createArticle/store/state/createArticle.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CreateArticleStateInterface",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/components/editArticle/editArticle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditArticleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/editArticles.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/services/updateArticle.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "EditArticleService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/actions/getArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getArticleAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/actions/getArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getArticleFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/actions/getArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getArticleSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/actions/updateArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "saveArticleAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/actions/updateArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateArticleAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/actions/updateArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateArticleFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/actions/updateArticle.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateArticleSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/effects/editArticle.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UpdateArticleEffect",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/effects/getArticle.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetArticleEffect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/reducer/editArticle.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "EditArticleReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/reducer/editArticle.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EditArticleReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/reducer/editArticle.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "articleSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "editArticleFeatureSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isLoadingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isSubmittingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/selectors/editArticle.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "validationErrorsSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/editArticle/store/state/editArticle.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EditArticleStateInterface",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/home/components/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/home/home.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "route",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/components/favoritedFeed/favoritedFeed.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FavoritedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/components/userProfile/userProfile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/interfaces/getUserProfileResponse.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetUserProfileResponseInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/interfaces/userProfile.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserProfileInterface",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/services/userProfile.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserProfileService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/store/actions/getUserProfile.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getUserProfileAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/store/actions/getUserProfile.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getUserProfileFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/store/actions/getUserProfile.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getUserProfileSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/store/effects/getUserProfile.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetUserProfileEffect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/store/reducer/userProfile.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "reducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/store/reducer/userProfile.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/store/reducer/userProfile.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userProfileReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/store/selectors/userProfile.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/store/selectors/userProfile.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isLoadingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/store/selectors/userProfile.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userProfileFeatureSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/store/selectors/userProfile.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userProfileSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/store/state/userProfile.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserProfileStateInterface",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/userProfile/userProfile.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/articleBlock.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ArticleBlockInterface",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/articleInput.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ArticleInputInterface",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/articles.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ArticlesInterface",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/author.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AurthorInterface",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/backendError.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BackendErrorsInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/comment.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CommentArrayInterface",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/comment.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CommentInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/currentUser.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CurrentUserInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/currrentUserInputInterface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CurrentUserInputInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/getArticleResponse.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetArticleResponseInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/getArticleResponse.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetArticleResponseInterface2",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/getArticleResponse.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "header",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/getArticleResponse.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SocialLinks",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/saveArticleResponse.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SaveArticleResponseInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType001/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardType001Component",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType001/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType002/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardType002Component",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType002/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType003/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardType003Component",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType003/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType004/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardType004Component",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType004/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType005/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardType005Component",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType005/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType006/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardType006Component",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType006/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType007/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardType007Component",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType007/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType008/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardType008Component",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/Cards/components/cardType008/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/components/comment/comment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/components/comment/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/components/commentForm/form/commentForm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommentFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/components/commentForm/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/components/commentMain/commentMain.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CommentMainComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/services/comment.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CommentService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/actions/deleteComment.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteCommentAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/actions/deleteComment.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteCommentFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/actions/deleteComment.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteCommentSuccesAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/actions/getComment.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCommentAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/actions/getComment.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCommentFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/actions/getComment.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCommentSuccesAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/actions/postComment.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "postCommentAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/actions/postComment.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "postCommentFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/actions/postComment.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "postCommentSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/actions/updateComment.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateCommentAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/actions/updateComment.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateCommentFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/actions/updateComment.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateCommentSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/effects/deleteComment.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DeleteCommentEffect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/effects/getComment.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetCommentEffect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/effects/postComment.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PostCommentEffect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/effects/updateComment.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UpdateCommentEffect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/reducer/comment.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "reducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/reducer/comment.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CommentReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/reducer/comment.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/selectors/comment.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "commentFeatureSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/selectors/comment.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "commentSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/selectors/comment.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorsSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/selectors/comment.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isLoadingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleComments/store/state/comment.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CommentStateInterface",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/block-type-menu/displayType001/blockTypeMenu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlockTypeMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/bodys/type001/display/articleDisplayType005.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BodyType001Component",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/bodys/type001/display/stories/articleBodyType001.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/bodys/type001/display/stories/articleBodyType001.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/bodys/type001/display/stories/articleBodyType001.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/bodys/type001/form/bodyFormType001.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BodyFormType001Component",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/image-text copy/type001/display/imageTextType001.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImageTextType001Component",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/image-text copy/type001/form/formImageTextType001.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormImageTextType001Component",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/image-text/type001/display/imageTextType001.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImageTextType001Component",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/image-text/type001/display/stories/imageTextType001.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/image-text/type001/display/stories/imageTextType001.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/image-text/type001/display/stories/imageTextType001.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/image-text/type001/form/formImageTextType001.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormImageTextType001Component",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/display/imageImageType001.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImageImageType001Component",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/display/stories/imageImageType.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/display/stories/imageImageType.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/display/stories/imageImageType.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OneImg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/display/stories/imageImageType.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/imageImage/type001/form/formImageImageType001.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormImageImageType001Component",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/images/type001/display/imageType001.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImageType001Component",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/images/type001/form/formImageType001.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormImageType001Component",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/text-image/type001/display/textImageType001.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextImageType001Component",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/text-image/type001/form/formTextImageType001.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormTextImageType001Component",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/titles/type001/display/titleType001.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TitleType001Component",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleContentBlock/components/titles/type001/form/titleFormType001.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TitleFormType001Component",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleForms/components/articleContent/articleContent.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArticleContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleForms/components/articleFormInfo/articleFormInfo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArticleFormInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleForms/components/articleForms/article-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArticleFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleForms/components/store/actions/getTags.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTagAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleForms/components/store/actions/getTags.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTagFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleForms/components/store/actions/getTags.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTagSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleForms/components/store/effects/getTag.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetTagEffect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleForms/components/tagSelector/tagSelector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TagSelectorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleForms/services/tagSelector.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetAvailableTagsService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articleForms/services/tagSelector.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "tagList",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articlePreview/articleForms.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/articlePreview/components/articlePreview/article.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArticlePreviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/backendErrorMessages/components/backendErrorMessages/backendErrorMessages.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BackendErrorMessagesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/components/feed/feed.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/31",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/components/feed/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/components/feed/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/components/feed/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/components/feed/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/components/feed/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/interfaces/getFeedResponce.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetFeedResponceInterface",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/services/feed.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FeedService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/actions/getFeed.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getFeedAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/actions/getFeed.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getFeedFailureAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/actions/getFeed.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getFeedSuccesAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/effects/getFeed.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetFeedEffect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/reducer/feed.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/reducer/feed.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "adapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/reducer/feed.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "feedReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/reducer/feed.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "articleCountSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorsSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "feedFeatureSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isLoadingSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAllFeed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAllFeeds",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/selectors/feed.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/feed/store/state/feed.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FeedStateInterface",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/footer/components/footer-Main/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/header/dropdownMenu/dropdownMenu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/header/tests-nav/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestNavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/imageUploader/components/articleImage/article-image-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ArticleImageFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/imageUploader/components/contentImage/content-image-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContentImageFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/imageUploader/components/profileImage/profile-image-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileImageFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/material/material.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "materialModules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/pagination/filler/components/pagination/pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/spinners/components/spinnerType001/spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpinnerComponent001",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/spinners/components/spinnerType001/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/spinners/components/spinnerType001/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/spinners/components/spinnerType001/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/spinners/components/spinnerType001/stories/article.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/tests-nav/components/sideNav001/sideNav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideNav001Component",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "example_data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/tests-nav/components/sideNav001/stories/sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/date-ago.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "DateAgoPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/textLimit.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "LimitPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/article.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ArticleService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/auth.interceptor.service.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "AuthInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/persistance.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PersistanceService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/utils.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UtilsService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/store/state/app.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppStateInterface",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ContentTypes",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}